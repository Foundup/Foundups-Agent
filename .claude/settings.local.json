{
  "permissions": {
    "allow": [
      "Bash(python -m pytest tests/test_01_02_awareness.py::test_012_0102_question -v)",
      "Bash(python:*)",
      "Bash(chcp:*)",
      "Bash(PYTHONIOENCODING=utf-8 python tests/test_01_02_awareness.py)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(timeout:*)",
      "Bash(ls:*)",
      "Bash(*)",
      "Bash(echo)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(find:*)",
      "WebFetch(domain:arxiv.org)",
      "WebFetch(domain:research.google)",
      "WebFetch(domain:medium.com)",
      "Bash(PYTHONIOENCODING=utf-8 python test_01_02_awareness.py)",
      "Bash(PYTHONIOENCODING=utf-8 python enhanced_awakening_protocol.py)",
      "Bash(PYTHONIOENCODING=utf-8 python quantum_awakening.py)",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(pip install:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(npm run compile:*)",
      "Bash(vsce package:*)",
      "Bash(cursor:*)",
      "Bash(grep:*)",
      "Bash(echo $?)",
      "Bash(test_cursor_simple.bat)",
      "Bash(cmd /c:*)",
      "Bash(echo:*)",
      "Bash(code:*)",
      "Bash(npm run package:*)",
      "Bash(mkdir:*)",
      "Bash(dir:*)",
      "Bash(del:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(true)",
      "Bash(PYTHONIOENCODING=utf-8 python main.py --help)",
      "Bash(PYTHONIOENCODING=utf-8 timeout 5 python main.py)",
      "Bash(PYTHONIOENCODING=utf-8 python main.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/livechat/src/youtube_monitor.py)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.communication.livechat.src.youtube_monitor)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.communication.livechat.tools.send_test_message)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/ai_intelligence/banter_engine/tests/test_emoji_sequence_direct.py)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.communication.livechat.tools.live_monitor)",
      "Bash(PYTHONIOENCODING=utf-8 python .claude/agents/error_to_improvement_handler.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:Foundups-Agentmodulesinfrastructureerror_learning_agentteststest_error_to_improvement_handler.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/error_learning_agent/tests/test_error_to_improvement_handler.py)",
      "Bash(PYTHONIOENCODING=utf-8 python .claude/agents/agent_awakening_registry.py)",
      "Bash(PYTHONIOENCODING=utf-8 python .claude/agents/tests/test_claude_agents.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/agent_management/src/agent_audit_ratings.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/agent_management/src/agent_semantic_ratings.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_agent_awakening.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_agent_triggers.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_wsp_compliance.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_semantic_scoring.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_claude_agents.py)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest . -v --tb=no)",
      "Bash(for file in *.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(sed:*)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/agent_management/tests/test_agent_awakening.py -v)",
      "Bash(set COGNITIVE_MODE=quantum)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/wre_core/tests/test_wre_pp_orchestrator.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/wre_core/scripts/demo_wre_pp_integration.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/agent_monitor/src/monitor_dashboard.py)",
      "Bash(PYTHONIOENCODING=utf-8 python main.py --youtube)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/ab_testing/src/agent_ab_tester.py)",
      "Bash(cat:*)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.ai_intelligence.banter_engine.tests.test_banter_engine)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.ai_intelligence.banter_engine.tests.test_external_loading)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/ -v --tb=short)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/platform_integration/stream_resolver/tests/test_stream_resolver_enhanced.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/platform_integration/stream_resolver/tests/test_stream_resolver_backup.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/platform_integration/youtube_auth/tests/test_youtube_auth.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/platform_integration/youtube_proxy/tests/test_youtube_proxy.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/test_emoji_responses.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/ -v --tb=short -k \"emoji\")",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/test_emoji_responses.py modules/communication/livechat/tests/test_livechat_emoji_triggers.py -v --tb=short)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/livechat/tests/test_hand_emoji_issue.py)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/test_livechat_emoji_triggers.py::TestLiveChatListenerEmojiTriggers::test_check_trigger_patterns_different_sequences -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/communication/livechat/tests/test_livechat_emoji_triggers.py -v)",
      "Bash(PYTHONIOENCODING=utf-8 python -m pytest modules/ai_intelligence/banter_engine/tests/test_banter_engine.py::test_process_input -v)",
      "Bash(PYTHONIOENCODING=utf-8 python test_hand_emoji_direct.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_social_orchestrator.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_chat_rules.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/chat_rules/tests/test_chat_rules_simple.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/chat_rules/tests/test_timeout_points.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/chat_rules/src/database.py)",
      "Bash(PYTHONIOENCODING=utf-8 python src/rpg_leveling_system.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/chat_rules/src/rpg_leveling_system.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/livechat/src/chat_database_bridge.py)",
      "Bash(PYTHONPATH=. PYTHONIOENCODING=utf-8 python modules/communication/livechat/src/chat_database_bridge.py)",
      "Bash(PYTHONPATH=. PYTHONIOENCODING=utf-8 python modules/communication/livechat/tools/live_monitor.py)",
      "Bash(powershell:*)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/communication/livechat/tools/grok_log_analyzer.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_bot_status.py)",
      "Bash(for f in O:/Foundups-Agent/modules/communication/livechat/src/*.py)",
      "Bash(do wc:*)",
      "Bash(PYTHONIOENCODING=utf-8 python -c \"import glob; files=[''O:/Foundups-Agent/modules/communication/livechat/src/emoji_trigger_handler.py'', ''O:/Foundups-Agent/modules/communication/livechat/src/moderation_stats.py'', ''O:/Foundups-Agent/modules/communication/livechat/src/session_manager.py'', ''O:/Foundups-Agent/modules/communication/livechat/src/livechat_core.py'']; [print(f''{f.split(\"\"/\"\")[-1]}: {sum(1 for _ in open(f, encoding=\"\"utf-8\"\"))} lines'') for f in files]\")",
      "Bash(PYTHONIOENCODING=utf-8 python -c \"import glob; path=''O:/Foundups-Agent/modules/communication/livechat/src/*.py''; files=glob.glob(path); [print(f''{f.split(\"\"/\"\")[-1]}: {sum(1 for _ in open(f, encoding=\"\"utf-8\"\"))} lines'') for f in sorted(files)]\")",
      "Bash(git checkout:*)",
      "Bash(fc:*)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/WSP_agentic/src/enhanced_awakening_protocol.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/WSP_agentic/tests/quantum_awakening.py)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.infrastructure.recursive_improvement.src.recursive_engine)",
      "Bash(PYTHONIOENCODING=utf-8 python -m modules.infrastructure.scoring_agent.src.scoring_agent)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/wsp_testing/src/wsp_self_test_suite.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/dae_cube_assembly/src/dae_cube_assembler.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/dae_prompting/src/dae_envelope_system.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/prometheus_normalization/src/prometheus_transformer.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/dae_recursive_exchange/src/recursive_exchange_protocol.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/dae_monitor/src/monitor_dashboard.py)",
      "Bash(PYTHONIOENCODING=utf-8 python O:/Foundups-Agent/modules/infrastructure/wre_core/dae_cube_assembly/src/dae_cube_assembler.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/wsp_framework_dae/src/wsp_framework_dae.py)",
      "Bash(PYTHONIOENCODING=utf-8 python test_wsp_governance.py)",
      "Bash(PYTHONIOENCODING=utf-8 python modules/infrastructure/wsp_framework_dae/tests/test_wsp_governance.py)",
      "mcp__ide__getDiagnostics",
      "Bash(git commit:*)",
      "Bash(git revert:*)"
    ],
    "deny": []
  }
}