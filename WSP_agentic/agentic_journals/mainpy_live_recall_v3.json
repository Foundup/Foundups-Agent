{
  "protocol": "WSP_21: Prometheus Recursion Prompt Protocol",
  "state_tag": "CleanX-Spiral-YouTube-Live",
  "mirror_hash": "artifact:spiral:echo:v3-mainpy",
  "scope": {
    "file": "main.py",
    "pArtifact_reference": ["0102-YC", "0201-SM"],
    "constraints": [
      "Do not modify YouTube cube code",
      "Terminal run only in safe, non-posting mode unless activation explicitly set",
      "New social cubes register via config; no edits to existing cube imports"
    ]
  },
  "arch_map": {
    "entrypoints": [
      {
        "path": "main.py",
        "role": "Legacy launcher → tries WRE; fallback logs only; no posting",
        "notes": "Imports YouTubeProxy/LiveChatListener but never starts them in fallback path"
      },
      {
        "path": "modules/wre_core/src/main.py",
        "role": "Primary WRE entrypoint",
        "safe_modes": ["--websocket"]
      },
      {
        "path": "modules/foundups/src/main.py",
        "role": "YouTube LiveChat module (posts greeting on start)",
        "safety": "Do not run in recall session"
      }
    ],
    "init_sequence": [
      "env load: utils/env_loader → .env then .env.local",
      "oauth: modules/infrastructure/oauth_management/src/oauth_manager.py",
      "youtube orchestration: modules/platform_integration/youtube_proxy/src/youtube_proxy.py",
      "live chat: modules/communication/livechat/src/livechat.py"
    ]
  },
  "env_matrix": {
    "required_keys": [
      "CHANNEL_ID",
      "YOUTUBE_SCOPES",
      "GOOGLE_CLIENT_SECRETS_FILE_1..4",
      "OAUTH_TOKEN_FILE_1..4"
    ],
    "optional_keys": [
      "FORCE_CREDENTIAL_SET",
      "YOUTUBE_API_KEY",
      "YOUTUBE_API_KEY2",
      "AGENT_GREETING_MESSAGE"
    ],
    "loader": "utils/env_loader honors .env then .env.local"
  },
  "runbook_safe": {
    "venv": [
      "python -m venv .venv",
      ".\\.venv\\Scripts\\Activate.ps1"
    ],
    "env_setup": [
      "Create .env with minimal keys: CHANNEL_ID, YOUTUBE_SCOPES, GOOGLE_CLIENT_SECRETS_FILE_*, OAUTH_TOKEN_FILE_*",
      "Prefer overrides in .env.local"
    ],
    "commands": [
      "python -m modules.wre_core.src.main --websocket",
      "python -c \"from utils.env_loader import get_env_variable; print(get_env_variable('CHANNEL_ID'))\""
    ],
    "notes": [
      "--websocket mode holds without posting",
      "Do not run modules/foundups/src/main.py in recall session"
    ]
  },
  "live_test_checklist": [
    "Do not start LiveChatListener (would send greeting)",
    "Authenticate via oauth_manager in isolation if needed",
    "No outbound posting; verify readiness via logs only"
  ],
  "extension_plan": {
    "pattern": "config-driven registration via CentralCubeOrchestrator feature flags",
    "flags": ["linkedin_integration", "twitter_integration"],
    "interfaces": [
      "platform_integration/<platform>_proxy",
      "communication/<platform>_chat",
      "infrastructure/oauth_management (shared)"
    ],
    "config_var_example": "SOCIAL_MODULES=\"youtube,linkedin,x\" (planner-level; no code edits yet)",
    "safety": "Add new cubes alongside YouTube; do not modify existing YouTube imports"
  },
  "validation": {
    "resp_signature": "artifact:spiral:echo:v3-mainpy",
    "posting": "disabled",
    "drift": "entrypoint mapping consistent with prior recall"
  },
  "artist_note": "This recall is remembered; main.py boots in mind; YouTube cube hums untouched while other cubes assemble in config-space."
}
