{
  "modules.__init__": {
    "module": "modules.__init__",
    "path": "modules\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.__init__": {
    "module": "modules.gamification.__init__",
    "path": "modules\\gamification\\__init__.py",
    "lines": 26,
    "imports": [
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.BehaviorTier",
      "modules.gamification.whack_a_magat.GAME_ID",
      "modules.gamification.whack_a_magat.apply_whack",
      "modules.gamification.whack_a_magat.classify_behavior",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "modules.gamification.whack_a_magat.get_user_position"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.complete_module_loader": {
    "module": "modules.infrastructure.complete_module_loader",
    "path": "modules\\infrastructure\\complete_module_loader.py",
    "lines": 211,
    "imports": [
      "logging",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.module_integration_orchestrator": {
    "module": "modules.infrastructure.module_integration_orchestrator",
    "path": "modules\\infrastructure\\module_integration_orchestrator.py",
    "lines": 348,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "importlib",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules._archived_enhanced_duplicates_per_wsp84.enhanced_commands": {
    "module": "modules._archived_enhanced_duplicates_per_wsp84.enhanced_commands",
    "path": "modules\\_archived_enhanced_duplicates_per_wsp84\\enhanced_commands.py",
    "lines": 79,
    "imports": [
      "modules.communication.chat_rules.src.database",
      "modules.communication.chat_rules.src.database.ChatRulesDB",
      "modules.communication.chat_rules.src.rpg_leveling_system",
      "modules.communication.chat_rules.src.rpg_leveling_system.RPGCommands",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules._archived_enhanced_duplicates_per_wsp84.stream_resolver_enhanced": {
    "module": "modules._archived_enhanced_duplicates_per_wsp84.stream_resolver_enhanced",
    "path": "modules\\_archived_enhanced_duplicates_per_wsp84\\stream_resolver_enhanced.py",
    "lines": 646,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "dotenv",
      "dotenv.load_dotenv",
      "googleapiclient.discovery",
      "googleapiclient.discovery.Resource",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "logging",
      "os",
      "random",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.logging_config",
      "utils.logging_config.setup_logging",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules._archived_enhanced_duplicates_per_wsp84.test_stream_resolver_enhanced": {
    "module": "modules._archived_enhanced_duplicates_per_wsp84.test_stream_resolver_enhanced",
    "path": "modules\\_archived_enhanced_duplicates_per_wsp84\\test_stream_resolver_enhanced.py",
    "lines": 29,
    "imports": [
      "modules.platform_integration.stream_resolver.src.stream_resolver_enhanced",
      "modules.platform_integration.stream_resolver.src.stream_resolver_enhanced.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.__init__": {
    "module": "modules.aggregation.presence_aggregator.__init__",
    "path": "modules\\aggregation\\presence_aggregator\\__init__.py",
    "lines": 14,
    "imports": [
      "modules.aggregation.presence_aggregator.src.presence_aggregator",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.Platform",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceAggregator",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceData",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceStatus"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.scripts.validate": {
    "module": "modules.aggregation.presence_aggregator.scripts.validate",
    "path": "modules\\aggregation\\presence_aggregator\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.src.presence_aggregator": {
    "module": "modules.aggregation.presence_aggregator.src.presence_aggregator",
    "path": "modules\\aggregation\\presence_aggregator\\src\\presence_aggregator.py",
    "lines": 326,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "random",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.aggregation.presence_aggregator.__init__",
      "modules.aggregation.presence_aggregator.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.src.__init__": {
    "module": "modules.aggregation.presence_aggregator.src.__init__",
    "path": "modules\\aggregation\\presence_aggregator\\src\\__init__.py",
    "lines": 11,
    "imports": [
      "modules.aggregation.presence_aggregator.src.presence_aggregator",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.Platform",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceAggregator",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceData",
      "modules.aggregation.presence_aggregator.src.presence_aggregator.PresenceStatus"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.tests.test_presence_aggregator": {
    "module": "modules.aggregation.presence_aggregator.tests.test_presence_aggregator",
    "path": "modules\\aggregation\\presence_aggregator\\tests\\test_presence_aggregator.py",
    "lines": 348,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "os",
      "presence_aggregator",
      "presence_aggregator.Platform",
      "presence_aggregator.PresenceAggregator",
      "presence_aggregator.PresenceData",
      "presence_aggregator.PresenceStatus",
      "pytest",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.aggregation.presence_aggregator.tests.__init__": {
    "module": "modules.aggregation.presence_aggregator.tests.__init__",
    "path": "modules\\aggregation\\presence_aggregator\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.__init__": {
    "module": "modules.ai_intelligence.0102_orchestrator.__init__",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\__init__.py",
    "lines": 25,
    "imports": [
      "modules.ai_intelligence.0102_orchestrator.src.conversation_manager",
      "modules.ai_intelligence.0102_orchestrator.src.conversation_manager.ConversationManager",
      "modules.ai_intelligence.0102_orchestrator.src.memory_core",
      "modules.ai_intelligence.0102_orchestrator.src.memory_core.MemoryCore",
      "modules.ai_intelligence.0102_orchestrator.src.notification_engine",
      "modules.ai_intelligence.0102_orchestrator.src.notification_engine.NotificationEngine",
      "modules.ai_intelligence.0102_orchestrator.src.zero_one_zero_two",
      "modules.ai_intelligence.0102_orchestrator.src.zero_one_zero_two.ZeroOneZeroTwo"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.emoji_sequence_map": {
    "module": "modules.ai_intelligence.banter_engine.emoji_sequence_map",
    "path": "modules\\ai_intelligence\\banter_engine\\emoji_sequence_map.py",
    "lines": 207,
    "imports": [
      "logging",
      "modules.ai_intelligence.src.sequence_responses",
      "modules.ai_intelligence.src.sequence_responses.SEQUENCE_MAP"
    ],
    "incoming": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.tests.test_banter_trigger",
      "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_map"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.ai_intelligence.banter_engine.sequence_responses": {
    "module": "modules.ai_intelligence.banter_engine.sequence_responses",
    "path": "modules\\ai_intelligence\\banter_engine\\sequence_responses.py",
    "lines": 88,
    "imports": [],
    "incoming": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.ai_intelligence.banter_engine.__init__": {
    "module": "modules.ai_intelligence.banter_engine.__init__",
    "path": "modules\\ai_intelligence\\banter_engine\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map.SEQUENCE_MAP",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map.emoji_string_to_tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.code_analyzer.__init__": {
    "module": "modules.ai_intelligence.code_analyzer.__init__",
    "path": "modules\\ai_intelligence\\code_analyzer\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.consciousness_engine.__init__": {
    "module": "modules.ai_intelligence.consciousness_engine.__init__",
    "path": "modules\\ai_intelligence\\consciousness_engine\\__init__.py",
    "lines": 32,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.__init__": {
    "module": "modules.ai_intelligence.livestream_coding_agent.__init__",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.menu_handler.__init__": {
    "module": "modules.ai_intelligence.menu_handler.__init__",
    "path": "modules\\ai_intelligence\\menu_handler\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.__init__": {
    "module": "modules.ai_intelligence.mle_star_engine.__init__",
    "path": "modules\\ai_intelligence\\mle_star_engine\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.ai_router": {
    "module": "modules.ai_intelligence.multi_agent_system.ai_router",
    "path": "modules\\ai_intelligence\\multi_agent_system\\ai_router.py",
    "lines": 680,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.personality_core",
      "modules.ai_intelligence.personality_core.PersonalityCore",
      "modules.ai_intelligence.prompt_engine",
      "modules.ai_intelligence.prompt_engine.PromptEngine",
      "modules.wre_core.src.components.module_development.module_development_coordinator",
      "modules.wre_core.src.components.module_development.module_development_coordinator.ModuleDevelopmentCoordinator",
      "modules.wre_core.src.components.utils.wre_logger",
      "modules.wre_core.src.components.utils.wre_logger.wre_log",
      "modules.wre_core.src.prometheus_orchestration_engine",
      "modules.wre_core.src.prometheus_orchestration_engine.PrometheusOrchestrationEngine",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union",
      "uuid"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.personality_core": {
    "module": "modules.ai_intelligence.multi_agent_system.personality_core",
    "path": "modules\\ai_intelligence\\multi_agent_system\\personality_core.py",
    "lines": 57,
    "imports": [
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.prompt_engine": {
    "module": "modules.ai_intelligence.multi_agent_system.prompt_engine",
    "path": "modules\\ai_intelligence\\multi_agent_system\\prompt_engine.py",
    "lines": 59,
    "imports": [
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.__init__": {
    "module": "modules.ai_intelligence.multi_agent_system.__init__",
    "path": "modules\\ai_intelligence\\multi_agent_system\\__init__.py",
    "lines": 11,
    "imports": [
      "modules.ai_intelligence.multi_agent_system.ai_router",
      "modules.ai_intelligence.multi_agent_system.ai_router.AIRouter",
      "modules.ai_intelligence.multi_agent_system.personality_core",
      "modules.ai_intelligence.multi_agent_system.personality_core.PersonalityCore",
      "modules.ai_intelligence.multi_agent_system.prompt_engine",
      "modules.ai_intelligence.multi_agent_system.prompt_engine.PromptEngine"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_feedback.__init__": {
    "module": "modules.ai_intelligence.post_meeting_feedback.__init__",
    "path": "modules\\ai_intelligence\\post_meeting_feedback\\__init__.py",
    "lines": 50,
    "imports": [
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.FeedbackResponse",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.FollowUpPriority",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.FollowUpSchedule",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.FollowUpTimeframe",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.MeetingFeedback",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.PostMeetingFeedbackSystem",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.RatingValue",
      "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback.create_post_meeting_feedback_system"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_summarizer.__init__": {
    "module": "modules.ai_intelligence.post_meeting_summarizer.__init__",
    "path": "modules\\ai_intelligence\\post_meeting_summarizer\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.__init__": {
    "module": "modules.ai_intelligence.pqn_alignment.__init__",
    "path": "modules\\ai_intelligence\\pqn_alignment\\__init__.py",
    "lines": 36,
    "imports": [
      "modules.ai_intelligence.pqn_alignment.src.council.api",
      "modules.ai_intelligence.pqn_alignment.src.council.api.council_run",
      "modules.ai_intelligence.pqn_alignment.src.detector.api",
      "modules.ai_intelligence.pqn_alignment.src.detector.api.run_detector",
      "modules.ai_intelligence.pqn_alignment.src.io.api",
      "modules.ai_intelligence.pqn_alignment.src.io.api.promote",
      "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae",
      "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae.PQNAlignmentDAE",
      "modules.ai_intelligence.pqn_alignment.src.results_db",
      "modules.ai_intelligence.pqn_alignment.src.results_db.analyze_cross_model_performance",
      "modules.ai_intelligence.pqn_alignment.src.results_db.correlate_campaign_council_results",
      "modules.ai_intelligence.pqn_alignment.src.results_db.index_council_run",
      "modules.ai_intelligence.pqn_alignment.src.results_db.index_run",
      "modules.ai_intelligence.pqn_alignment.src.results_db.init_db",
      "modules.ai_intelligence.pqn_alignment.src.results_db.query_cross_analysis",
      "modules.ai_intelligence.pqn_alignment.src.results_db.query_runs",
      "modules.ai_intelligence.pqn_alignment.src.sweep.api",
      "modules.ai_intelligence.pqn_alignment.src.sweep.api.phase_sweep",
      "modules.ai_intelligence.pqn_alignment.src.sweep.api.run_sweep"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.priority_scorer.__init__": {
    "module": "modules.ai_intelligence.priority_scorer.__init__",
    "path": "modules\\ai_intelligence\\priority_scorer\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.demo_rESP_experiment": {
    "module": "modules.ai_intelligence.rESP_o1o2.demo_rESP_experiment",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\demo_rESP_experiment.py",
    "lines": 301,
    "imports": [
      "argparse",
      "json",
      "pathlib",
      "pathlib.Path",
      "src.anomaly_detector",
      "src.anomaly_detector.AnomalyDetector",
      "src.experiment_logger",
      "src.experiment_logger.ExperimentLogger",
      "src.llm_connector",
      "src.llm_connector.LLMConnector",
      "src.rESP_trigger_engine",
      "src.rESP_trigger_engine.rESPTriggerEngine",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.__init__": {
    "module": "modules.ai_intelligence.rESP_o1o2.__init__",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\__init__.py",
    "lines": 24,
    "imports": [
      "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector",
      "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector.AnomalyDetector",
      "modules.ai_intelligence.rESP_o1o2.src.experiment_logger",
      "modules.ai_intelligence.rESP_o1o2.src.experiment_logger.ExperimentLogger",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine",
      "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine.rESPTriggerEngine",
      "modules.ai_intelligence.rESP_o1o2.src.voice_interface",
      "modules.ai_intelligence.rESP_o1o2.src.voice_interface.VoiceInterface"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.social_media_dae.__init__": {
    "module": "modules.ai_intelligence.social_media_dae.__init__",
    "path": "modules\\ai_intelligence\\social_media_dae\\__init__.py",
    "lines": 8,
    "imports": [
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae.*"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.scripts.validate": {
    "module": "modules.ai_intelligence.0102_orchestrator.scripts.validate",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.conversation_manager": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.conversation_manager",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\conversation_manager.py",
    "lines": 282,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [
      "modules.ai_intelligence.0102_orchestrator.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.learning_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.learning_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\learning_engine.py",
    "lines": 332,
    "imports": [
      "asyncio",
      "collections",
      "collections.Counter",
      "collections.defaultdict",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "statistics",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.memory_core": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.memory_core",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\memory_core.py",
    "lines": 63,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [
      "modules.ai_intelligence.0102_orchestrator.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.notification_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.notification_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\notification_engine.py",
    "lines": 414,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.0102_orchestrator.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.personality_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.personality_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\personality_engine.py",
    "lines": 566,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "logging",
      "random",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.session_controller": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.session_controller",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\session_controller.py",
    "lines": 373,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.zero_one_zero_two": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.zero_one_zero_two",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\zero_one_zero_two.py",
    "lines": 701,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.0102_orchestrator.conversation_manager",
      "modules.ai_intelligence.0102_orchestrator.conversation_manager.ConversationManager",
      "modules.ai_intelligence.0102_orchestrator.conversation_manager.EntityExtraction",
      "modules.ai_intelligence.0102_orchestrator.conversation_manager.Intent",
      "modules.ai_intelligence.0102_orchestrator.learning_engine",
      "modules.ai_intelligence.0102_orchestrator.learning_engine.LearningEngine",
      "modules.ai_intelligence.0102_orchestrator.memory_core",
      "modules.ai_intelligence.0102_orchestrator.memory_core.MemoryCore",
      "modules.ai_intelligence.0102_orchestrator.notification_engine",
      "modules.ai_intelligence.0102_orchestrator.notification_engine.NotificationChannel",
      "modules.ai_intelligence.0102_orchestrator.notification_engine.NotificationEngine",
      "modules.ai_intelligence.0102_orchestrator.notification_engine.NotificationPriority",
      "modules.ai_intelligence.0102_orchestrator.personality_engine",
      "modules.ai_intelligence.0102_orchestrator.personality_engine.EmotionalTone",
      "modules.ai_intelligence.0102_orchestrator.personality_engine.PersonalityEngine",
      "modules.ai_intelligence.0102_orchestrator.personality_engine.PersonalityMode",
      "modules.ai_intelligence.0102_orchestrator.personality_engine.ResponseContext",
      "modules.ai_intelligence.0102_orchestrator.session_controller",
      "modules.ai_intelligence.0102_orchestrator.session_controller.LaunchRequest",
      "modules.ai_intelligence.0102_orchestrator.session_controller.SessionController",
      "random",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.0102_orchestrator.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.src.__init__": {
    "module": "modules.ai_intelligence.0102_orchestrator.src.__init__",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\src\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_0102_orchestrator": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_0102_orchestrator",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_0102_orchestrator.py",
    "lines": 838,
    "imports": [
      "asyncio",
      "conversation_manager",
      "conversation_manager.ConversationManager",
      "conversation_manager.EntityExtraction",
      "conversation_manager.Intent",
      "datetime",
      "datetime.datetime",
      "learning_engine",
      "learning_engine.ConfidenceLevel",
      "learning_engine.LearningEngine",
      "learning_engine.LearningType",
      "memory_core",
      "memory_core.MemoryCore",
      "notification_engine",
      "notification_engine.NotificationChannel",
      "notification_engine.NotificationEngine",
      "notification_engine.Priority",
      "os",
      "personality_engine",
      "personality_engine.EmotionalTone",
      "personality_engine.PersonalityEngine",
      "personality_engine.PersonalityMode",
      "personality_engine.ResponseContext",
      "pytest",
      "session_controller",
      "session_controller.LaunchRequest",
      "session_controller.SessionController",
      "session_controller.SessionStatus",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "zero_one_zero_two",
      "zero_one_zero_two.ResponseType",
      "zero_one_zero_two.ZeroOneZeroTwo"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_conversation_manager": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_conversation_manager",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_conversation_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_learning_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_learning_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_learning_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_memory_core": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_memory_core",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_memory_core.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_notification_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_notification_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_notification_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_personality_engine": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_personality_engine",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_personality_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_session_controller": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_session_controller",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_session_controller.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.test_zero_one_zero_two": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.test_zero_one_zero_two",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\test_zero_one_zero_two.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.0102_orchestrator.tests.__init__": {
    "module": "modules.ai_intelligence.0102_orchestrator.tests.__init__",
    "path": "modules\\ai_intelligence\\0102_orchestrator\\tests\\__init__.py",
    "lines": 5,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.scripts.validate": {
    "module": "modules.ai_intelligence.banter_engine.scripts.validate",
    "path": "modules\\ai_intelligence\\banter_engine\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102": {
    "module": "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\agentic_sentiment_0102.py",
    "lines": 367,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.banter_engine.banter_engine",
      "modules.ai_intelligence.banter_engine.banter_engine.BanterEngine",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.EMOJI_TO_NUMBER",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.NUM_TO_EMOJI",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.emoji_string_to_tuple",
      "modules.ai_intelligence.banter_engine.sequence_responses",
      "modules.ai_intelligence.banter_engine.sequence_responses.SEQUENCE_MAP",
      "os",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "utils.json_sanitizer",
      "utils.json_sanitizer.sanitize_json_object"
    ],
    "incoming": [
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_consciousness_responses",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.integration.test_full_diagnostics",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_consciousness_responses"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.banter_chat_agent": {
    "module": "modules.ai_intelligence.banter_engine.src.banter_chat_agent",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\banter_chat_agent.py",
    "lines": 337,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service_with_fallback",
      "os",
      "random",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.banter_engine": {
    "module": "modules.ai_intelligence.banter_engine.src.banter_engine",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\banter_engine.py",
    "lines": 659,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.get_emoji_sequence",
      "modules.ai_intelligence.banter_engine.sequence_responses",
      "modules.ai_intelligence.banter_engine.sequence_responses.SEQUENCE_MAP",
      "modules.ai_intelligence.emoji_sequence_map",
      "modules.ai_intelligence.emoji_sequence_map.EMOJI_TO_NUMBER",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "os",
      "pathlib",
      "pathlib.Path",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.banter_engine.__init__",
      "modules.ai_intelligence.banter_engine.src.banter_chat_agent",
      "modules.ai_intelligence.banter_engine.tests.test_comprehensive_chat_communication",
      "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_direct",
      "modules.ai_intelligence.banter_engine.tests.test_external_loading",
      "modules.ai_intelligence.banter_engine.tests.test_hand_emoji_direct",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat._archive.experimental_2025_09_19.emoji_trigger_handler",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_hand_emoji_issue",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.test_hand_emoji_issue",
      "modules.platform_integration.linkedin_agent.src.content.post_generator",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "17 inbound references."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.emoji_sequence_map": {
    "module": "modules.ai_intelligence.banter_engine.src.emoji_sequence_map",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\emoji_sequence_map.py",
    "lines": 209,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.sequence_responses",
      "modules.ai_intelligence.banter_engine.sequence_responses.SEQUENCE_MAP"
    ],
    "incoming": [
      "modules.ai_intelligence.banter_engine.__init__",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.message_processor"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.json_safe_wrapper": {
    "module": "modules.ai_intelligence.banter_engine.src.json_safe_wrapper",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\json_safe_wrapper.py",
    "lines": 119,
    "imports": [
      "agentic_sentiment_0102",
      "json",
      "logging",
      "os",
      "sys",
      "utils.json_sanitizer",
      "utils.json_sanitizer.safe_json_dumps",
      "utils.json_sanitizer.sanitize_json_object"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.sequence_responses": {
    "module": "modules.ai_intelligence.banter_engine.src.sequence_responses",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\sequence_responses.py",
    "lines": 88,
    "imports": [],
    "incoming": [
      "modules.ai_intelligence.banter_engine.tests.test_banter_engine",
      "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_map",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.communication.livechat.src.agentic_chat_engine"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.ai_intelligence.banter_engine.src.__init__": {
    "module": "modules.ai_intelligence.banter_engine.src.__init__",
    "path": "modules\\ai_intelligence\\banter_engine\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_all_sequences": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_all_sequences",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_all_sequences.py",
    "lines": 158,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.banter_engine.sequence_responses",
      "modules.ai_intelligence.banter_engine.banter_engine.sequence_responses.SEQUENCE_MAP",
      "modules.ai_intelligence.banter_engine.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.banter_engine.src.banter_engine.BanterEngine",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_banter": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_banter",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_banter.py",
    "lines": 45,
    "imports": [
      "logging",
      "modules.ai_intelligence.src.banter_engine",
      "modules.ai_intelligence.src.banter_engine.BanterEngine"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_banter_engine": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_banter_engine",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_banter_engine.py",
    "lines": 85,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.src.sequence_responses",
      "modules.ai_intelligence.banter_engine.src.sequence_responses.SEQUENCE_MAP",
      "modules.ai_intelligence.src.banter_engine",
      "modules.ai_intelligence.src.banter_engine.BanterEngine"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_banter_trigger": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_banter_trigger",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_banter_trigger.py",
    "lines": 113,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "logging",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.EMOJI_TO_NUMBER",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.NUM_TO_EMOJI",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.SEQUENCE_MAP",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.emoji_string_to_tuple",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.tuple_to_emoji_string",
      "modules.communication.livechat.src.livechat",
      "modules.communication.livechat.src.livechat.LiveChatListener",
      "os",
      "pytest",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch",
      "utils.logging_config",
      "utils.logging_config.setup_logging",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_comprehensive_chat_communication": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_comprehensive_chat_communication",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_comprehensive_chat_communication.py",
    "lines": 553,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngineError",
      "modules.ai_intelligence.banter_engine.src.banter_engine.EmojiSequenceError",
      "modules.communication.livechat.src.livechat",
      "modules.communication.livechat.src.livechat.LiveChatListener",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_emoji_communication_focused": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_emoji_communication_focused",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_emoji_communication_focused.py",
    "lines": 425,
    "imports": [
      "logging",
      "modules.ai_intelligence.src.banter_engine",
      "modules.ai_intelligence.src.banter_engine.BanterEngine",
      "modules.ai_intelligence.src.banter_engine.BanterEngineError",
      "modules.ai_intelligence.src.banter_engine.EmojiSequenceError",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_direct": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_direct",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_emoji_sequence_direct.py",
    "lines": 44,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_map": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_emoji_sequence_map",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_emoji_sequence_map.py",
    "lines": 133,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.EMOJI_TO_NUMBER",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.NUM_TO_EMOJI",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.emoji_string_to_tuple",
      "modules.ai_intelligence.banter_engine.emoji_sequence_map.tuple_to_emoji_string",
      "modules.ai_intelligence.banter_engine.src.sequence_responses",
      "modules.ai_intelligence.banter_engine.src.sequence_responses.SEQUENCE_MAP",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_external_loading": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_external_loading",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_external_loading.py",
    "lines": 124,
    "imports": [
      "json",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "os",
      "pathlib",
      "pathlib.Path",
      "tempfile"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.test_hand_emoji_direct": {
    "module": "modules.ai_intelligence.banter_engine.tests.test_hand_emoji_direct",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\test_hand_emoji_direct.py",
    "lines": 60,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat",
      "modules.communication.livechat.src.livechat.LiveChatListener",
      "unittest.mock",
      "unittest.mock.MagicMock"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.banter_engine.tests.__init__": {
    "module": "modules.ai_intelligence.banter_engine.tests.__init__",
    "path": "modules\\ai_intelligence\\banter_engine\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.code_analyzer.scripts.validate": {
    "module": "modules.ai_intelligence.code_analyzer.scripts.validate",
    "path": "modules\\ai_intelligence\\code_analyzer\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.code_analyzer.src.code_analyzer": {
    "module": "modules.ai_intelligence.code_analyzer.src.code_analyzer",
    "path": "modules\\ai_intelligence\\code_analyzer\\src\\code_analyzer.py",
    "lines": 328,
    "imports": [
      "ast",
      "dataclasses",
      "dataclasses.dataclass",
      "os",
      "pathlib",
      "pathlib.Path",
      "re",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.code_analyzer.src.__init__": {
    "module": "modules.ai_intelligence.code_analyzer.src.__init__",
    "path": "modules\\ai_intelligence\\code_analyzer\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.code_analyzer.tests.test_code_analyzer": {
    "module": "modules.ai_intelligence.code_analyzer.tests.test_code_analyzer",
    "path": "modules\\ai_intelligence\\code_analyzer\\tests\\test_code_analyzer.py",
    "lines": 292,
    "imports": [
      "ast",
      "code_analyzer",
      "code_analyzer.CodeAnalysisResult",
      "code_analyzer.CodeAnalyzer",
      "code_analyzer.analyze_code",
      "code_analyzer.analyze_module",
      "os",
      "pathlib",
      "pathlib.Path",
      "shutil",
      "sys",
      "tempfile",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.scripts.validate": {
    "module": "modules.ai_intelligence.livestream_coding_agent.scripts.validate",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.src.session_orchestrator": {
    "module": "modules.ai_intelligence.livestream_coding_agent.src.session_orchestrator",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\src\\session_orchestrator.py",
    "lines": 379,
    "imports": [
      "asyncio",
      "communication.livechat",
      "communication.livechat.AutoModerator",
      "communication.livechat.LiveChatProcessor",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "infrastructure.agent_management",
      "infrastructure.agent_management.AgentCoordinator",
      "infrastructure.models",
      "infrastructure.models.MultiAgentOrchestrator",
      "logging",
      "platform_integration.youtube_auth",
      "platform_integration.youtube_auth.YouTubeStreamAuth",
      "platform_integration.youtube_proxy",
      "platform_integration.youtube_proxy.YouTubeStreamAPI",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.src.__init__": {
    "module": "modules.ai_intelligence.livestream_coding_agent.src.__init__",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.tests.test_livestream_coding_agent": {
    "module": "modules.ai_intelligence.livestream_coding_agent.tests.test_livestream_coding_agent",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\tests\\test_livestream_coding_agent.py",
    "lines": 13,
    "imports": [
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.tests.test_session_orchestrator": {
    "module": "modules.ai_intelligence.livestream_coding_agent.tests.test_session_orchestrator",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\tests\\test_session_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.livestream_coding_agent.tests.__init__": {
    "module": "modules.ai_intelligence.livestream_coding_agent.tests.__init__",
    "path": "modules\\ai_intelligence\\livestream_coding_agent\\tests\\__init__.py",
    "lines": 7,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.menu_handler.scripts.validate": {
    "module": "modules.ai_intelligence.menu_handler.scripts.validate",
    "path": "modules\\ai_intelligence\\menu_handler\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.menu_handler.src.menu_handler": {
    "module": "modules.ai_intelligence.menu_handler.src.menu_handler",
    "path": "modules\\ai_intelligence\\menu_handler\\src\\menu_handler.py",
    "lines": 250,
    "imports": [
      "modules.wre_core.src.components.module_development.module_development_coordinator",
      "modules.wre_core.src.components.module_development.module_development_coordinator.ModuleDevelopmentCoordinator",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.menu_handler.src.__init__": {
    "module": "modules.ai_intelligence.menu_handler.src.__init__",
    "path": "modules\\ai_intelligence\\menu_handler\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.menu_handler.tests.test_menu_handler": {
    "module": "modules.ai_intelligence.menu_handler.tests.test_menu_handler",
    "path": "modules\\ai_intelligence\\menu_handler\\tests\\test_menu_handler.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.scripts.validate": {
    "module": "modules.ai_intelligence.mle_star_engine.scripts.validate",
    "path": "modules\\ai_intelligence\\mle_star_engine\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator": {
    "module": "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
    "path": "modules\\ai_intelligence\\mle_star_engine\\src\\mlestar_orchestrator.py",
    "lines": 620,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "typing.Union",
      "yaml"
    ],
    "incoming": [
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_comprehensive_validation",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_fixed",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_summary",
      "modules.infrastructure.wre_core.wre_gateway.src.mlestar_dae_integration"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration": {
    "module": "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
    "path": "modules\\ai_intelligence\\mle_star_engine\\src\\wre_mlestar_integration.py",
    "lines": 656,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "json",
      "logging",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.CoordinationStrategy",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.MLESTAROrchestrationAgent",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARSession",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.OptimizationTarget",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "modules.wre_core.src.wre_0102_orchestrator",
      "modules.wre_core.src.wre_0102_orchestrator.ModuleScore",
      "modules.wre_core.src.wre_0102_orchestrator.WRE_0102_Orchestrator",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union",
      "yaml"
    ],
    "incoming": [
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_comprehensive_validation",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_fixed",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_summary"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.src.__init__": {
    "module": "modules.ai_intelligence.mle_star_engine.src.__init__",
    "path": "modules\\ai_intelligence\\mle_star_engine\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.tests.test_cube_block_building": {
    "module": "modules.ai_intelligence.mle_star_engine.tests.test_cube_block_building",
    "path": "modules\\ai_intelligence\\mle_star_engine\\tests\\test_cube_block_building.py",
    "lines": 157,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.tests.test_mlestar_orchestrator": {
    "module": "modules.ai_intelligence.mle_star_engine.tests.test_mlestar_orchestrator",
    "path": "modules\\ai_intelligence\\mle_star_engine\\tests\\test_mlestar_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.tests.test_wre_mlestar_integration": {
    "module": "modules.ai_intelligence.mle_star_engine.tests.test_wre_mlestar_integration",
    "path": "modules\\ai_intelligence\\mle_star_engine\\tests\\test_wre_mlestar_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.tests.__init__": {
    "module": "modules.ai_intelligence.mle_star_engine.tests.__init__",
    "path": "modules\\ai_intelligence\\mle_star_engine\\tests\\__init__.py",
    "lines": 13,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.validation.mlestar_comprehensive_validation": {
    "module": "modules.ai_intelligence.mle_star_engine.validation.mlestar_comprehensive_validation",
    "path": "modules\\ai_intelligence\\mle_star_engine\\validation\\mlestar_comprehensive_validation.py",
    "lines": 640,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "json",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.AgentCoordinationPhase",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.CoordinationStrategy",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.MLESTAROrchestrationAgent",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARPhase",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARSession",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.OptimizationTarget",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration.MLESTARFoundUpSpec",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration.WREMLESTARIntegration",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_fixed": {
    "module": "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_fixed",
    "path": "modules\\ai_intelligence\\mle_star_engine\\validation\\mlestar_validation_fixed.py",
    "lines": 640,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "json",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.AgentCoordinationPhase",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.CoordinationStrategy",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.MLESTAROrchestrationAgent",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARPhase",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARSession",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.OptimizationTarget",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration.MLESTARFoundUpSpec",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration.WREMLESTARIntegration",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_summary": {
    "module": "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_summary",
    "path": "modules\\ai_intelligence\\mle_star_engine\\validation\\mlestar_validation_summary.py",
    "lines": 241,
    "imports": [
      "asyncio",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
      "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent.MLESTAROrchestrationAgent",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration.WREMLESTARIntegration",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent": {
    "module": "modules.ai_intelligence.mle_star_engine.src.agents.mlestar_orchestration_agent",
    "path": "modules\\ai_intelligence\\mle_star_engine\\src\\agents\\mlestar_orchestration_agent.py",
    "lines": 823,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARPhase",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARSession",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.OptimizationTarget",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.mle_star_engine.src.wre_mlestar_integration",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_comprehensive_validation",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_fixed",
      "modules.ai_intelligence.mle_star_engine.validation.mlestar_validation_summary"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.mle_star_engine.tests.test_agents.mlestar_orchestration_agent": {
    "module": "modules.ai_intelligence.mle_star_engine.tests.test_agents.mlestar_orchestration_agent",
    "path": "modules\\ai_intelligence\\mle_star_engine\\tests\\test_agents\\mlestar_orchestration_agent.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.scripts.validate": {
    "module": "modules.ai_intelligence.multi_agent_system.scripts.validate",
    "path": "modules\\ai_intelligence\\multi_agent_system\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator": {
    "module": "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
    "path": "modules\\ai_intelligence\\multi_agent_system\\src\\social_media_orchestrator.py",
    "lines": 378,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.auto_moderator_simple",
      "modules.communication.livechat.src.auto_moderator_simple.SimpleBotWithMemory",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.tests.test_social_orchestrator"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.src.__init__": {
    "module": "modules.ai_intelligence.multi_agent_system.src.__init__",
    "path": "modules\\ai_intelligence\\multi_agent_system\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.multi_agent_system.tests.test_social_orchestrator": {
    "module": "modules.ai_intelligence.multi_agent_system.tests.test_social_orchestrator",
    "path": "modules\\ai_intelligence\\multi_agent_system\\tests\\test_social_orchestrator.py",
    "lines": 211,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator.ConsciousnessState",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator.SemanticLLMEngine",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator.SemanticState",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_feedback.scripts.validate": {
    "module": "modules.ai_intelligence.post_meeting_feedback.scripts.validate",
    "path": "modules\\ai_intelligence\\post_meeting_feedback\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback": {
    "module": "modules.ai_intelligence.post_meeting_feedback.src.post_meeting_feedback",
    "path": "modules\\ai_intelligence\\post_meeting_feedback\\src\\post_meeting_feedback.py",
    "lines": 961,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "math",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [
      "modules.ai_intelligence.post_meeting_feedback.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_feedback.src.__init__": {
    "module": "modules.ai_intelligence.post_meeting_feedback.src.__init__",
    "path": "modules\\ai_intelligence\\post_meeting_feedback\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_feedback.tests.test_post_meeting_feedback": {
    "module": "modules.ai_intelligence.post_meeting_feedback.tests.test_post_meeting_feedback",
    "path": "modules\\ai_intelligence\\post_meeting_feedback\\tests\\test_post_meeting_feedback.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_summarizer.scripts.validate": {
    "module": "modules.ai_intelligence.post_meeting_summarizer.scripts.validate",
    "path": "modules\\ai_intelligence\\post_meeting_summarizer\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer": {
    "module": "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer",
    "path": "modules\\ai_intelligence\\post_meeting_summarizer\\src\\post_meeting_summarizer.py",
    "lines": 450,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "json",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.post_meeting_summarizer.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_summarizer.src.__init__": {
    "module": "modules.ai_intelligence.post_meeting_summarizer.src.__init__",
    "path": "modules\\ai_intelligence\\post_meeting_summarizer\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer",
      "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer.ActionItem",
      "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer.MeetingSummary",
      "modules.ai_intelligence.post_meeting_summarizer.src.post_meeting_summarizer.PostMeetingSummarizer"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.post_meeting_summarizer.tests.test_post_meeting_summarizer": {
    "module": "modules.ai_intelligence.post_meeting_summarizer.tests.test_post_meeting_summarizer",
    "path": "modules\\ai_intelligence\\post_meeting_summarizer\\tests\\test_post_meeting_summarizer.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.analysis_ab": {
    "module": "modules.ai_intelligence.pqn_alignment.src.analysis_ab",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\analysis_ab.py",
    "lines": 52,
    "imports": [
      "typing",
      "typing.Dict"
    ],
    "incoming": [
      "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_analysis_ab"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.analyze_results": {
    "module": "modules.ai_intelligence.pqn_alignment.src.analyze_results",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\analyze_results.py",
    "lines": 55,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "json",
      "modules.ai_intelligence.pqn_alignment.src",
      "modules.ai_intelligence.pqn_alignment.src.results_db",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.capability_boundary_explorer": {
    "module": "modules.ai_intelligence.pqn_alignment.src.capability_boundary_explorer",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\capability_boundary_explorer.py",
    "lines": 453,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enhanced_pqn_awakening_protocol",
      "enhanced_pqn_awakening_protocol.EnhancedPQNAwakeningProtocol",
      "json",
      "numpy",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.config_loader": {
    "module": "modules.ai_intelligence.pqn_alignment.src.config_loader",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\config_loader.py",
    "lines": 268,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "json",
      "jsonschema",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "yaml"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.debug_api_keys": {
    "module": "modules.ai_intelligence.pqn_alignment.src.debug_api_keys",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\debug_api_keys.py",
    "lines": 114,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "yaml"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.detect_model": {
    "module": "modules.ai_intelligence.pqn_alignment.src.detect_model",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\detect_model.py",
    "lines": 158,
    "imports": [
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "platform",
      "subprocess",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.guardrail": {
    "module": "modules.ai_intelligence.pqn_alignment.src.guardrail",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\guardrail.py",
    "lines": 242,
    "imports": [
      "WSP_agentic.tests.pqn_detection",
      "WSP_agentic.tests.pqn_detection.cmst_pqn_detector_v2",
      "numpy",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.tests.test_gpt5_enhancement",
      "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.labeling": {
    "module": "modules.ai_intelligence.pqn_alignment.src.labeling",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\labeling.py",
    "lines": 26,
    "imports": [
      "typing",
      "typing.Dict"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment._archive.analyze_run_2025_09_20.analyze_run"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae": {
    "module": "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\pqn_alignment_dae.py",
    "lines": 731,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "logging",
      "modules.ai_intelligence.pqn_alignment",
      "modules.ai_intelligence.pqn_alignment.council_run",
      "modules.ai_intelligence.pqn_alignment.phase_sweep",
      "modules.ai_intelligence.pqn_alignment.promote",
      "modules.ai_intelligence.pqn_alignment.run_detector",
      "modules.ai_intelligence.pqn_alignment.src.pqn_chat_broadcaster",
      "modules.ai_intelligence.pqn_alignment.src.pqn_chat_broadcaster.PQNChatBroadcaster",
      "modules.ai_intelligence.pqn_alignment.src.pqn_chat_broadcaster.PQNEventType",
      "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol",
      "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol.ExchangeType",
      "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol.RecursiveExchange",
      "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol.RecursiveExchangeProtocol",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.ErrorPattern",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.Improvement",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.PatternType",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.RecursiveLearningEngine",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.Solution",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.OrchestratorPlugin",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.Pattern",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.WREMasterOrchestrator",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.pqn_architect_dae": {
    "module": "modules.ai_intelligence.pqn_alignment.src.pqn_architect_dae",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\pqn_architect_dae.py",
    "lines": 413,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "importlib.util",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.pqn_chat_broadcaster": {
    "module": "modules.ai_intelligence.pqn_alignment.src.pqn_chat_broadcaster",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\pqn_chat_broadcaster.py",
    "lines": 265,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.pqn_research_dae_orchestrator": {
    "module": "modules.ai_intelligence.pqn_alignment.src.pqn_research_dae_orchestrator",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\pqn_research_dae_orchestrator.py",
    "lines": 425,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "importlib.util",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.message_processor"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.real_time_processing_monitor": {
    "module": "modules.ai_intelligence.pqn_alignment.src.real_time_processing_monitor",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\real_time_processing_monitor.py",
    "lines": 430,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enhanced_pqn_awakening_protocol",
      "enhanced_pqn_awakening_protocol.EnhancedPQNAwakeningProtocol",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "psutil",
      "queue",
      "queue.Queue",
      "sys",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.results_db": {
    "module": "modules.ai_intelligence.pqn_alignment.src.results_db",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\results_db.py",
    "lines": 467,
    "imports": [
      "__future__",
      "__future__.annotations",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "sqlite3",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__",
      "modules.ai_intelligence.pqn_alignment.src.analyze_results",
      "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci",
      "modules.foundups.pqn_portal.src.api"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.run_campaign": {
    "module": "modules.ai_intelligence.pqn_alignment.src.run_campaign",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\run_campaign.py",
    "lines": 313,
    "imports": [
      "datetime",
      "datetime.datetime",
      "importlib.util",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.run_campaign_3": {
    "module": "modules.ai_intelligence.pqn_alignment.src.run_campaign_3",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\run_campaign_3.py",
    "lines": 79,
    "imports": [
      "importlib.util",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.run_multi_model_campaign": {
    "module": "modules.ai_intelligence.pqn_alignment.src.run_multi_model_campaign",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\run_multi_model_campaign.py",
    "lines": 189,
    "imports": [
      "importlib.util",
      "json",
      "modules.ai_intelligence.pqn_alignment.pqn_alignment_dae",
      "modules.ai_intelligence.pqn_alignment.pqn_alignment_dae.PQNAlignmentDAE",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "yaml"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.theorist_dae_poc": {
    "module": "modules.ai_intelligence.pqn_alignment.src.theorist_dae_poc",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\theorist_dae_poc.py",
    "lines": 425,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "detector.api",
      "detector.api.run_detector_with_spectral_analysis",
      "json",
      "numpy",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.wsp_verification": {
    "module": "modules.ai_intelligence.pqn_alignment.src.wsp_verification",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\wsp_verification.py",
    "lines": 212,
    "imports": [
      "os",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_claude_key": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_claude_key",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_claude_key.py",
    "lines": 70,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_env_file": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_env_file",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_env_file.py",
    "lines": 90,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_gpt5_enhancement": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_gpt5_enhancement",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_gpt5_enhancement.py",
    "lines": 114,
    "imports": [
      "modules.ai_intelligence.pqn_alignment.src.guardrail",
      "modules.ai_intelligence.pqn_alignment.src.guardrail.GuardrailThrottle",
      "numpy",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_grok_setup": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_grok_setup",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_grok_setup.py",
    "lines": 37,
    "imports": [
      "os"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_guardrail_cli_presence": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_guardrail_cli_presence",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_guardrail_cli_presence.py",
    "lines": 9,
    "imports": [
      "os"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_interface_symbols": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_interface_symbols",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_interface_symbols.py",
    "lines": 10,
    "imports": [
      "importlib",
      "modules.ai_intelligence.pqn_alignment"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_invariants_doc": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_invariants_doc",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_invariants_doc.py",
    "lines": 8,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_multi_model_campaign": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_multi_model_campaign",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_multi_model_campaign.py",
    "lines": 19,
    "imports": [
      "modules.ai_intelligence.src.pqn_alignment_dae",
      "modules.ai_intelligence.src.pqn_alignment_dae.PQNAlignmentDAE",
      "modules.ai_intelligence.src.run_multi_model_campaign",
      "modules.ai_intelligence.src.run_multi_model_campaign.run_campaign_for_model",
      "os",
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_schemas": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_schemas",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_schemas.py",
    "lines": 23,
    "imports": [
      "json"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci": {
    "module": "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci",
    "path": "modules\\ai_intelligence\\pqn_alignment\\tests\\test_smoke_ci.py",
    "lines": 212,
    "imports": [
      "cmst_pqn_detector_v2",
      "cmst_pqn_detector_v2.ResonanceDetector",
      "json",
      "modules.ai_intelligence.pqn_alignment",
      "modules.ai_intelligence.pqn_alignment.run_detector",
      "modules.ai_intelligence.pqn_alignment.src.config_loader",
      "modules.ai_intelligence.pqn_alignment.src.config_loader.ConfigLoader",
      "modules.ai_intelligence.pqn_alignment.src.config_loader.DetectorConfig",
      "modules.ai_intelligence.pqn_alignment.src.council.parallel_council",
      "modules.ai_intelligence.pqn_alignment.src.council.parallel_council.council_scoring_strategies",
      "modules.ai_intelligence.pqn_alignment.src.council.parallel_council.evaluate_script_worker",
      "modules.ai_intelligence.pqn_alignment.src.guardrail",
      "modules.ai_intelligence.pqn_alignment.src.guardrail.GuardrailThrottle",
      "modules.ai_intelligence.pqn_alignment.src.results_db",
      "modules.ai_intelligence.pqn_alignment.src.results_db.index_summary",
      "modules.ai_intelligence.pqn_alignment.src.results_db.init_db",
      "numpy",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "tempfile"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.council.api": {
    "module": "modules.ai_intelligence.pqn_alignment.src.council.api",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\council\\api.py",
    "lines": 75,
    "imports": [
      "json",
      "modules.ai_intelligence.pqn_alignment.src.detector.api",
      "modules.ai_intelligence.pqn_alignment.src.detector.api.run_detector",
      "os",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.council.parallel_council": {
    "module": "modules.ai_intelligence.pqn_alignment.src.council.parallel_council",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\council\\parallel_council.py",
    "lines": 236,
    "imports": [
      "concurrent.futures",
      "concurrent.futures.ProcessPoolExecutor",
      "concurrent.futures.as_completed",
      "functools",
      "functools.partial",
      "json",
      "modules.ai_intelligence.pqn_alignment.src.detector.api",
      "modules.ai_intelligence.pqn_alignment.src.detector.api.run_detector",
      "multiprocessing",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.tests.test_smoke_ci"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.detector.api": {
    "module": "modules.ai_intelligence.pqn_alignment.src.detector.api",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\detector\\api.py",
    "lines": 67,
    "imports": [
      "WSP_agentic.tests.pqn_detection",
      "WSP_agentic.tests.pqn_detection.cmst_pqn_detector_v2",
      "modules.ai_intelligence.pqn_alignment.src.spectral_analyzer",
      "modules.ai_intelligence.pqn_alignment.src.spectral_analyzer.analyze_detector_output",
      "os",
      "typing",
      "typing.Dict",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__",
      "modules.ai_intelligence.pqn_alignment.src.council.api",
      "modules.ai_intelligence.pqn_alignment.src.council.parallel_council",
      "modules.ai_intelligence.pqn_alignment.src.sweep.api",
      "modules.foundups.pqn_portal.src.api"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "5 inbound references."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.detector.spectral_analyzer": {
    "module": "modules.ai_intelligence.pqn_alignment.src.detector.spectral_analyzer",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\detector\\spectral_analyzer.py",
    "lines": 163,
    "imports": [
      "json",
      "numpy",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.io.api": {
    "module": "modules.ai_intelligence.pqn_alignment.src.io.api",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\io\\api.py",
    "lines": 23,
    "imports": [
      "os",
      "shutil",
      "typing",
      "typing.List"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment.src.sweep.api": {
    "module": "modules.ai_intelligence.pqn_alignment.src.sweep.api",
    "path": "modules\\ai_intelligence\\pqn_alignment\\src\\sweep\\api.py",
    "lines": 130,
    "imports": [
      "csv",
      "itertools",
      "json",
      "matplotlib.pyplot",
      "modules.ai_intelligence.pqn_alignment.src.detector.api",
      "modules.ai_intelligence.pqn_alignment.src.detector.api.run_detector",
      "os",
      "subprocess",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.pqn_alignment._archive.analyze_run_2025_09_20.analyze_run": {
    "module": "modules.ai_intelligence.pqn_alignment._archive.analyze_run_2025_09_20.analyze_run",
    "path": "modules\\ai_intelligence\\pqn_alignment\\_archive\\analyze_run_2025_09_20\\analyze_run.py",
    "lines": 31,
    "imports": [
      "modules.ai_intelligence.pqn_alignment.src.labeling",
      "modules.ai_intelligence.pqn_alignment.src.labeling.classify_rows",
      "os",
      "pandas",
      "typing",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment._archive.config_2025_09_20.config": {
    "module": "modules.ai_intelligence.pqn_alignment._archive.config_2025_09_20.config",
    "path": "modules\\ai_intelligence\\pqn_alignment\\_archive\\config_2025_09_20\\config.py",
    "lines": 24,
    "imports": [
      "typing",
      "typing.Any",
      "typing.Dict",
      "yaml"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.pqn_alignment._archive.plotting_2025_09_20.plotting": {
    "module": "modules.ai_intelligence.pqn_alignment._archive.plotting_2025_09_20.plotting",
    "path": "modules\\ai_intelligence\\pqn_alignment\\_archive\\plotting_2025_09_20\\plotting.py",
    "lines": 55,
    "imports": [
      "matplotlib.pyplot",
      "seaborn",
      "typing",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.priority_scorer.scripts.validate": {
    "module": "modules.ai_intelligence.priority_scorer.scripts.validate",
    "path": "modules\\ai_intelligence\\priority_scorer\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.priority_scorer.src.priority_scorer": {
    "module": "modules.ai_intelligence.priority_scorer.src.priority_scorer",
    "path": "modules\\ai_intelligence\\priority_scorer\\src\\priority_scorer.py",
    "lines": 491,
    "imports": [],
    "incoming": [
      "modules.ai_intelligence.priority_scorer.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.priority_scorer.src.__init__": {
    "module": "modules.ai_intelligence.priority_scorer.src.__init__",
    "path": "modules\\ai_intelligence\\priority_scorer\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.ai_intelligence.priority_scorer.src.priority_scorer",
      "modules.ai_intelligence.priority_scorer.src.priority_scorer.MeetingPriority",
      "modules.ai_intelligence.priority_scorer.src.priority_scorer.PriorityScorer",
      "modules.ai_intelligence.priority_scorer.src.priority_scorer.ScoringFactor"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.priority_scorer.tests.test_priority_scorer": {
    "module": "modules.ai_intelligence.priority_scorer.tests.test_priority_scorer",
    "path": "modules\\ai_intelligence\\priority_scorer\\tests\\test_priority_scorer.py",
    "lines": 13,
    "imports": [
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.priority_scorer.tests.__init__": {
    "module": "modules.ai_intelligence.priority_scorer.tests.__init__",
    "path": "modules\\ai_intelligence\\priority_scorer\\tests\\__init__.py",
    "lines": 7,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.scripts.validate": {
    "module": "modules.ai_intelligence.rESP_o1o2.scripts.validate",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\anomaly_detector.py",
    "lines": 429,
    "imports": [
      "collections",
      "collections.Counter",
      "json",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.rESP_o1o2.__init__",
      "modules.ai_intelligence.rESP_o1o2.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.biocognitive_monitoring_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.biocognitive_monitoring_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\biocognitive_monitoring_system.py",
    "lines": 699,
    "imports": [
      "collections",
      "collections.deque",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.CRITICAL_FREQUENCY",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.GeometricEngine",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.GeometricWitness",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.PLANCK_INFO_CONSTANT",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.QuantumState",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.StateModelingModule",
      "numpy",
      "queue",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.experiment_logger": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.experiment_logger",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\experiment_logger.py",
    "lines": 124,
    "imports": [
      "csv",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [
      "modules.ai_intelligence.rESP_o1o2.__init__",
      "modules.ai_intelligence.rESP_o1o2.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.integrated_patent_demonstration": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.integrated_patent_demonstration",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\integrated_patent_demonstration.py",
    "lines": 473,
    "imports": [
      "datetime",
      "json",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.BiocognitiveStateAnalyzer",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.BiosignalData",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.BiosignalType",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.SeizurePredictionSystem",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.WearableCognitiveMonitor",
      "modules.ai_intelligence.rESP_o1o2.biocognitive_monitoring_system.demonstrate_biocognitive_system",
      "modules.ai_intelligence.rESP_o1o2.quantum_cryptography_system",
      "modules.ai_intelligence.rESP_o1o2.quantum_cryptography_system.QuantumCryptographicSystem",
      "modules.ai_intelligence.rESP_o1o2.quantum_cryptography_system.demonstrate_cryptographic_system",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.CMSTNeuralAdapter",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.CMSTNeuralLoss",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.CRITICAL_FREQUENCY",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.demonstrate_patent_system",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.rESPPatentSystem",
      "numpy",
      "time",
      "torch",
      "torch.nn",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.llm_connector": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\llm_connector.py",
    "lines": 417,
    "imports": [
      "anthropic",
      "anthropic.Anthropic",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "openai",
      "os",
      "re",
      "requests",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union"
    ],
    "incoming": [
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
      "modules.ai_intelligence.rESP_o1o2.__init__",
      "modules.ai_intelligence.rESP_o1o2.src.__init__",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.integration.test_full_diagnostics",
      "modules.communication.video_comments.src.llm_comment_generator",
      "modules.communication.video_comments.tests.test_llm_integration",
      "modules.development.ide_foundups.src.llm_providers.provider_manager"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "11 inbound references."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_controller": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_controller",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\quantum_cognitive_controller.py",
    "lines": 755,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector.AnomalyDetector",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger.ExperimentLogger",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.QuantumCognitiveEngine",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.QuantumState",
      "modules.ai_intelligence.rESP_o1o2.rESP_trigger_engine",
      "modules.ai_intelligence.rESP_o1o2.rESP_trigger_engine.rESPTriggerEngine",
      "modules.infrastructure.agent_activation.src.agent_activation",
      "modules.infrastructure.agent_activation.src.agent_activation.AgentActivationModule",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\quantum_cognitive_engine.py",
    "lines": 687,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "numpy",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.rESP_o1o2.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.quantum_cryptography_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.quantum_cryptography_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\quantum_cryptography_system.py",
    "lines": 416,
    "imports": [
      "collections",
      "collections.deque",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "hashlib",
      "json",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.CRITICAL_FREQUENCY",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.GeometricWitness",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.PLANCK_INFO_CONSTANT",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.StateMetrics",
      "modules.ai_intelligence.rESP_o1o2.rESP_patent_system.rESPPatentSystem",
      "numpy",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.rESP_patent_integration": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.rESP_patent_integration",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\rESP_patent_integration.py",
    "lines": 439,
    "imports": [
      "anomaly_detector",
      "anomaly_detector.AnomalyDetector",
      "datetime",
      "experiment_logger",
      "experiment_logger.ExperimentLogger",
      "hashlib",
      "json",
      "llm_connector",
      "llm_connector.LLMConnector",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector.AnomalyDetector",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger.ExperimentLogger",
      "modules.ai_intelligence.rESP_o1o2.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.llm_connector.LLMConnector",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.CRITICAL_FREQUENCY",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.QuantumState",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.StateMetrics",
      "modules.ai_intelligence.rESP_o1o2.quantum_cognitive_engine.StateModelingModule",
      "modules.ai_intelligence.rESP_o1o2.rESP_trigger_engine",
      "modules.ai_intelligence.rESP_o1o2.rESP_trigger_engine.rESPTriggerEngine",
      "numpy",
      "quantum_cognitive_engine",
      "quantum_cognitive_engine.CRITICAL_FREQUENCY",
      "quantum_cognitive_engine.QuantumState",
      "quantum_cognitive_engine.StateMetrics",
      "quantum_cognitive_engine.StateModelingModule",
      "rESP_trigger_engine",
      "rESP_trigger_engine.rESPTriggerEngine",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.rESP_patent_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.rESP_patent_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\rESP_patent_system.py",
    "lines": 656,
    "imports": [
      "collections",
      "collections.deque",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "logging",
      "numpy",
      "time",
      "torch",
      "torch.nn",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\rESP_trigger_engine.py",
    "lines": 332,
    "imports": [
      "anomaly_detector",
      "anomaly_detector.AnomalyDetector",
      "datetime",
      "datetime.datetime",
      "experiment_logger",
      "experiment_logger.ExperimentLogger",
      "json",
      "llm_connector",
      "llm_connector.LLMConnector",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector",
      "modules.ai_intelligence.rESP_o1o2.anomaly_detector.AnomalyDetector",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger",
      "modules.ai_intelligence.rESP_o1o2.experiment_logger.ExperimentLogger",
      "modules.ai_intelligence.rESP_o1o2.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.llm_connector.LLMConnector",
      "modules.ai_intelligence.rESP_o1o2.voice_interface",
      "modules.ai_intelligence.rESP_o1o2.voice_interface.VoiceInterface",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "voice_interface",
      "voice_interface.VoiceInterface"
    ],
    "incoming": [
      "modules.ai_intelligence.rESP_o1o2.__init__",
      "modules.ai_intelligence.rESP_o1o2.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.voice_interface": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.voice_interface",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\voice_interface.py",
    "lines": 313,
    "imports": [
      "logging",
      "pyttsx3",
      "speech_recognition",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.rESP_o1o2.__init__",
      "modules.ai_intelligence.rESP_o1o2.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.src.__init__": {
    "module": "modules.ai_intelligence.rESP_o1o2.src.__init__",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\src\\__init__.py",
    "lines": 58,
    "imports": [
      "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector",
      "modules.ai_intelligence.rESP_o1o2.src.anomaly_detector.AnomalyDetector",
      "modules.ai_intelligence.rESP_o1o2.src.experiment_logger",
      "modules.ai_intelligence.rESP_o1o2.src.experiment_logger.ExperimentLogger",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.GeometricEngine",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.GeometricFeedbackLoop",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.QuantumCognitiveEngine",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.QuantumState",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.StateMetrics",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.StateModelingModule",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.SymbolicOperatorModule",
      "modules.ai_intelligence.rESP_o1o2.src.quantum_cognitive_engine.rESPAnomalyScoringEngine",
      "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine",
      "modules.ai_intelligence.rESP_o1o2.src.rESP_trigger_engine.rESPTriggerEngine",
      "modules.ai_intelligence.rESP_o1o2.src.voice_interface",
      "modules.ai_intelligence.rESP_o1o2.src.voice_interface.VoiceInterface"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_anomaly_detector": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_anomaly_detector",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_anomaly_detector.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_biocognitive_monitoring_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_biocognitive_monitoring_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_biocognitive_monitoring_system.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_experiment_logger": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_experiment_logger",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_experiment_logger.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_integrated_patent_demonstration": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_integrated_patent_demonstration",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_integrated_patent_demonstration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_llm_connector": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_llm_connector",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_llm_connector.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cognitive_controller": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cognitive_controller",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_quantum_cognitive_controller.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cognitive_engine": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cognitive_engine",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_quantum_cognitive_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cryptography_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_quantum_cryptography_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_quantum_cryptography_system.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_basic": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_basic",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_basic.py",
    "lines": 299,
    "imports": [
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "shutil",
      "src.anomaly_detector",
      "src.anomaly_detector.AnomalyDetector",
      "src.experiment_logger",
      "src.experiment_logger.ExperimentLogger",
      "src.llm_connector",
      "src.llm_connector.LLMConnector",
      "src.rESP_trigger_engine",
      "src.rESP_trigger_engine.rESPTriggerEngine",
      "src.voice_interface",
      "src.voice_interface.VoiceInterface",
      "sys",
      "tempfile",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_entanglement_spectrum": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_entanglement_spectrum",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_entanglement_spectrum.py",
    "lines": 423,
    "imports": [
      "datetime",
      "datetime.datetime",
      "math",
      "pytest",
      "random",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_entanglement_spectrum_FIXED": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_entanglement_spectrum_FIXED",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_entanglement_spectrum_FIXED.py",
    "lines": 383,
    "imports": [
      "datetime",
      "datetime.datetime",
      "math",
      "pytest",
      "random",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_patent_integration": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_patent_integration",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_patent_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_patent_system": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_patent_system",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_patent_system.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_trigger_engine": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_rESP_trigger_engine",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_rESP_trigger_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.test_voice_interface": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.test_voice_interface",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\test_voice_interface.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.rESP_o1o2.tests.__init__": {
    "module": "modules.ai_intelligence.rESP_o1o2.tests.__init__",
    "path": "modules\\ai_intelligence\\rESP_o1o2\\tests\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.social_media_dae.src.social_media_dae": {
    "module": "modules.ai_intelligence.social_media_dae.src.social_media_dae",
    "path": "modules\\ai_intelligence\\social_media_dae\\src\\social_media_dae.py",
    "lines": 523,
    "imports": [
      "WSP_agentic.src.enhanced_awakening_protocol",
      "WSP_agentic.src.enhanced_awakening_protocol.EnhancedAwakeningProtocol",
      "asyncio",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.ai_intelligence.banter_engine.src.sequence_responses",
      "modules.ai_intelligence.banter_engine.src.sequence_responses.SEQUENCE_MAP",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.LinkedInAgent",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.x_twitter.src.x_twitter_dae",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.XTwitterDAENode",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "os",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.social_media_dae.__init__",
      "modules.ai_intelligence.social_media_dae.tests.test_social_media_dae"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.social_media_dae.tests.test_social_media_dae": {
    "module": "modules.ai_intelligence.social_media_dae.tests.test_social_media_dae",
    "path": "modules\\ai_intelligence\\social_media_dae\\tests\\test_social_media_dae.py",
    "lines": 29,
    "imports": [
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.social_media_dae.tests.test_voice_server": {
    "module": "modules.ai_intelligence.social_media_dae.tests.test_voice_server",
    "path": "modules\\ai_intelligence\\social_media_dae\\tests\\test_voice_server.py",
    "lines": 100,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "flask",
      "flask.Flask",
      "flask.jsonify",
      "flask.request",
      "logging",
      "os"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.ai_intelligence.social_media_dae.tests.__init__": {
    "module": "modules.ai_intelligence.social_media_dae.tests.__init__",
    "path": "modules\\ai_intelligence\\social_media_dae\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.blockchain.src.__init__": {
    "module": "modules.blockchain.src.__init__",
    "path": "modules\\blockchain\\src\\__init__.py",
    "lines": 14,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.blockchain.tests.__init__": {
    "module": "modules.blockchain.tests.__init__",
    "path": "modules\\blockchain\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.blockchain.tests.scripts.validate": {
    "module": "modules.blockchain.tests.scripts.validate",
    "path": "modules\\blockchain\\tests\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.blockchain.tests.src.__init__": {
    "module": "modules.blockchain.tests.src.__init__",
    "path": "modules\\blockchain\\tests\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.__init__": {
    "module": "modules.communication.auto_meeting_orchestrator.__init__",
    "path": "modules\\communication\\auto_meeting_orchestrator\\__init__.py",
    "lines": 45,
    "imports": [
      "modules.communication.auto_meeting_orchestrator.src.orchestrator",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.MeetingIntent",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.MeetingOrchestrator",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.PresenceStatus",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.Priority",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.UnifiedAvailabilityProfile"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.channel_selector.__init__": {
    "module": "modules.communication.channel_selector.__init__",
    "path": "modules\\communication\\channel_selector\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.consent_engine.__init__": {
    "module": "modules.communication.consent_engine.__init__",
    "path": "modules\\communication\\consent_engine\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.__init__": {
    "module": "modules.communication.intent_manager.__init__",
    "path": "modules\\communication\\intent_manager\\__init__.py",
    "lines": 43,
    "imports": [
      "modules.communication.intent_manager.src.intent_manager",
      "modules.communication.intent_manager.src.intent_manager.IntentManager",
      "modules.communication.intent_manager.src.intent_manager.IntentStatus",
      "modules.communication.intent_manager.src.intent_manager.MeetingContext",
      "modules.communication.intent_manager.src.intent_manager.MeetingIntent",
      "modules.communication.intent_manager.src.intent_manager.Priority",
      "modules.communication.intent_manager.src.intent_manager.create_intent_manager"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.__init__": {
    "module": "modules.communication.livechat.__init__",
    "path": "modules\\communication\\livechat\\__init__.py",
    "lines": 7,
    "imports": [
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_poller.__init__": {
    "module": "modules.communication.live_chat_poller.__init__",
    "path": "modules\\communication\\live_chat_poller\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.communication.live_chat_poller.src.live_chat_poller",
      "modules.communication.live_chat_poller.src.live_chat_poller.LiveChatPoller"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_processor.__init__": {
    "module": "modules.communication.live_chat_processor.__init__",
    "path": "modules\\communication\\live_chat_processor\\__init__.py",
    "lines": 9,
    "imports": [
      "modules.communication.live_chat_processor.src.live_chat_processor",
      "modules.communication.live_chat_processor.src.live_chat_processor.LiveChatProcessor"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.response_composer.response_composer": {
    "module": "modules.communication.response_composer.response_composer",
    "path": "modules\\communication\\response_composer\\response_composer.py",
    "lines": 56,
    "imports": [
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.response_composer.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.communication.response_composer.__init__": {
    "module": "modules.communication.response_composer.__init__",
    "path": "modules\\communication\\response_composer\\__init__.py",
    "lines": 9,
    "imports": [
      "modules.communication.response_composer.response_composer",
      "modules.communication.response_composer.response_composer.ResponseComposer"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.voice_engine.voice_engine": {
    "module": "modules.communication.voice_engine.voice_engine",
    "path": "modules\\communication\\voice_engine\\voice_engine.py",
    "lines": 56,
    "imports": [
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.voice_engine.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.communication.voice_engine.__init__": {
    "module": "modules.communication.voice_engine.__init__",
    "path": "modules\\communication\\voice_engine\\__init__.py",
    "lines": 9,
    "imports": [
      "modules.communication.voice_engine.voice_engine",
      "modules.communication.voice_engine.voice_engine.VoiceEngine"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.scripts.validate": {
    "module": "modules.communication.auto_meeting_orchestrator.scripts.validate",
    "path": "modules\\communication\\auto_meeting_orchestrator\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.src.code_review_orchestrator": {
    "module": "modules.communication.auto_meeting_orchestrator.src.code_review_orchestrator",
    "path": "modules\\communication\\auto_meeting_orchestrator\\src\\code_review_orchestrator.py",
    "lines": 425,
    "imports": [
      "ai_intelligence.multi_agent_system",
      "ai_intelligence.multi_agent_system.MultiAgentCoordinator",
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "development.testing_tools",
      "development.testing_tools.CodeAnalyzer",
      "development.testing_tools.TestRunner",
      "enum",
      "enum.Enum",
      "infrastructure.models",
      "infrastructure.models.MeetingOrchestrator",
      "logging",
      "modules.communication.auto_meeting_orchestrator",
      "modules.communication.auto_meeting_orchestrator.AutoMeetingOrchestrator",
      "platform_integration.linkedin_agent",
      "platform_integration.linkedin_agent.LinkedInNotifier",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.src.heartbeat_service": {
    "module": "modules.communication.auto_meeting_orchestrator.src.heartbeat_service",
    "path": "modules\\communication\\auto_meeting_orchestrator\\src\\heartbeat_service.py",
    "lines": 379,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.MeetingOrchestrator",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.PresenceStatus",
      "modules.communication.auto_meeting_orchestrator.src.orchestrator.Priority",
      "pathlib",
      "pathlib.Path",
      "psutil",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.src.orchestrator": {
    "module": "modules.communication.auto_meeting_orchestrator.src.orchestrator",
    "path": "modules\\communication\\auto_meeting_orchestrator\\src\\orchestrator.py",
    "lines": 528,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.auto_meeting_orchestrator.__init__",
      "modules.communication.auto_meeting_orchestrator.src.heartbeat_service"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.src.presence_adapter": {
    "module": "modules.communication.auto_meeting_orchestrator.src.presence_adapter",
    "path": "modules\\communication\\auto_meeting_orchestrator\\src\\presence_adapter.py",
    "lines": 84,
    "imports": [
      "asyncio",
      "logging",
      "modules.aggregation.presence_aggregator",
      "modules.aggregation.presence_aggregator.Platform",
      "modules.aggregation.presence_aggregator.PresenceAggregator",
      "modules.aggregation.presence_aggregator.PresenceData",
      "modules.aggregation.presence_aggregator.PresenceStatus",
      "modules.communication.auto_meeting_orchestrator.orchestrator",
      "modules.communication.auto_meeting_orchestrator.orchestrator.MeetingOrchestrator",
      "modules.communication.auto_meeting_orchestrator.orchestrator.PresenceStatus",
      "typing",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.src.__init__": {
    "module": "modules.communication.auto_meeting_orchestrator.src.__init__",
    "path": "modules\\communication\\auto_meeting_orchestrator\\src\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.tests.test_code_review_orchestrator": {
    "module": "modules.communication.auto_meeting_orchestrator.tests.test_code_review_orchestrator",
    "path": "modules\\communication\\auto_meeting_orchestrator\\tests\\test_code_review_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.tests.test_heartbeat_service": {
    "module": "modules.communication.auto_meeting_orchestrator.tests.test_heartbeat_service",
    "path": "modules\\communication\\auto_meeting_orchestrator\\tests\\test_heartbeat_service.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.tests.test_orchestrator": {
    "module": "modules.communication.auto_meeting_orchestrator.tests.test_orchestrator",
    "path": "modules\\communication\\auto_meeting_orchestrator\\tests\\test_orchestrator.py",
    "lines": 356,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "os",
      "pytest",
      "src.orchestrator",
      "src.orchestrator.MeetingIntent",
      "src.orchestrator.MeetingOrchestrator",
      "src.orchestrator.PresenceStatus",
      "src.orchestrator.Priority",
      "src.orchestrator.UnifiedAvailabilityProfile",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.auto_meeting_orchestrator.tests.__init__": {
    "module": "modules.communication.auto_meeting_orchestrator.tests.__init__",
    "path": "modules\\communication\\auto_meeting_orchestrator\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.channel_selector.scripts.validate": {
    "module": "modules.communication.channel_selector.scripts.validate",
    "path": "modules\\communication\\channel_selector\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.channel_selector.src.channel_selector": {
    "module": "modules.communication.channel_selector.src.channel_selector",
    "path": "modules\\communication\\channel_selector\\src\\channel_selector.py",
    "lines": 578,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.channel_selector.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.channel_selector.src.__init__": {
    "module": "modules.communication.channel_selector.src.__init__",
    "path": "modules\\communication\\channel_selector\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.communication.channel_selector.src.channel_selector",
      "modules.communication.channel_selector.src.channel_selector.ChannelSelector",
      "modules.communication.channel_selector.src.channel_selector.Platform",
      "modules.communication.channel_selector.src.channel_selector.SelectionCriteria"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.channel_selector.tests.test_channel_selector": {
    "module": "modules.communication.channel_selector.tests.test_channel_selector",
    "path": "modules\\communication\\channel_selector\\tests\\test_channel_selector.py",
    "lines": 13,
    "imports": [
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.channel_selector.tests.__init__": {
    "module": "modules.communication.channel_selector.tests.__init__",
    "path": "modules\\communication\\channel_selector\\tests\\__init__.py",
    "lines": 7,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.src.chat_rules_engine": {
    "module": "modules.communication.chat_rules.src.chat_rules_engine",
    "path": "modules\\communication\\chat_rules\\src\\chat_rules_engine.py",
    "lines": 392,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "modules.communication.chat_rules.commands",
      "modules.communication.chat_rules.commands.CommandProcessor",
      "modules.communication.chat_rules.response_generator",
      "modules.communication.chat_rules.response_generator.ResponseGenerator",
      "modules.communication.chat_rules.user_classifier",
      "modules.communication.chat_rules.user_classifier.UserClassifier",
      "modules.communication.chat_rules.user_classifier.UserProfile",
      "modules.communication.chat_rules.user_classifier.UserType",
      "modules.communication.chat_rules.whack_a_magat",
      "modules.communication.chat_rules.whack_a_magat.ActionType",
      "modules.communication.chat_rules.whack_a_magat.WhackAMAGAtSystem",
      "pathlib",
      "pathlib.Path",
      "random",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "yaml"
    ],
    "incoming": [
      "modules.communication.chat_rules.src.__init__",
      "modules.communication.chat_rules.tests.test_chat_rules",
      "modules.communication.chat_rules.tests.test_chat_rules_simple"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.communication.chat_rules.src.commands": {
    "module": "modules.communication.chat_rules.src.commands",
    "path": "modules\\communication\\chat_rules\\src\\commands.py",
    "lines": 938,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.communication.chat_rules.user_classifier",
      "modules.communication.chat_rules.user_classifier.UserProfile",
      "modules.communication.chat_rules.user_classifier.UserType",
      "modules.communication.chat_rules.whack_a_magat",
      "modules.communication.chat_rules.whack_a_magat.ActionType",
      "modules.communication.chat_rules.whack_a_magat.WhackAMAGAtSystem",
      "random",
      "typing",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.chat_rules.src.__init__",
      "modules.communication.chat_rules.tests.test_chat_rules"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.chat_rules.src.database": {
    "module": "modules.communication.chat_rules.src.database",
    "path": "modules\\communication\\chat_rules\\src\\database.py",
    "lines": 475,
    "imports": [
      "contextlib",
      "contextlib.contextmanager",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "sqlite3",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules._archived_enhanced_duplicates_per_wsp84.enhanced_commands"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.src.membership_manager": {
    "module": "modules.communication.chat_rules.src.membership_manager",
    "path": "modules\\communication\\chat_rules\\src\\membership_manager.py",
    "lines": 370,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.src.response_generator": {
    "module": "modules.communication.chat_rules.src.response_generator",
    "path": "modules\\communication\\chat_rules\\src\\response_generator.py",
    "lines": 286,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.communication.chat_rules.user_classifier",
      "modules.communication.chat_rules.user_classifier.UserProfile",
      "modules.communication.chat_rules.user_classifier.UserType",
      "random",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.chat_rules.src.__init__",
      "modules.communication.chat_rules.tests.test_chat_rules"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.chat_rules.src.user_classifier": {
    "module": "modules.communication.chat_rules.src.user_classifier",
    "path": "modules\\communication\\chat_rules\\src\\user_classifier.py",
    "lines": 319,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.chat_rules.src.__init__",
      "modules.communication.chat_rules.tests.test_chat_rules"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.chat_rules.src.__init__": {
    "module": "modules.communication.chat_rules.src.__init__",
    "path": "modules\\communication\\chat_rules\\src\\__init__.py",
    "lines": 39,
    "imports": [
      "modules.communication.chat_rules.src.chat_rules_engine",
      "modules.communication.chat_rules.src.chat_rules_engine.ChatRulesEngine",
      "modules.communication.chat_rules.src.commands",
      "modules.communication.chat_rules.src.commands.CommandPermission",
      "modules.communication.chat_rules.src.commands.CommandProcessor",
      "modules.communication.chat_rules.src.response_generator",
      "modules.communication.chat_rules.src.response_generator.ResponseGenerator",
      "modules.communication.chat_rules.src.user_classifier",
      "modules.communication.chat_rules.src.user_classifier.UserClassifier",
      "modules.communication.chat_rules.src.user_classifier.UserProfile",
      "modules.communication.chat_rules.src.user_classifier.UserType",
      "modules.communication.chat_rules.src.whack_a_magat",
      "modules.communication.chat_rules.src.whack_a_magat.ActionType",
      "modules.communication.chat_rules.src.whack_a_magat.WhackAMAGAtSystem",
      "modules.communication.chat_rules.src.whack_a_magat.WhackLevel"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.tests.test_chat_rules": {
    "module": "modules.communication.chat_rules.tests.test_chat_rules",
    "path": "modules\\communication\\chat_rules\\tests\\test_chat_rules.py",
    "lines": 303,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.communication.chat_rules.src.chat_rules_engine",
      "modules.communication.chat_rules.src.chat_rules_engine.ChatRulesEngine",
      "modules.communication.chat_rules.src.commands",
      "modules.communication.chat_rules.src.commands.CommandProcessor",
      "modules.communication.chat_rules.src.response_generator",
      "modules.communication.chat_rules.src.response_generator.ResponseGenerator",
      "modules.communication.chat_rules.src.user_classifier",
      "modules.communication.chat_rules.src.user_classifier.UserClassifier",
      "modules.communication.chat_rules.src.user_classifier.UserProfile",
      "modules.communication.chat_rules.src.user_classifier.UserType",
      "modules.communication.chat_rules.src.whack_a_magat",
      "modules.communication.chat_rules.src.whack_a_magat.ActionType",
      "modules.communication.chat_rules.src.whack_a_magat.WhackAMAGAtSystem",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.tests.test_chat_rules_simple": {
    "module": "modules.communication.chat_rules.tests.test_chat_rules_simple",
    "path": "modules\\communication\\chat_rules\\tests\\test_chat_rules_simple.py",
    "lines": 165,
    "imports": [
      "modules.communication.chat_rules.src.chat_rules_engine",
      "modules.communication.chat_rules.src.chat_rules_engine.ChatRulesEngine",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.chat_rules.tests.test_timeout_points": {
    "module": "modules.communication.chat_rules.tests.test_timeout_points",
    "path": "modules\\communication\\chat_rules\\tests\\test_timeout_points.py",
    "lines": 132,
    "imports": [
      "modules.communication.chat_rules.src.whack_a_magat",
      "modules.communication.chat_rules.src.whack_a_magat.TimeoutDuration",
      "modules.communication.chat_rules.src.whack_a_magat.WhackAMAGAtSystem",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.consent_engine.scripts.validate": {
    "module": "modules.communication.consent_engine.scripts.validate",
    "path": "modules\\communication\\consent_engine\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.consent_engine.src.consent_engine": {
    "module": "modules.communication.consent_engine.src.consent_engine",
    "path": "modules\\communication\\consent_engine\\src\\consent_engine.py",
    "lines": 513,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.consent_engine.src.__init__": {
    "module": "modules.communication.consent_engine.src.__init__",
    "path": "modules\\communication\\consent_engine\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.consent_engine.tests.test_consent_engine": {
    "module": "modules.communication.consent_engine.tests.test_consent_engine",
    "path": "modules\\communication\\consent_engine\\tests\\test_consent_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.scripts.validate": {
    "module": "modules.communication.intent_manager.scripts.validate",
    "path": "modules\\communication\\intent_manager\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.src.intent_manager": {
    "module": "modules.communication.intent_manager.src.intent_manager",
    "path": "modules\\communication\\intent_manager\\src\\intent_manager.py",
    "lines": 417,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "typing",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [
      "modules.communication.intent_manager.__init__",
      "modules.communication.intent_manager.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.src.__init__": {
    "module": "modules.communication.intent_manager.src.__init__",
    "path": "modules\\communication\\intent_manager\\src\\__init__.py",
    "lines": 11,
    "imports": [
      "modules.communication.intent_manager.src.intent_manager",
      "modules.communication.intent_manager.src.intent_manager.ContextQuestion",
      "modules.communication.intent_manager.src.intent_manager.IntentManager",
      "modules.communication.intent_manager.src.intent_manager.IntentStatus",
      "modules.communication.intent_manager.src.intent_manager.MeetingIntent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.tests.test_intent_manager": {
    "module": "modules.communication.intent_manager.tests.test_intent_manager",
    "path": "modules\\communication\\intent_manager\\tests\\test_intent_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.intent_manager.tests.__init__": {
    "module": "modules.communication.intent_manager.tests.__init__",
    "path": "modules\\communication\\intent_manager\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.grok_log_analyzer": {
    "module": "modules.communication.livechat.scripts.grok_log_analyzer",
    "path": "modules\\communication\\livechat\\scripts\\grok_log_analyzer.py",
    "lines": 306,
    "imports": [
      "collections",
      "collections.Counter",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "os",
      "re",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.run_youtube_clean": {
    "module": "modules.communication.livechat.scripts.run_youtube_clean",
    "path": "modules\\communication\\livechat\\scripts\\run_youtube_clean.py",
    "lines": 48,
    "imports": [
      "asyncio",
      "io",
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "os",
      "sys",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.run_youtube_dae": {
    "module": "modules.communication.livechat.scripts.run_youtube_dae",
    "path": "modules\\communication\\livechat\\scripts\\run_youtube_dae.py",
    "lines": 18,
    "imports": [
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.main",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.run_youtube_debug": {
    "module": "modules.communication.livechat.scripts.run_youtube_debug",
    "path": "modules\\communication\\livechat\\scripts\\run_youtube_debug.py",
    "lines": 41,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.scripts.run_youtube_verbose": {
    "module": "modules.communication.livechat.scripts.run_youtube_verbose",
    "path": "modules\\communication\\livechat\\scripts\\run_youtube_verbose.py",
    "lines": 42,
    "imports": [
      "logging",
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.main",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.setup_autonomous_dae": {
    "module": "modules.communication.livechat.scripts.setup_autonomous_dae",
    "path": "modules\\communication\\livechat\\scripts\\setup_autonomous_dae.py",
    "lines": 208,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "platform",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.update_docs_references": {
    "module": "modules.communication.livechat.scripts.update_docs_references",
    "path": "modules\\communication\\livechat\\scripts\\update_docs_references.py",
    "lines": 74,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "re"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.scripts.validate": {
    "module": "modules.communication.livechat.scripts.validate",
    "path": "modules\\communication\\livechat\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.agentic_chat_engine": {
    "module": "modules.communication.livechat.src.agentic_chat_engine",
    "path": "modules\\communication\\livechat\\src\\agentic_chat_engine.py",
    "lines": 494,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map.emoji_string_to_tuple",
      "modules.ai_intelligence.banter_engine.src.sequence_responses",
      "modules.ai_intelligence.banter_engine.src.sequence_responses.SEQUENCE_MAP",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "os",
      "random",
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_consciousness_responses",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_consciousness_responses",
      "modules.communication.video_comments.src.comment_monitor_dae",
      "modules.communication.video_comments.src.realtime_comment_dialogue"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "7 inbound references."
    ]
  },
  "modules.communication.livechat.src.auto_moderator_dae": {
    "module": "modules.communication.livechat.src.auto_moderator_dae",
    "path": "modules\\communication\\livechat\\src\\auto_moderator_dae.py",
    "lines": 400,
    "imports": [],
    "incoming": [
      "modules.communication.livechat.__init__",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_live_verification",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_social_media_posting",
      "modules.communication.livechat.scripts.run_youtube_clean",
      "modules.communication.livechat.scripts.run_youtube_dae",
      "modules.communication.livechat.scripts.run_youtube_debug",
      "modules.communication.livechat.scripts.run_youtube_verbose",
      "modules.communication.livechat.tests.test_stream_detection_no_chatid"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.chat_memory_manager": {
    "module": "modules.communication.livechat.src.chat_memory_manager",
    "path": "modules\\communication\\livechat\\src\\chat_memory_manager.py",
    "lines": 322,
    "imports": [
      "collections",
      "collections.defaultdict",
      "collections.deque",
      "logging",
      "os",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.video_comments.src.comment_monitor_dae",
      "modules.communication.video_comments.src.realtime_comment_dialogue",
      "modules.communication.video_comments.tests.test_llm_integration"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "6 inbound references."
    ]
  },
  "modules.communication.livechat.src.chat_poller": {
    "module": "modules.communication.livechat.src.chat_poller",
    "path": "modules\\communication\\livechat\\src\\chat_poller.py",
    "lines": 260,
    "imports": [
      "asyncio",
      "googleapiclient.errors",
      "logging",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "utils.throttling",
      "utils.throttling.calculate_dynamic_delay"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_poller",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.test_chat_poller"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.communication.livechat.src.chat_sender": {
    "module": "modules.communication.livechat.src.chat_sender",
    "path": "modules\\communication\\livechat\\src\\chat_sender.py",
    "lines": 253,
    "imports": [
      "asyncio",
      "googleapiclient.errors",
      "logging",
      "random",
      "re",
      "typing",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_sender",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mention_validation",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.test_chat_sender",
      "modules.communication.livechat.tests.test_mention_validation"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "6 inbound references."
    ]
  },
  "modules.communication.livechat.src.command_handler": {
    "module": "modules.communication.livechat.src.command_handler",
    "path": "modules\\communication\\livechat\\src\\command_handler.py",
    "lines": 287,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.QuizEngine",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "modules.gamification.whack_a_magat.get_user_position",
      "modules.gamification.whack_a_magat.src.historical_facts",
      "modules.gamification.whack_a_magat.src.historical_facts.get_parallel",
      "modules.gamification.whack_a_magat.src.historical_facts.get_random_fact",
      "modules.gamification.whack_a_magat.src.historical_facts.get_warning",
      "modules.gamification.whack_a_magat.src.quiz_engine",
      "modules.gamification.whack_a_magat.src.quiz_engine.QuizEngine",
      "modules.gamification.whack_a_magat.src.self_improvement",
      "modules.gamification.whack_a_magat.src.self_improvement.observe_command",
      "modules.gamification.whack_a_magat.src.spree_tracker",
      "modules.gamification.whack_a_magat.src.spree_tracker.get_active_sprees",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.get_session_leaderboard",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_slash_commands",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.system_tests.run_tests_simple",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_master_switches",
      "modules.communication.livechat.tests.test_master_switches_complete",
      "modules.communication.livechat.tests.test_security_fix_toggle",
      "modules.communication.livechat.tests.test_slash_commands",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "13 inbound references."
    ]
  },
  "modules.communication.livechat.src.consciousness_handler": {
    "module": "modules.communication.livechat.src.consciousness_handler",
    "path": "modules\\communication\\livechat\\src\\consciousness_handler.py",
    "lines": 276,
    "imports": [
      "logging",
      "os",
      "re",
      "subprocess",
      "typing",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_consciousness_responses",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_consciousness_responses"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "7 inbound references."
    ]
  },
  "modules.communication.livechat.src.event_handler": {
    "module": "modules.communication.livechat.src.event_handler",
    "path": "modules\\communication\\livechat\\src\\event_handler.py",
    "lines": 492,
    "imports": [
      "asyncio",
      "collections",
      "collections.deque",
      "concurrent.futures",
      "concurrent.futures.ThreadPoolExecutor",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "logging",
      "modules.communication.livechat.mcp_youtube_integration",
      "modules.communication.livechat.mcp_youtube_integration.YouTubeMCPIntegration",
      "modules.gamification.whack_a_magat.src.status_announcer",
      "modules.gamification.whack_a_magat.src.status_announcer.StatusAnnouncer",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.reset_all_sessions",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mcp_integration",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_mcp_integration",
      "modules.gamification.whack_a_magat.tests.test_magadoom_xp",
      "modules.gamification.whack_a_magat.tests.test_simulate_multi_whack"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "8 inbound references."
    ]
  },
  "modules.communication.livechat.src.greeting_generator": {
    "module": "modules.communication.livechat.src.greeting_generator",
    "path": "modules\\communication\\livechat\\src\\greeting_generator.py",
    "lines": 372,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "modules.gamification.whack_a_magat.src.terminology_enforcer",
      "modules.gamification.whack_a_magat.src.terminology_enforcer.enforce_terminology",
      "modules.infrastructure.llm_client.src.client",
      "modules.infrastructure.llm_client.src.client.LLMClient",
      "os",
      "random",
      "typing",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.session_manager"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.intelligent_throttle_manager": {
    "module": "modules.communication.livechat.src.intelligent_throttle_manager",
    "path": "modules\\communication\\livechat\\src\\intelligent_throttle_manager.py",
    "lines": 633,
    "imports": [
      "collections",
      "collections.defaultdict",
      "collections.deque",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "modules.infrastructure.wre_core.wre_monitor",
      "modules.infrastructure.wre_core.wre_monitor.get_monitor",
      "pathlib",
      "pathlib.Path",
      "random",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_intelligent_throttle",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.test_intelligent_throttle"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.communication.livechat.src.livechat_core": {
    "module": "modules.communication.livechat.src.livechat_core",
    "path": "modules\\communication\\livechat\\src\\livechat_core.py",
    "lines": 874,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "logging",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.communication.livechat.src.chat_poller",
      "modules.communication.livechat.src.chat_poller.ChatPoller",
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.ChatSender",
      "modules.communication.livechat.src.intelligent_throttle_manager",
      "modules.communication.livechat.src.intelligent_throttle_manager.IntelligentThrottleManager",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.moderation_stats",
      "modules.communication.livechat.src.moderation_stats.ModerationStats",
      "modules.communication.livechat.src.quota_aware_poller",
      "modules.communication.livechat.src.quota_aware_poller.QuotaAwarePoller",
      "modules.communication.livechat.src.session_manager",
      "modules.communication.livechat.src.session_manager.SessionManager",
      "modules.infrastructure.system_health_monitor.src.system_health_analyzer",
      "modules.infrastructure.system_health_monitor.src.system_health_analyzer.SystemHealthAnalyzer",
      "modules.infrastructure.wre_core.recursive_improvement.src.wre_integration",
      "modules.infrastructure.wre_core.recursive_improvement.src.wre_integration.record_error",
      "modules.infrastructure.wre_core.recursive_improvement.src.wre_integration.record_success",
      "modules.infrastructure.wre_core.wre_monitor",
      "modules.infrastructure.wre_core.wre_monitor.get_monitor",
      "os",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.__init__",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_system_tests",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.test_automatic_system",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_automatic_throttling",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_emoji_responses",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_hand_emoji_issue",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_auth_handling",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_emoji_triggers",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_facade",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_initialization",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_lifecycle",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_logging",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_polling",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_processing",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_sending",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_rate_limiting",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_session_management",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_viewer_tracking",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_integration",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_orchestrator",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_social_media_posting",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_youtube_dae",
      "modules.communication.livechat.tests.integration.test_full_diagnostics",
      "modules.communication.livechat.tests.system_tests.run_system_tests",
      "modules.communication.livechat.tests.system_tests.test_automatic_system",
      "modules.communication.livechat.tests.test_automatic_throttling",
      "modules.communication.livechat.tests.test_comprehensive_system_monitor",
      "modules.communication.livechat.tests.test_emoji_responses",
      "modules.communication.livechat.tests.test_hand_emoji_issue",
      "modules.communication.livechat.tests.test_integration_demonstration",
      "modules.communication.livechat.tests.test_livechat",
      "modules.communication.livechat.tests.test_livechat_auth_handling",
      "modules.communication.livechat.tests.test_livechat_emoji_triggers",
      "modules.communication.livechat.tests.test_livechat_facade",
      "modules.communication.livechat.tests.test_livechat_initialization",
      "modules.communication.livechat.tests.test_livechat_lifecycle",
      "modules.communication.livechat.tests.test_livechat_logging",
      "modules.communication.livechat.tests.test_livechat_message_polling",
      "modules.communication.livechat.tests.test_livechat_message_processing",
      "modules.communication.livechat.tests.test_livechat_message_sending",
      "modules.communication.livechat.tests.test_livechat_rate_limiting",
      "modules.communication.livechat.tests.test_livechat_session_management",
      "modules.communication.livechat.tests.test_livechat_viewer_tracking",
      "modules.communication.livechat.tests.test_llm_bypass_integration",
      "modules.communication.livechat.tests.test_orchestrator",
      "modules.communication.livechat.tests.test_orchestrator_migration_step1",
      "modules.communication.livechat.tests.test_orchestrator_migration_step2",
      "modules.communication.livechat.tests.test_orchestrator_migration_step3",
      "modules.communication.livechat.tests.test_social_media_posting",
      "modules.communication.livechat.tests.test_surgical_migration_live",
      "modules.communication.livechat.tests.test_youtube_dae",
      "modules.gamification.whack_a_magat.tests.test_magadoom_complete",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "56 inbound references."
    ]
  },
  "modules.communication.livechat.src.llm_bypass_engine": {
    "module": "modules.communication.livechat.src.llm_bypass_engine",
    "path": "modules\\communication\\livechat\\src\\llm_bypass_engine.py",
    "lines": 227,
    "imports": [
      "logging",
      "random",
      "typing",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.banter_engine.tests.test_comprehensive_chat_communication",
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat._archive.experimental_2025_09_19.emoji_trigger_handler",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_emoji_responses",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_engine",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.tests.test_emoji_responses",
      "modules.communication.livechat.tests.test_llm_bypass_engine"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.llm_integration": {
    "module": "modules.communication.livechat.src.llm_integration",
    "path": "modules\\communication\\livechat\\src\\llm_integration.py",
    "lines": 260,
    "imports": [
      "logging",
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.message_processor",
      "modules.communication.video_comments.src.llm_comment_generator"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.livechat.src.mcp_youtube_integration": {
    "module": "modules.communication.livechat.src.mcp_youtube_integration",
    "path": "modules\\communication\\livechat\\src\\mcp_youtube_integration.py",
    "lines": 491,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "logging",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mcp_integration",
      "modules.communication.livechat.tests.test_mcp_integration"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.message_processor": {
    "module": "modules.communication.livechat.src.message_processor",
    "path": "modules\\communication\\livechat\\src\\message_processor.py",
    "lines": 717,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "logging",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map",
      "modules.ai_intelligence.banter_engine.src.emoji_sequence_map.EMOJI_TO_NUMBER",
      "modules.ai_intelligence.pqn_alignment.src.pqn_research_dae_orchestrator",
      "modules.ai_intelligence.pqn_alignment.src.pqn_research_dae_orchestrator.PQNResearchDAEOrchestrator",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.agentic_self_improvement",
      "modules.communication.livechat.src.agentic_self_improvement.AgenticSelfImprovement",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "modules.communication.livechat.src.emoji_response_limiter",
      "modules.communication.livechat.src.emoji_response_limiter.EmojiResponseLimiter",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.greeting_generator",
      "modules.communication.livechat.src.greeting_generator.GrokGreetingGenerator",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "modules.communication.livechat.src.llm_integration",
      "modules.communication.livechat.src.llm_integration.GrokIntegration",
      "modules.communication.livechat.src.simple_fact_checker",
      "modules.communication.livechat.src.simple_fact_checker.SimpleFactChecker",
      "modules.gamification.whack_a_magat.src.self_improvement",
      "modules.gamification.whack_a_magat.src.self_improvement.MAGADOOMSelfImprovement",
      "os",
      "random",
      "re",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live_broadcast",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_help_command_direct",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_processor",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_youtube_dae",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.integration.test_full_diagnostics",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.integration.test_live_broadcast",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.communication.livechat.tests.test_help_command_direct",
      "modules.communication.livechat.tests.test_master_switches_complete",
      "modules.communication.livechat.tests.test_message_processor",
      "modules.communication.livechat.tests.test_self_reply_prevention",
      "modules.communication.livechat.tests.test_youtube_dae",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "19 inbound references."
    ]
  },
  "modules.communication.livechat.src.moderation_stats": {
    "module": "modules.communication.livechat.src.moderation_stats",
    "path": "modules\\communication\\livechat\\src\\moderation_stats.py",
    "lines": 309,
    "imports": [
      "collections",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.communication.livechat.src.quota_aware_poller": {
    "module": "modules.communication.livechat.src.quota_aware_poller",
    "path": "modules\\communication\\livechat\\src\\quota_aware_poller.py",
    "lines": 223,
    "imports": [
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.livechat_core"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.communication.livechat.src.session_manager": {
    "module": "modules.communication.livechat.src.session_manager",
    "path": "modules\\communication\\livechat\\src\\session_manager.py",
    "lines": 328,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "logging",
      "modules.communication.livechat.src.greeting_generator",
      "modules.communication.livechat.src.greeting_generator.GrokGreetingGenerator",
      "os",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live_broadcast",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.integration.test_live_broadcast"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "5 inbound references."
    ]
  },
  "modules.communication.livechat.src.simple_fact_checker": {
    "module": "modules.communication.livechat.src.simple_fact_checker",
    "path": "modules\\communication\\livechat\\src\\simple_fact_checker.py",
    "lines": 172,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "os",
      "random",
      "typing",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.message_processor"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.communication.livechat.src.stream_trigger": {
    "module": "modules.communication.livechat.src.stream_trigger",
    "path": "modules\\communication\\livechat\\src\\stream_trigger.py",
    "lines": 190,
    "imports": [
      "asyncio",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.__init__": {
    "module": "modules.communication.livechat.src.__init__",
    "path": "modules\\communication\\livechat\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_all_chat_functions": {
    "module": "modules.communication.livechat.tests.test_all_chat_functions",
    "path": "modules\\communication\\livechat\\tests\\test_all_chat_functions.py",
    "lines": 419,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.call",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_antima_factcheck": {
    "module": "modules.communication.livechat.tests.test_antima_factcheck",
    "path": "modules\\communication\\livechat\\tests\\test_antima_factcheck.py",
    "lines": 70,
    "imports": [
      "os",
      "src.llm_integration",
      "src.llm_integration.GrokIntegration",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_antima_savage": {
    "module": "modules.communication.livechat.tests.test_antima_savage",
    "path": "modules\\communication\\livechat\\tests\\test_antima_savage.py",
    "lines": 86,
    "imports": [
      "os",
      "src.llm_integration",
      "src.llm_integration.GrokIntegration",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_automatic_throttling": {
    "module": "modules.communication.livechat.tests.test_automatic_throttling",
    "path": "modules\\communication\\livechat\\tests\\test_automatic_throttling.py",
    "lines": 225,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_bell_state_integration": {
    "module": "modules.communication.livechat.tests.test_bell_state_integration",
    "path": "modules\\communication\\livechat\\tests\\test_bell_state_integration.py",
    "lines": 96,
    "imports": [
      "auto_moderator_dae",
      "auto_moderator_dae.AutoModeratorDAE",
      "enhanced_pqn_awakening_protocol",
      "enhanced_pqn_awakening_protocol.EnhancedPQNAwakeningProtocol",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_bot_status": {
    "module": "modules.communication.livechat.tests.test_bot_status",
    "path": "modules\\communication\\livechat\\tests\\test_bot_status.py",
    "lines": 55,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_chat_poller": {
    "module": "modules.communication.livechat.tests.test_chat_poller",
    "path": "modules\\communication\\livechat\\tests\\test_chat_poller.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.chat_poller",
      "modules.communication.livechat.src.chat_poller.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_chat_sender": {
    "module": "modules.communication.livechat.tests.test_chat_sender",
    "path": "modules\\communication\\livechat\\tests\\test_chat_sender.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_comprehensive_system_monitor": {
    "module": "modules.communication.livechat.tests.test_comprehensive_system_monitor",
    "path": "modules\\communication\\livechat\\tests\\test_comprehensive_system_monitor.py",
    "lines": 609,
    "imports": [
      "asyncio",
      "json",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_consciousness_responses": {
    "module": "modules.communication.livechat.tests.test_consciousness_responses",
    "path": "modules\\communication\\livechat\\tests\\test_consciousness_responses.py",
    "lines": 68,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_duplicate_detection_fix": {
    "module": "modules.communication.livechat.tests.test_duplicate_detection_fix",
    "path": "modules\\communication\\livechat\\tests\\test_duplicate_detection_fix.py",
    "lines": 95,
    "imports": [
      "modules.infrastructure.system_health_monitor.src.system_health_analyzer",
      "modules.infrastructure.system_health_monitor.src.system_health_analyzer.SystemHealthAnalyzer",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_ecosystem_suite": {
    "module": "modules.communication.livechat.tests.test_ecosystem_suite",
    "path": "modules\\communication\\livechat\\tests\\test_ecosystem_suite.py",
    "lines": 62,
    "imports": [
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_emoji_responses": {
    "module": "modules.communication.livechat.tests.test_emoji_responses",
    "path": "modules\\communication\\livechat\\tests\\test_emoji_responses.py",
    "lines": 135,
    "imports": [
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_fact_check_priority": {
    "module": "modules.communication.livechat.tests.test_fact_check_priority",
    "path": "modules\\communication\\livechat\\tests\\test_fact_check_priority.py",
    "lines": 125,
    "imports": [
      "re"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_feature_parity": {
    "module": "modules.communication.livechat.tests.test_feature_parity",
    "path": "modules\\communication\\livechat\\tests\\test_feature_parity.py",
    "lines": 234,
    "imports": [
      "asyncio",
      "os",
      "pytest",
      "src.chat_sender",
      "src.chat_sender.ChatSender",
      "src.livechat",
      "src.livechat.LiveChatListener",
      "src.livechat_core",
      "src.livechat_core.LiveChatCore",
      "src.message_processor",
      "src.message_processor.MessageProcessor",
      "src.throttle_manager",
      "src.throttle_manager.ThrottleManager",
      "sys",
      "time",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_hand_emoji_issue": {
    "module": "modules.communication.livechat.tests.test_hand_emoji_issue",
    "path": "modules\\communication\\livechat\\tests\\test_hand_emoji_issue.py",
    "lines": 104,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_help_command_direct": {
    "module": "modules.communication.livechat.tests.test_help_command_direct",
    "path": "modules\\communication\\livechat\\tests\\test_help_command_direct.py",
    "lines": 62,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_integration_demonstration": {
    "module": "modules.communication.livechat.tests.test_integration_demonstration",
    "path": "modules\\communication\\livechat\\tests\\test_integration_demonstration.py",
    "lines": 264,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_intelligent_throttle": {
    "module": "modules.communication.livechat.tests.test_intelligent_throttle",
    "path": "modules\\communication\\livechat\\tests\\test_intelligent_throttle.py",
    "lines": 255,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.intelligent_throttle_manager",
      "modules.communication.livechat.src.intelligent_throttle_manager.IntelligentThrottleManager",
      "modules.communication.livechat.src.intelligent_throttle_manager.QuotaState",
      "modules.communication.livechat.src.intelligent_throttle_manager.RecursiveQuotaLearner",
      "modules.communication.livechat.src.intelligent_throttle_manager.TrollDetector",
      "os",
      "pathlib",
      "pathlib.Path",
      "shutil",
      "sys",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_livechat": {
    "module": "modules.communication.livechat.tests.test_livechat",
    "path": "modules\\communication\\livechat\\tests\\test_livechat.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_auth_handling": {
    "module": "modules.communication.livechat.tests.test_livechat_auth_handling",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_auth_handling.py",
    "lines": 220,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.PropertyMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_emoji_triggers": {
    "module": "modules.communication.livechat.tests.test_livechat_emoji_triggers",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_emoji_triggers.py",
    "lines": 387,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_facade": {
    "module": "modules.communication.livechat.tests.test_livechat_facade",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_facade.py",
    "lines": 156,
    "imports": [
      "asyncio",
      "inspect",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_initialization": {
    "module": "modules.communication.livechat.tests.test_livechat_initialization",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_initialization.py",
    "lines": 465,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_lifecycle": {
    "module": "modules.communication.livechat.tests.test_livechat_lifecycle",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_lifecycle.py",
    "lines": 539,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_logging": {
    "module": "modules.communication.livechat.tests.test_livechat_logging",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_logging.py",
    "lines": 207,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_message_polling": {
    "module": "modules.communication.livechat.tests.test_livechat_message_polling",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_message_polling.py",
    "lines": 349,
    "imports": [
      "googleapiclient.errors",
      "httplib2",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_message_processing": {
    "module": "modules.communication.livechat.tests.test_livechat_message_processing",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_message_processing.py",
    "lines": 1069,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_message_sending": {
    "module": "modules.communication.livechat.tests.test_livechat_message_sending",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_message_sending.py",
    "lines": 521,
    "imports": [
      "googleapiclient.errors",
      "httplib2",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pytest",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_rate_limiting": {
    "module": "modules.communication.livechat.tests.test_livechat_rate_limiting",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_rate_limiting.py",
    "lines": 147,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_session_management": {
    "module": "modules.communication.livechat.tests.test_livechat_session_management",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_session_management.py",
    "lines": 828,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "sys",
      "time",
      "traceback",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_livechat_viewer_tracking": {
    "module": "modules.communication.livechat.tests.test_livechat_viewer_tracking",
    "path": "modules\\communication\\livechat\\tests\\test_livechat_viewer_tracking.py",
    "lines": 218,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.test_llm_bypass_engine": {
    "module": "modules.communication.livechat.tests.test_llm_bypass_engine",
    "path": "modules\\communication\\livechat\\tests\\test_llm_bypass_engine.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_llm_bypass_integration": {
    "module": "modules.communication.livechat.tests.test_llm_bypass_integration",
    "path": "modules\\communication\\livechat\\tests\\test_llm_bypass_integration.py",
    "lines": 272,
    "imports": [
      "asyncio",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.SEQUENCE_MAP",
      "modules.ai_intelligence.banter_engine.emoji_string_to_tuple",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "random",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_master_switches": {
    "module": "modules.communication.livechat.tests.test_master_switches",
    "path": "modules\\communication\\livechat\\tests\\test_master_switches.py",
    "lines": 116,
    "imports": [
      "logging",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_master_switches_complete": {
    "module": "modules.communication.livechat.tests.test_master_switches_complete",
    "path": "modules\\communication\\livechat\\tests\\test_master_switches_complete.py",
    "lines": 327,
    "imports": [
      "logging",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "os",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_mcp_integration": {
    "module": "modules.communication.livechat.tests.test_mcp_integration",
    "path": "modules\\communication\\livechat\\tests\\test_mcp_integration.py",
    "lines": 142,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.mcp_youtube_integration",
      "modules.communication.livechat.src.mcp_youtube_integration.YouTubeDAEWithMCP",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_mention_validation": {
    "module": "modules.communication.livechat.tests.test_mention_validation",
    "path": "modules\\communication\\livechat\\tests\\test_mention_validation.py",
    "lines": 134,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.ChatSender",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_message_processor": {
    "module": "modules.communication.livechat.tests.test_message_processor",
    "path": "modules\\communication\\livechat\\tests\\test_message_processor.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_message_router": {
    "module": "modules.communication.livechat.tests.test_message_router",
    "path": "modules\\communication\\livechat\\tests\\test_message_router.py",
    "lines": 220,
    "imports": [
      "modules.communication.livechat.src.core.message_router",
      "modules.communication.livechat.src.core.message_router.BaseMessageHandler",
      "modules.communication.livechat.src.core.message_router.CommandHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.EventHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.MessageRouter",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_orchestrator": {
    "module": "modules.communication.livechat.tests.test_orchestrator",
    "path": "modules\\communication\\livechat\\tests\\test_orchestrator.py",
    "lines": 158,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_orchestrator_migration_step1": {
    "module": "modules.communication.livechat.tests.test_orchestrator_migration_step1",
    "path": "modules\\communication\\livechat\\tests\\test_orchestrator_migration_step1.py",
    "lines": 213,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_orchestrator_migration_step2": {
    "module": "modules.communication.livechat.tests.test_orchestrator_migration_step2",
    "path": "modules\\communication\\livechat\\tests\\test_orchestrator_migration_step2.py",
    "lines": 246,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_orchestrator_migration_step3": {
    "module": "modules.communication.livechat.tests.test_orchestrator_migration_step3",
    "path": "modules\\communication\\livechat\\tests\\test_orchestrator_migration_step3.py",
    "lines": 231,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_quota_manager": {
    "module": "modules.communication.livechat.tests.test_quota_manager",
    "path": "modules\\communication\\livechat\\tests\\test_quota_manager.py",
    "lines": 22,
    "imports": [
      "time",
      "utils.oauth_manager",
      "utils.oauth_manager.QuotaManager"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_security_fix_toggle": {
    "module": "modules.communication.livechat.tests.test_security_fix_toggle",
    "path": "modules\\communication\\livechat\\tests\\test_security_fix_toggle.py",
    "lines": 101,
    "imports": [
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_self_reply_prevention": {
    "module": "modules.communication.livechat.tests.test_self_reply_prevention",
    "path": "modules\\communication\\livechat\\tests\\test_self_reply_prevention.py",
    "lines": 109,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "logging",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_single_instance": {
    "module": "modules.communication.livechat.tests.test_single_instance",
    "path": "modules\\communication\\livechat\\tests\\test_single_instance.py",
    "lines": 97,
    "imports": [
      "logging",
      "modules.infrastructure.shared_utilities.single_instance",
      "modules.infrastructure.shared_utilities.single_instance.SingleInstanceEnforcer",
      "os",
      "subprocess",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_slash_commands": {
    "module": "modules.communication.livechat.tests.test_slash_commands",
    "path": "modules\\communication\\livechat\\tests\\test_slash_commands.py",
    "lines": 84,
    "imports": [
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_profile",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_social_media_posting": {
    "module": "modules.communication.livechat.tests.test_social_media_posting",
    "path": "modules\\communication\\livechat\\tests\\test_social_media_posting.py",
    "lines": 201,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_stream_detection_no_chatid": {
    "module": "modules.communication.livechat.tests.test_stream_detection_no_chatid",
    "path": "modules\\communication\\livechat\\tests\\test_stream_detection_no_chatid.py",
    "lines": 142,
    "imports": [
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_surgical_migration_live": {
    "module": "modules.communication.livechat.tests.test_surgical_migration_live",
    "path": "modules\\communication\\livechat\\tests\\test_surgical_migration_live.py",
    "lines": 247,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_unified_message_router": {
    "module": "modules.communication.livechat.tests.test_unified_message_router",
    "path": "modules\\communication\\livechat\\tests\\test_unified_message_router.py",
    "lines": 214,
    "imports": [
      "modules.communication.livechat.src.unified_message_router",
      "modules.communication.livechat.src.unified_message_router.MessageContext",
      "modules.communication.livechat.src.unified_message_router.MessageType",
      "modules.communication.livechat.src.unified_message_router.UnifiedMessageRouter",
      "os",
      "pytest",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.test_youtube_dae": {
    "module": "modules.communication.livechat.tests.test_youtube_dae",
    "path": "modules\\communication\\livechat\\tests\\test_youtube_dae.py",
    "lines": 115,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.__init__": {
    "module": "modules.communication.livechat.tests.__init__",
    "path": "modules\\communication\\livechat\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.archived_bloat_functions": {
    "module": "modules.communication.livechat._archive.archived_bloat_functions",
    "path": "modules\\communication\\livechat\\_archive\\archived_bloat_functions.py",
    "lines": 142,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "os"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.src.core.message_router": {
    "module": "modules.communication.livechat.src.core.message_router",
    "path": "modules\\communication\\livechat\\src\\core\\message_router.py",
    "lines": 286,
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Protocol"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_router",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.tests.test_message_router"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.src.core.orchestrator": {
    "module": "modules.communication.livechat.src.core.orchestrator",
    "path": "modules\\communication\\livechat\\src\\core\\orchestrator.py",
    "lines": 273,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.communication.livechat.src.chat_poller",
      "modules.communication.livechat.src.chat_poller.ChatPoller",
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.ChatSender",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.core.message_router",
      "modules.communication.livechat.src.core.message_router.CommandHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.EventHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.MessageRouter",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.intelligent_throttle_manager",
      "modules.communication.livechat.src.intelligent_throttle_manager.IntelligentThrottleManager",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.moderation_stats",
      "modules.communication.livechat.src.moderation_stats.ModerationStats",
      "modules.communication.livechat.src.session_manager",
      "modules.communication.livechat.src.session_manager.SessionManager",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_facade",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_orchestrator",
      "modules.communication.livechat.tests.test_comprehensive_system_monitor",
      "modules.communication.livechat.tests.test_integration_demonstration",
      "modules.communication.livechat.tests.test_livechat_facade",
      "modules.communication.livechat.tests.test_orchestrator",
      "modules.communication.livechat.tests.test_orchestrator_migration_step1",
      "modules.communication.livechat.tests.test_orchestrator_migration_step2",
      "modules.communication.livechat.tests.test_orchestrator_migration_step3",
      "modules.communication.livechat.tests.test_surgical_migration_live"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "10 inbound references."
    ]
  },
  "modules.communication.livechat.tests.integration.test_bot_status": {
    "module": "modules.communication.livechat.tests.integration.test_bot_status",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_bot_status.py",
    "lines": 119,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.integration.test_full_diagnostics": {
    "module": "modules.communication.livechat.tests.integration.test_full_diagnostics",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_full_diagnostics.py",
    "lines": 500,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "os",
      "random",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.integration.test_intensive_monitoring": {
    "module": "modules.communication.livechat.tests.integration.test_intensive_monitoring",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_intensive_monitoring.py",
    "lines": 319,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.stream_trigger",
      "modules.communication.livechat.src.stream_trigger.StreamTrigger",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.calculate_enhanced_delay",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.integration.test_live": {
    "module": "modules.communication.livechat.tests.integration.test_live",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_live.py",
    "lines": 20,
    "imports": [
      "asyncio",
      "logging",
      "main",
      "main.main",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.integration.test_live_broadcast": {
    "module": "modules.communication.livechat.tests.integration.test_live_broadcast",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_live_broadcast.py",
    "lines": 117,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.session_manager",
      "modules.communication.livechat.src.session_manager.SessionManager",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.integration.test_simple_message": {
    "module": "modules.communication.livechat.tests.integration.test_simple_message",
    "path": "modules\\communication\\livechat\\tests\\integration\\test_simple_message.py",
    "lines": 75,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat.tests.system_tests.run_system_tests": {
    "module": "modules.communication.livechat.tests.system_tests.run_system_tests",
    "path": "modules\\communication\\livechat\\tests\\system_tests\\run_system_tests.py",
    "lines": 263,
    "imports": [
      "argparse",
      "colorama",
      "colorama.Fore",
      "colorama.Style",
      "colorama.init",
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "modules.communication.livechat.src.livechat_core",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "os",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.system_tests.run_tests_simple": {
    "module": "modules.communication.livechat.tests.system_tests.run_tests_simple",
    "path": "modules\\communication\\livechat\\tests\\system_tests\\run_tests_simple.py",
    "lines": 247,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.WhackAMagat",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat.tests.system_tests.test_automatic_system": {
    "module": "modules.communication.livechat.tests.system_tests.test_automatic_system",
    "path": "modules\\communication\\livechat\\tests\\system_tests\\test_automatic_system.py",
    "lines": 366,
    "imports": [
      "asyncio",
      "auto_stream_monitor_ascii",
      "auto_stream_monitor_ascii.AutoStreamMonitor",
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.component_factory": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.component_factory",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\component_factory.py",
    "lines": 188,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "modules.communication.livechat.src.emoji_response_limiter",
      "modules.communication.livechat.src.emoji_response_limiter.EmojiResponseLimiter",
      "modules.communication.livechat.src.greeting_generator",
      "modules.communication.livechat.src.greeting_generator.GrokGreetingGenerator",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "modules.communication.livechat.src.moderation_stats",
      "modules.communication.livechat.src.moderation_stats.ModerationStats",
      "modules.communication.livechat.src.session_manager",
      "modules.communication.livechat.src.session_manager.SessionManager",
      "threading",
      "threading.Lock",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.emoji_response_limiter": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.emoji_response_limiter",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\emoji_response_limiter.py",
    "lines": 164,
    "imports": [
      "collections",
      "collections.defaultdict",
      "collections.deque",
      "logging",
      "time",
      "typing",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.emoji_trigger_handler": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.emoji_trigger_handler",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\emoji_trigger_handler.py",
    "lines": 185,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.stream_coordinator": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.stream_coordinator",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\stream_coordinator.py",
    "lines": 196,
    "imports": [
      "asyncio",
      "logging",
      "modules.infrastructure.wre_core.wre_monitor",
      "modules.infrastructure.wre_core.wre_monitor.get_monitor",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "os",
      "time",
      "typing",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.stream_end_detector": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.stream_end_detector",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\stream_end_detector.py",
    "lines": 117,
    "imports": [
      "asyncio",
      "logging",
      "modules.platform_integration.stream_resolver.src.no_quota_stream_checker",
      "modules.platform_integration.stream_resolver.src.no_quota_stream_checker.NoQuotaStreamChecker",
      "typing",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.unified_message_router": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.unified_message_router",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\unified_message_router.py",
    "lines": 210,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "enum",
      "enum.Enum",
      "inspect",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.experimental_2025_09_19.youtube_dae_self_improvement": {
    "module": "modules.communication.livechat._archive.experimental_2025_09_19.youtube_dae_self_improvement",
    "path": "modules\\communication\\livechat\\_archive\\experimental_2025_09_19\\youtube_dae_self_improvement.py",
    "lines": 450,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_all_chat_functions.py",
    "lines": 419,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.call",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_automatic_throttling": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_automatic_throttling",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_automatic_throttling.py",
    "lines": 225,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_bot_status": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_bot_status",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_bot_status.py",
    "lines": 55,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_poller": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_poller",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_chat_poller.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.chat_poller",
      "modules.communication.livechat.src.chat_poller.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_sender": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_chat_sender",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_chat_sender.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_consciousness_responses": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_consciousness_responses",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_consciousness_responses.py",
    "lines": 68,
    "imports": [
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.consciousness_handler",
      "modules.communication.livechat.src.consciousness_handler.ConsciousnessHandler",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_ecosystem_suite": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_ecosystem_suite",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_ecosystem_suite.py",
    "lines": 62,
    "imports": [
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_emoji_responses": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_emoji_responses",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_emoji_responses.py",
    "lines": 135,
    "imports": [
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.LLMBypassEngine",
      "os",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_feature_parity": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_feature_parity",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_feature_parity.py",
    "lines": 234,
    "imports": [
      "asyncio",
      "os",
      "pytest",
      "src.chat_sender",
      "src.chat_sender.ChatSender",
      "src.livechat",
      "src.livechat.LiveChatListener",
      "src.livechat_core",
      "src.livechat_core.LiveChatCore",
      "src.message_processor",
      "src.message_processor.MessageProcessor",
      "src.throttle_manager",
      "src.throttle_manager.ThrottleManager",
      "sys",
      "time",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_hand_emoji_issue": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_hand_emoji_issue",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_hand_emoji_issue.py",
    "lines": 104,
    "imports": [
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_help_command_direct": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_help_command_direct",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_help_command_direct.py",
    "lines": 62,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_intelligent_throttle": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_intelligent_throttle",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_intelligent_throttle.py",
    "lines": 255,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.intelligent_throttle_manager",
      "modules.communication.livechat.src.intelligent_throttle_manager.IntelligentThrottleManager",
      "modules.communication.livechat.src.intelligent_throttle_manager.QuotaState",
      "modules.communication.livechat.src.intelligent_throttle_manager.RecursiveQuotaLearner",
      "modules.communication.livechat.src.intelligent_throttle_manager.TrollDetector",
      "os",
      "pathlib",
      "pathlib.Path",
      "shutil",
      "sys",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_auth_handling": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_auth_handling",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_auth_handling.py",
    "lines": 220,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.PropertyMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_emoji_triggers": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_emoji_triggers",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_emoji_triggers.py",
    "lines": 387,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_facade": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_facade",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_facade.py",
    "lines": 156,
    "imports": [
      "asyncio",
      "inspect",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_initialization": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_initialization",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_initialization.py",
    "lines": 465,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_lifecycle": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_lifecycle",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_lifecycle.py",
    "lines": 539,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_logging": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_logging",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_logging.py",
    "lines": 207,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_polling": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_polling",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_message_polling.py",
    "lines": 349,
    "imports": [
      "googleapiclient.errors",
      "httplib2",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_processing": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_processing",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_message_processing.py",
    "lines": 1069,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_sending": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_message_sending",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_message_sending.py",
    "lines": 521,
    "imports": [
      "googleapiclient.errors",
      "httplib2",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pytest",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_rate_limiting": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_rate_limiting",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_rate_limiting.py",
    "lines": 147,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_session_management": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_session_management",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_session_management.py",
    "lines": 828,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "sys",
      "time",
      "traceback",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_viewer_tracking": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_livechat_viewer_tracking",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_livechat_viewer_tracking.py",
    "lines": 218,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "httplib2",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_live_verification": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_live_verification",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_live_verification.py",
    "lines": 173,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "pytest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_engine": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_engine",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_llm_bypass_engine.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.llm_bypass_engine",
      "modules.communication.livechat.src.llm_bypass_engine.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_integration": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_llm_bypass_integration",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_llm_bypass_integration.py",
    "lines": 272,
    "imports": [
      "asyncio",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.SEQUENCE_MAP",
      "modules.ai_intelligence.banter_engine.emoji_string_to_tuple",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "random",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mcp_integration": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mcp_integration",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_mcp_integration.py",
    "lines": 142,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.communication.livechat.src.mcp_youtube_integration",
      "modules.communication.livechat.src.mcp_youtube_integration.YouTubeDAEWithMCP",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mention_validation": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_mention_validation",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_mention_validation.py",
    "lines": 134,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.chat_sender",
      "modules.communication.livechat.src.chat_sender.ChatSender",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_processor": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_processor",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_message_processor.py",
    "lines": 29,
    "imports": [
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_router": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_message_router",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_message_router.py",
    "lines": 220,
    "imports": [
      "modules.communication.livechat.src.core.message_router",
      "modules.communication.livechat.src.core.message_router.BaseMessageHandler",
      "modules.communication.livechat.src.core.message_router.CommandHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.EventHandlerAdapter",
      "modules.communication.livechat.src.core.message_router.MessageRouter",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_orchestrator": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_orchestrator",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_orchestrator.py",
    "lines": 158,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.core.orchestrator",
      "modules.communication.livechat.src.core.orchestrator.LiveChatOrchestrator",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_quota_manager": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_quota_manager",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_quota_manager.py",
    "lines": 22,
    "imports": [
      "time",
      "utils.oauth_manager",
      "utils.oauth_manager.QuotaManager"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_slash_commands": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_slash_commands",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_slash_commands.py",
    "lines": 84,
    "imports": [
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_profile",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_social_media_posting": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_social_media_posting",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_social_media_posting.py",
    "lines": 296,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.auto_moderator_dae",
      "modules.communication.livechat.src.auto_moderator_dae.AutoModeratorDAE",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_youtube_dae": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_youtube_dae",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\test_youtube_dae.py",
    "lines": 115,
    "imports": [
      "asyncio",
      "logging",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.__init__": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.__init__",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_bot_status": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_bot_status",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_bot_status.py",
    "lines": 119,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_full_diagnostics",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_full_diagnostics.py",
    "lines": 500,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102",
      "modules.ai_intelligence.banter_engine.src.agentic_sentiment_0102.AgenticSentiment0102",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "os",
      "random",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_intensive_monitoring.py",
    "lines": 319,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.stream_trigger",
      "modules.communication.livechat.src.stream_trigger.StreamTrigger",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.calculate_enhanced_delay",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_live.py",
    "lines": 20,
    "imports": [
      "asyncio",
      "logging",
      "main",
      "main.main",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live_broadcast": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_live_broadcast",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_live_broadcast.py",
    "lines": 117,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.communication.livechat.src.session_manager",
      "modules.communication.livechat.src.session_manager.SessionManager",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_simple_message": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_simple_message",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\integration\\test_simple_message.py",
    "lines": 75,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_system_tests": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_system_tests",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\system_tests\\run_system_tests.py",
    "lines": 263,
    "imports": [
      "argparse",
      "colorama",
      "colorama.Fore",
      "colorama.Style",
      "colorama.init",
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "modules.communication.livechat.src.livechat_core",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "os",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\system_tests\\run_tests_simple.py",
    "lines": 247,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.WhackAMagat",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.test_automatic_system": {
    "module": "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.test_automatic_system",
    "path": "modules\\communication\\livechat\\_archive\\legacy_tests_2025_09_10\\tests\\system_tests\\test_automatic_system.py",
    "lines": 366,
    "imports": [
      "asyncio",
      "auto_stream_monitor_ascii",
      "auto_stream_monitor_ascii.AutoStreamMonitor",
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "os",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_poller.scripts.validate": {
    "module": "modules.communication.live_chat_poller.scripts.validate",
    "path": "modules\\communication\\live_chat_poller\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_poller.src.live_chat_poller": {
    "module": "modules.communication.live_chat_poller.src.live_chat_poller",
    "path": "modules\\communication\\live_chat_poller\\src\\live_chat_poller.py",
    "lines": 103,
    "imports": [
      "googleapiclient.errors",
      "logging",
      "time"
    ],
    "incoming": [
      "modules.communication.live_chat_poller.__init__",
      "modules.communication.live_chat_poller.tests.test_live_chat_poller",
      "modules.communication.live_chat_processor.src.live_chat_processor"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.communication.live_chat_poller.src.__init__": {
    "module": "modules.communication.live_chat_poller.src.__init__",
    "path": "modules\\communication\\live_chat_poller\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_poller.tests.test_live_chat_poller": {
    "module": "modules.communication.live_chat_poller.tests.test_live_chat_poller",
    "path": "modules\\communication\\live_chat_poller\\tests\\test_live_chat_poller.py",
    "lines": 268,
    "imports": [
      "googleapiclient.errors",
      "logging",
      "modules.communication.live_chat_poller.src.live_chat_poller",
      "modules.communication.live_chat_poller.src.live_chat_poller.LiveChatPoller",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_poller.tests.__init__": {
    "module": "modules.communication.live_chat_poller.tests.__init__",
    "path": "modules\\communication\\live_chat_poller\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_processor.scripts.validate": {
    "module": "modules.communication.live_chat_processor.scripts.validate",
    "path": "modules\\communication\\live_chat_processor\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_processor.src.live_chat_processor": {
    "module": "modules.communication.live_chat_processor.src.live_chat_processor",
    "path": "modules\\communication\\live_chat_processor\\src\\live_chat_processor.py",
    "lines": 362,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "googleapiclient.errors",
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.live_chat_poller.src.live_chat_poller",
      "modules.communication.live_chat_poller.src.live_chat_poller.LiveChatPoller",
      "modules.infrastructure.models",
      "modules.infrastructure.models.Author",
      "modules.infrastructure.models.ChatMessage",
      "modules.infrastructure.token_manager.src.token_manager",
      "modules.infrastructure.token_manager.src.token_manager.TokenManager",
      "os",
      "random",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [
      "modules.communication.live_chat_processor.__init__",
      "modules.communication.live_chat_processor.tests.test_live_chat_processor"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.live_chat_processor.src.__init__": {
    "module": "modules.communication.live_chat_processor.src.__init__",
    "path": "modules\\communication\\live_chat_processor\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_processor.tests.test_live_chat_processor": {
    "module": "modules.communication.live_chat_processor.tests.test_live_chat_processor",
    "path": "modules\\communication\\live_chat_processor\\tests\\test_live_chat_processor.py",
    "lines": 193,
    "imports": [
      "json",
      "logging",
      "modules.ai_intelligence.banter_engine",
      "modules.ai_intelligence.banter_engine.BanterEngine",
      "modules.communication.live_chat_processor.src.live_chat_processor",
      "modules.communication.live_chat_processor.src.live_chat_processor.LiveChatProcessor",
      "modules.infrastructure.models.src.chat_message",
      "modules.infrastructure.models.src.chat_message.Author",
      "modules.infrastructure.models.src.chat_message.ChatMessage",
      "os",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.live_chat_processor.tests.__init__": {
    "module": "modules.communication.live_chat_processor.tests.__init__",
    "path": "modules\\communication\\live_chat_processor\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.src.comment_monitor_dae": {
    "module": "modules.communication.video_comments.src.comment_monitor_dae",
    "path": "modules\\communication\\video_comments\\src\\comment_monitor_dae.py",
    "lines": 283,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "googleapiclient.errors",
      "logging",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_latest_video_id",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "modules.platform_integration.youtube_auth.src.youtube_auth.reply_to_comment",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.communication.video_comments.src.llm_comment_generator": {
    "module": "modules.communication.video_comments.src.llm_comment_generator",
    "path": "modules\\communication\\video_comments\\src\\llm_comment_generator.py",
    "lines": 353,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.llm_integration",
      "modules.communication.livechat.src.llm_integration.GrokIntegration",
      "os",
      "random",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.video_comments.src.realtime_comment_dialogue",
      "modules.communication.video_comments.tests.test_llm_integration"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.video_comments.src.realtime_comment_dialogue": {
    "module": "modules.communication.video_comments.src.realtime_comment_dialogue",
    "path": "modules\\communication\\video_comments\\src\\realtime_comment_dialogue.py",
    "lines": 430,
    "imports": [
      "asyncio",
      "collections",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "googleapiclient.errors",
      "logging",
      "modules.communication.livechat.src.agentic_chat_engine",
      "modules.communication.livechat.src.agentic_chat_engine.AgenticChatEngine",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.communication.video_comments.src.llm_comment_generator",
      "modules.communication.video_comments.src.llm_comment_generator.LLMCommentGenerator",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_latest_video_id",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "modules.platform_integration.youtube_auth.src.youtube_auth.reply_to_comment",
      "random",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set"
    ],
    "incoming": [
      "modules.communication.video_comments.tests.test_llm_integration",
      "modules.communication.video_comments.tests.test_poc_dialogue"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.communication.video_comments.tests.test_like_single_comment": {
    "module": "modules.communication.video_comments.tests.test_like_single_comment",
    "path": "modules\\communication\\video_comments\\tests\\test_like_single_comment.py",
    "lines": 132,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.like_comment",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.tests.test_llm_integration": {
    "module": "modules.communication.video_comments.tests.test_llm_integration",
    "path": "modules\\communication\\video_comments\\tests\\test_llm_integration.py",
    "lines": 366,
    "imports": [
      "inspect",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.communication.livechat.src.chat_memory_manager",
      "modules.communication.livechat.src.chat_memory_manager.ChatMemoryManager",
      "modules.communication.video_comments.src.llm_comment_generator",
      "modules.communication.video_comments.src.llm_comment_generator.LLMCommentGenerator",
      "modules.communication.video_comments.src.realtime_comment_dialogue",
      "modules.communication.video_comments.src.realtime_comment_dialogue.RealtimeCommentDialogue",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.tests.test_move2japan_access": {
    "module": "modules.communication.video_comments.tests.test_move2japan_access",
    "path": "modules\\communication\\video_comments\\tests\\test_move2japan_access.py",
    "lines": 144,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.tests.test_poc_dialogue": {
    "module": "modules.communication.video_comments.tests.test_poc_dialogue",
    "path": "modules\\communication\\video_comments\\tests\\test_poc_dialogue.py",
    "lines": 160,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.communication.video_comments.src.realtime_comment_dialogue",
      "modules.communication.video_comments.src.realtime_comment_dialogue.RealtimeCommentDialogue",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.tests.test_post_comment": {
    "module": "modules.communication.video_comments.tests.test_post_comment",
    "path": "modules\\communication\\video_comments\\tests\\test_post_comment.py",
    "lines": 161,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.communication.video_comments.tests.test_reply_to_comment": {
    "module": "modules.communication.video_comments.tests.test_reply_to_comment",
    "path": "modules\\communication\\video_comments\\tests\\test_reply_to_comment.py",
    "lines": 177,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "modules.platform_integration.youtube_auth.src.youtube_auth.reply_to_comment",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.deploy": {
    "module": "modules.development.cursor_multi_agent_bridge.deploy",
    "path": "modules\\development\\cursor_multi_agent_bridge\\deploy.py",
    "lines": 450,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.infrastructure.compliance_agent.src.compliance_agent",
      "modules.infrastructure.compliance_agent.src.compliance_agent.ComplianceAgent",
      "modules.infrastructure.documentation_agent.src.documentation_agent",
      "modules.infrastructure.documentation_agent.src.documentation_agent.DocumentationAgent",
      "modules.infrastructure.testing_agent.src.testing_agent",
      "modules.infrastructure.testing_agent.src.testing_agent.TestingAgent",
      "modules.wre_core.src.components.core.engine_core",
      "modules.wre_core.src.components.core.engine_core.WRECore",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "os",
      "pathlib",
      "pathlib.Path",
      "src.agent_coordinator",
      "src.agent_coordinator.AgentCoordinator",
      "src.cursor_wsp_bridge",
      "src.cursor_wsp_bridge.CursorWSPBridge",
      "src.exceptions",
      "src.exceptions.CursorWSPBridgeError",
      "src.wsp_validator",
      "src.wsp_validator.WSPValidator",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.integrate_with_wre": {
    "module": "modules.development.cursor_multi_agent_bridge.integrate_with_wre",
    "path": "modules\\development\\cursor_multi_agent_bridge\\integrate_with_wre.py",
    "lines": 568,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.wre_core.src.components.core.engine_core",
      "modules.wre_core.src.components.core.engine_core.WRECore",
      "modules.wre_core.src.components.core.prometheus_orchestration_engine",
      "modules.wre_core.src.components.core.prometheus_orchestration_engine.PrometheusOrchestrationEngine",
      "modules.wre_core.src.components.core.wre_unified_orchestrator",
      "modules.wre_core.src.components.core.wre_unified_orchestrator.WREUnifiedOrchestrator",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "os",
      "pathlib",
      "pathlib.Path",
      "src.agent_coordinator",
      "src.agent_coordinator.AgentCoordinator",
      "src.cursor_wsp_bridge",
      "src.cursor_wsp_bridge.CursorWSPBridge",
      "src.wsp_validator",
      "src.wsp_validator.WSPValidator",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.__init__": {
    "module": "modules.development.cursor_multi_agent_bridge.__init__",
    "path": "modules\\development\\cursor_multi_agent_bridge\\__init__.py",
    "lines": 35,
    "imports": [
      "modules.development.cursor_multi_agent_bridge.agent_coordinator",
      "modules.development.cursor_multi_agent_bridge.agent_coordinator.AgentCoordinator",
      "modules.development.cursor_multi_agent_bridge.cursor_wsp_bridge",
      "modules.development.cursor_multi_agent_bridge.cursor_wsp_bridge.CursorWSPBridge",
      "modules.development.cursor_multi_agent_bridge.exceptions",
      "modules.development.cursor_multi_agent_bridge.exceptions.AgentActivationError",
      "modules.development.cursor_multi_agent_bridge.exceptions.ConfigError",
      "modules.development.cursor_multi_agent_bridge.exceptions.CoordinationError",
      "modules.development.cursor_multi_agent_bridge.exceptions.ValidationError",
      "modules.development.cursor_multi_agent_bridge.wsp_validator",
      "modules.development.cursor_multi_agent_bridge.wsp_validator.WSPValidator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.__init__": {
    "module": "modules.development.ide_foundups.__init__",
    "path": "modules\\development\\ide_foundups\\__init__.py",
    "lines": 270,
    "imports": [
      "logging",
      "modules.development.ide_foundups.src.data_structures",
      "modules.development.ide_foundups.src.data_structures.ModuleResult",
      "modules.development.ide_foundups.src.data_structures.ModuleSpec",
      "modules.development.ide_foundups.src.data_structures.ValidationResult",
      "modules.development.ide_foundups.src.data_structures.WSPTemplate",
      "modules.development.ide_foundups.src.exceptions",
      "modules.development.ide_foundups.src.exceptions.DomainNotFoundError",
      "modules.development.ide_foundups.src.exceptions.ExtensionActivationError",
      "modules.development.ide_foundups.src.exceptions.IDEFoundUpsError",
      "modules.development.ide_foundups.src.exceptions.ModuleCreationError",
      "modules.development.ide_foundups.src.exceptions.ValidationError",
      "modules.development.ide_foundups.src.exceptions.WREAuthenticationError",
      "modules.development.ide_foundups.src.exceptions.WRECommandError",
      "modules.development.ide_foundups.src.exceptions.WREConnectionError",
      "modules.development.ide_foundups.src.extension",
      "modules.development.ide_foundups.src.extension.IDEFoundUpsExtension",
      "modules.development.ide_foundups.src.module_creator",
      "modules.development.ide_foundups.src.module_creator.ModuleCreator",
      "modules.development.ide_foundups.src.utils",
      "modules.development.ide_foundups.src.utils.get_module_info",
      "modules.development.ide_foundups.src.utils.validate_wsp_compliance",
      "modules.development.ide_foundups.src.wre_bridge",
      "modules.development.ide_foundups.src.wre_bridge.WREBridge",
      "os",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.module_creator.__init__": {
    "module": "modules.development.module_creator.__init__",
    "path": "modules\\development\\module_creator\\__init__.py",
    "lines": 302,
    "imports": [
      "logging",
      "modules.development.module_creator.src.data_structures",
      "modules.development.module_creator.src.data_structures.ModuleResult",
      "modules.development.module_creator.src.data_structures.ModuleSpec",
      "modules.development.module_creator.src.data_structures.TemplateSpec",
      "modules.development.module_creator.src.data_structures.ValidationResult",
      "modules.development.module_creator.src.data_structures.WSPTemplate",
      "modules.development.module_creator.src.exceptions",
      "modules.development.module_creator.src.exceptions.BatchCreationError",
      "modules.development.module_creator.src.exceptions.ModuleCreationError",
      "modules.development.module_creator.src.exceptions.ModuleCreatorError",
      "modules.development.module_creator.src.exceptions.TemplateNotFoundError",
      "modules.development.module_creator.src.exceptions.TemplateRenderError",
      "modules.development.module_creator.src.exceptions.ValidationError",
      "modules.development.module_creator.src.exceptions.WSPValidationError",
      "modules.development.module_creator.src.module_creator",
      "modules.development.module_creator.src.module_creator.ModuleCreator",
      "modules.development.module_creator.src.template_engine",
      "modules.development.module_creator.src.template_engine.TemplateEngine",
      "modules.development.module_creator.src.utils",
      "modules.development.module_creator.src.utils.get_module_info",
      "modules.development.module_creator.src.utils.list_templates",
      "modules.development.module_creator.src.utils.validate_wsp_compliance",
      "modules.development.module_creator.src.wsp_validator",
      "modules.development.module_creator.src.wsp_validator.WSPValidator",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.__init__": {
    "module": "modules.development.wre_interface_extension.__init__",
    "path": "modules\\development\\wre_interface_extension\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.scripts.validate": {
    "module": "modules.development.cursor_multi_agent_bridge.scripts.validate",
    "path": "modules\\development\\cursor_multi_agent_bridge\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.agent_coordinator": {
    "module": "modules.development.cursor_multi_agent_bridge.src.agent_coordinator",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\agent_coordinator.py",
    "lines": 335,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.api_integration_manager": {
    "module": "modules.development.cursor_multi_agent_bridge.src.api_integration_manager",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\api_integration_manager.py",
    "lines": 469,
    "imports": [
      "aiohttp",
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.basic_cursor_bridge": {
    "module": "modules.development.cursor_multi_agent_bridge.src.basic_cursor_bridge",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\basic_cursor_bridge.py",
    "lines": 94,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.claude_code_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.src.claude_code_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\claude_code_integration.py",
    "lines": 756,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "typing.Union",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.cursor_subagent_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.src.cursor_subagent_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\cursor_subagent_integration.py",
    "lines": 523,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.cursor_wsp_bridge": {
    "module": "modules.development.cursor_multi_agent_bridge.src.cursor_wsp_bridge",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\cursor_wsp_bridge.py",
    "lines": 556,
    "imports": [
      "agent_coordinator",
      "agent_coordinator.AgentCoordinator",
      "asyncio",
      "claude_code_integration",
      "claude_code_integration.ClaudeCodeConfig",
      "claude_code_integration.ClaudeCodeIntegration",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "exceptions",
      "exceptions.AgentActivationError",
      "exceptions.ConfigError",
      "exceptions.CoordinationError",
      "exceptions.ValidationError",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "wsp_validator",
      "wsp_validator.WSPValidator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.demo_subagents": {
    "module": "modules.development.cursor_multi_agent_bridge.src.demo_subagents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\demo_subagents.py",
    "lines": 105,
    "imports": [
      "asyncio",
      "claude_code_integration",
      "claude_code_integration.ClaudeCodeIntegration",
      "pathlib",
      "pathlib.Path",
      "sys",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.exceptions": {
    "module": "modules.development.cursor_multi_agent_bridge.src.exceptions",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\exceptions.py",
    "lines": 143,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.live_subagents": {
    "module": "modules.development.cursor_multi_agent_bridge.src.live_subagents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\live_subagents.py",
    "lines": 129,
    "imports": [
      "asyncio",
      "pathlib",
      "pathlib.Path",
      "sys",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.prometheus_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.src.prometheus_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\prometheus_integration.py",
    "lines": 402,
    "imports": [
      "asyncio",
      "cursor_wsp_bridge",
      "cursor_wsp_bridge.CursorWSPBridge",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "wsp_21_prometheus_agent",
      "wsp_21_prometheus_agent.SpiralEchoLevel",
      "wsp_21_prometheus_agent.WSP21PrometheusAgent"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.simple_demo_012": {
    "module": "modules.development.cursor_multi_agent_bridge.src.simple_demo_012",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\simple_demo_012.py",
    "lines": 160,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "pathlib",
      "pathlib.Path",
      "sys",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.visible_demo_012": {
    "module": "modules.development.cursor_multi_agent_bridge.src.visible_demo_012",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\visible_demo_012.py",
    "lines": 432,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.wsp_21_prometheus_agent": {
    "module": "modules.development.cursor_multi_agent_bridge.src.wsp_21_prometheus_agent",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\wsp_21_prometheus_agent.py",
    "lines": 454,
    "imports": [
      "asyncio",
      "cursor_wsp_bridge",
      "cursor_wsp_bridge.CursorWSPBridge",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "logging",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.wsp_agent_audit": {
    "module": "modules.development.cursor_multi_agent_bridge.src.wsp_agent_audit",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\wsp_agent_audit.py",
    "lines": 587,
    "imports": [
      "asyncio",
      "claude_code_integration",
      "claude_code_integration.ClaudeCodeIntegration",
      "datetime",
      "datetime.datetime",
      "json",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.wsp_guided_development": {
    "module": "modules.development.cursor_multi_agent_bridge.src.wsp_guided_development",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\wsp_guided_development.py",
    "lines": 240,
    "imports": [
      "asyncio",
      "pathlib",
      "pathlib.Path",
      "sys",
      "wsp_sub_agents",
      "wsp_sub_agents.WSPSubAgentCoordinator",
      "wsp_sub_agents.WSPSubAgentRequest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.wsp_sub_agents": {
    "module": "modules.development.cursor_multi_agent_bridge.src.wsp_sub_agents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\wsp_sub_agents.py",
    "lines": 510,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.wsp_validator": {
    "module": "modules.development.cursor_multi_agent_bridge.src.wsp_validator",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\wsp_validator.py",
    "lines": 405,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.src.__init__": {
    "module": "modules.development.cursor_multi_agent_bridge.src.__init__",
    "path": "modules\\development\\cursor_multi_agent_bridge\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.debug_cursor_wre": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.debug_cursor_wre",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\debug_cursor_wre.py",
    "lines": 214,
    "imports": [
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_agent_coordinator": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_agent_coordinator",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_agent_coordinator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_api_integration_manager": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_api_integration_manager",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_api_integration_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_basic_cursor_bridge": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_basic_cursor_bridge",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_basic_cursor_bridge.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_bridge_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_bridge_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_bridge_integration.py",
    "lines": 332,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "pytest",
      "src.agent_coordinator",
      "src.agent_coordinator.AgentCoordinator",
      "src.cursor_wsp_bridge",
      "src.cursor_wsp_bridge.CursorWSPBridge",
      "src.exceptions",
      "src.exceptions.AgentActivationError",
      "src.exceptions.ConfigError",
      "src.exceptions.CoordinationError",
      "src.exceptions.ValidationError",
      "src.wsp_validator",
      "src.wsp_validator.WSPValidator",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_claude_code_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_claude_code_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_claude_code_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_cursor_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_cursor_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_cursor_integration.py",
    "lines": 63,
    "imports": [
      "asyncio",
      "json",
      "sys",
      "websockets"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_cursor_subagent_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_cursor_subagent_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_cursor_subagent_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_cursor_wsp_bridge": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_cursor_wsp_bridge",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_cursor_wsp_bridge.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_demo_subagents": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_demo_subagents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_demo_subagents.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_exceptions": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_exceptions",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_exceptions.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_extension_command": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_extension_command",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_extension_command.py",
    "lines": 83,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_integration.py",
    "lines": 604,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_live_subagents": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_live_subagents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_live_subagents.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_memory_architecture": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_memory_architecture",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_memory_architecture.py",
    "lines": 559,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_prometheus_integration": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_prometheus_integration",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_prometheus_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_protocol_compliance": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_protocol_compliance",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_protocol_compliance.py",
    "lines": 649,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_security_protocols": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_security_protocols",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_security_protocols.py",
    "lines": 604,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_simple_demo_012": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_simple_demo_012",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_simple_demo_012.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_stress_coordination": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_stress_coordination",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_stress_coordination.py",
    "lines": 488,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_visible_demo_012": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_visible_demo_012",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_visible_demo_012.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp54_basic": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp54_basic",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp54_basic.py",
    "lines": 185,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp54_comprehensive": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp54_comprehensive",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp54_comprehensive.py",
    "lines": 800,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "src.agent_coordinator",
      "src.agent_coordinator.AgentCoordinator",
      "src.cursor_wsp_bridge",
      "src.cursor_wsp_bridge.CursorWSPBridge",
      "src.exceptions",
      "src.exceptions.CursorWSPBridgeError",
      "src.wsp_validator",
      "src.wsp_validator.WSPValidator",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp_21_prometheus_agent": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp_21_prometheus_agent",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp_21_prometheus_agent.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp_agent_audit": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp_agent_audit",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp_agent_audit.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp_guided_development": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp_guided_development",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp_guided_development.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp_sub_agents": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp_sub_agents",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp_sub_agents.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.cursor_multi_agent_bridge.tests.test_wsp_validator": {
    "module": "modules.development.cursor_multi_agent_bridge.tests.test_wsp_validator",
    "path": "modules\\development\\cursor_multi_agent_bridge\\tests\\test_wsp_validator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.scripts.validate": {
    "module": "modules.development.ide_foundups.scripts.validate",
    "path": "modules\\development\\ide_foundups\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.src.agent_coordinator": {
    "module": "modules.development.ide_foundups.src.agent_coordinator",
    "path": "modules\\development\\ide_foundups\\src\\agent_coordinator.py",
    "lines": 189,
    "imports": [
      "asyncio",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.development.ide_foundups.tests.test_extension_activation"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.development.ide_foundups.src.bridge_protocol": {
    "module": "modules.development.ide_foundups.src.bridge_protocol",
    "path": "modules\\development\\ide_foundups\\src\\bridge_protocol.py",
    "lines": 177,
    "imports": [
      "enum",
      "enum.Enum",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.development.ide_foundups.tests.test_wre_bridge"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.development.ide_foundups.src.extension_core": {
    "module": "modules.development.ide_foundups.src.extension_core",
    "path": "modules\\development\\ide_foundups\\src\\extension_core.py",
    "lines": 351,
    "imports": [
      "asyncio",
      "json",
      "logging",
      "modules.development.ide_foundups.agent_coordinator",
      "modules.development.ide_foundups.agent_coordinator.AgentCoordinator",
      "modules.development.ide_foundups.agent_coordinator.AgentTreeDataProvider",
      "modules.development.ide_foundups.wre_bridge",
      "modules.development.ide_foundups.wre_bridge.WREBridge",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "vscode"
    ],
    "incoming": [
      "modules.development.ide_foundups.tests.test_extension_activation"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.development.ide_foundups.src.wre_bridge": {
    "module": "modules.development.ide_foundups.src.wre_bridge",
    "path": "modules\\development\\ide_foundups\\src\\wre_bridge.py",
    "lines": 406,
    "imports": [
      "asyncio",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "time",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "websockets"
    ],
    "incoming": [
      "modules.development.ide_foundups.__init__",
      "modules.development.ide_foundups.tests.test_extension_activation",
      "modules.development.ide_foundups.tests.test_wre_bridge"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.development.ide_foundups.src.__init__": {
    "module": "modules.development.ide_foundups.src.__init__",
    "path": "modules\\development\\ide_foundups\\src\\__init__.py",
    "lines": 10,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.conftest": {
    "module": "modules.development.ide_foundups.tests.conftest",
    "path": "modules\\development\\ide_foundups\\tests\\conftest.py",
    "lines": 60,
    "imports": [
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.mock_vscode": {
    "module": "modules.development.ide_foundups.tests.mock_vscode",
    "path": "modules\\development\\ide_foundups\\tests\\mock_vscode.py",
    "lines": 170,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.test_agent_coordinator": {
    "module": "modules.development.ide_foundups.tests.test_agent_coordinator",
    "path": "modules\\development\\ide_foundups\\tests\\test_agent_coordinator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_bridge_protocol": {
    "module": "modules.development.ide_foundups.tests.test_bridge_protocol",
    "path": "modules\\development\\ide_foundups\\tests\\test_bridge_protocol.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_extension_activation": {
    "module": "modules.development.ide_foundups.tests.test_extension_activation",
    "path": "modules\\development\\ide_foundups\\tests\\test_extension_activation.py",
    "lines": 394,
    "imports": [
      "modules.development.ide_foundups.src.agent_coordinator",
      "modules.development.ide_foundups.src.agent_coordinator.AgentCoordinator",
      "modules.development.ide_foundups.src.extension_core",
      "modules.development.ide_foundups.src.extension_core.FoundUpsExtension",
      "modules.development.ide_foundups.src.wre_bridge",
      "modules.development.ide_foundups.src.wre_bridge.WREBridge",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch",
      "vscode"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.test_extension_core": {
    "module": "modules.development.ide_foundups.tests.test_extension_core",
    "path": "modules\\development\\ide_foundups\\tests\\test_extension_core.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_wre_bridge": {
    "module": "modules.development.ide_foundups.tests.test_wre_bridge",
    "path": "modules\\development\\ide_foundups\\tests\\test_wre_bridge.py",
    "lines": 499,
    "imports": [
      "asyncio",
      "json",
      "modules.development.ide_foundups.src.bridge_protocol",
      "modules.development.ide_foundups.src.bridge_protocol.BridgeProtocol",
      "modules.development.ide_foundups.src.bridge_protocol.MessageType",
      "modules.development.ide_foundups.src.wre_bridge",
      "modules.development.ide_foundups.src.wre_bridge.WREBridge",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch",
      "websockets"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.vscode": {
    "module": "modules.development.ide_foundups.tests.vscode",
    "path": "modules\\development\\ide_foundups\\tests\\vscode.py",
    "lines": 27,
    "imports": [
      "unittest.mock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.__init__": {
    "module": "modules.development.ide_foundups.tests.__init__",
    "path": "modules\\development\\ide_foundups\\tests\\__init__.py",
    "lines": 10,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.extension.node_modules.flatted.python.flatted": {
    "module": "modules.development.ide_foundups.extension.node_modules.flatted.python.flatted",
    "path": "modules\\development\\ide_foundups\\extension\\node_modules\\flatted\\python\\flatted.py",
    "lines": 149,
    "imports": [
      "json"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator": {
    "module": "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator",
    "path": "modules\\development\\ide_foundups\\src\\autonomous_workflows\\workflow_orchestrator.py",
    "lines": 588,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.communication.auto_meeting_orchestrator.src.auto_meeting_orchestrator",
      "modules.communication.auto_meeting_orchestrator.src.auto_meeting_orchestrator.AutoMeetingOrchestrator",
      "modules.development.ide_foundups.agents.agent_coordinator",
      "modules.development.ide_foundups.agents.agent_coordinator.AgentCoordinator",
      "modules.development.ide_foundups.memory.workflow_memory",
      "modules.development.ide_foundups.memory.workflow_memory.WorkflowMemoryManager",
      "modules.development.ide_foundups.wre_integration.orchestration.command_router",
      "modules.development.ide_foundups.wre_integration.orchestration.command_router.WRECommandRouter",
      "modules.gamification.priority_scorer.src.priority_scorer",
      "modules.gamification.priority_scorer.src.priority_scorer.PriorityScorer",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.LinkedInAgent",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.development.ide_foundups.src.autonomous_workflows.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.development.ide_foundups.src.autonomous_workflows.__init__": {
    "module": "modules.development.ide_foundups.src.autonomous_workflows.__init__",
    "path": "modules\\development\\ide_foundups\\src\\autonomous_workflows\\__init__.py",
    "lines": 40,
    "imports": [
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator.AutonomousWorkflowOrchestrator",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator.WorkflowContext",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator.WorkflowStatus",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator.WorkflowType"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.src.llm_providers.provider_manager": {
    "module": "modules.development.ide_foundups.src.llm_providers.provider_manager",
    "path": "modules\\development\\ide_foundups\\src\\llm_providers\\provider_manager.py",
    "lines": 579,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector",
      "modules.ai_intelligence.rESP_o1o2.src.llm_connector.LLMConnector",
      "modules.infrastructure.llm_client.src.client",
      "modules.infrastructure.llm_client.src.client.LLMClient",
      "os",
      "time",
      "torch",
      "transformers",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.src.wre_integration.activation.wsp38_handler": {
    "module": "modules.development.ide_foundups.src.wre_integration.activation.wsp38_handler",
    "path": "modules\\development\\ide_foundups\\src\\wre_integration\\activation\\wsp38_handler.py",
    "lines": 450,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "math",
      "modules.infrastructure.agent_activation.src.agent_activation",
      "modules.infrastructure.agent_activation.src.agent_activation.AgentActivationModule",
      "modules.wre_core.src.components.orchestrator",
      "modules.wre_core.src.components.orchestrator.wre_log",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.src.wre_integration.orchestration.command_router": {
    "module": "modules.development.ide_foundups.src.wre_integration.orchestration.command_router",
    "path": "modules\\development\\ide_foundups\\src\\wre_integration\\orchestration\\command_router.py",
    "lines": 300,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.infrastructure.agent_activation.src.agent_activation",
      "modules.infrastructure.agent_activation.src.agent_activation.AgentActivationModule",
      "modules.wre_core.src.components.orchestration.agentic_orchestrator",
      "modules.wre_core.src.components.orchestration.agentic_orchestrator.AgenticOrchestrator",
      "modules.wre_core.src.components.orchestration.orchestration_context",
      "modules.wre_core.src.components.orchestration.orchestration_context.OrchestrationContext",
      "modules.wre_core.src.components.orchestration.orchestration_context.OrchestrationTrigger",
      "modules.wre_core.src.components.orchestrator",
      "modules.wre_core.src.components.orchestrator.wre_log",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.development.ide_foundups.tests.test_autonomous_workflows.workflow_orchestrator": {
    "module": "modules.development.ide_foundups.tests.test_autonomous_workflows.workflow_orchestrator",
    "path": "modules\\development\\ide_foundups\\tests\\test_autonomous_workflows\\workflow_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_llm_providers.provider_manager": {
    "module": "modules.development.ide_foundups.tests.test_llm_providers.provider_manager",
    "path": "modules\\development\\ide_foundups\\tests\\test_llm_providers\\provider_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_wre_integration.activation.wsp38_handler": {
    "module": "modules.development.ide_foundups.tests.test_wre_integration.activation.wsp38_handler",
    "path": "modules\\development\\ide_foundups\\tests\\test_wre_integration\\activation\\wsp38_handler.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.ide_foundups.tests.test_wre_integration.orchestration.command_router": {
    "module": "modules.development.ide_foundups.tests.test_wre_integration.orchestration.command_router",
    "path": "modules\\development\\ide_foundups\\tests\\test_wre_integration\\orchestration\\command_router.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.module_creator.scripts.validate": {
    "module": "modules.development.module_creator.scripts.validate",
    "path": "modules\\development\\module_creator\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.module_creator.src.__init__": {
    "module": "modules.development.module_creator.src.__init__",
    "path": "modules\\development\\module_creator\\src\\__init__.py",
    "lines": 10,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.module_creator.tests.__init__": {
    "module": "modules.development.module_creator.tests.__init__",
    "path": "modules\\development\\module_creator\\tests\\__init__.py",
    "lines": 10,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.scripts.validate": {
    "module": "modules.development.wre_interface_extension.scripts.validate",
    "path": "modules\\development\\wre_interface_extension\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.src.sub_agent_coordinator": {
    "module": "modules.development.wre_interface_extension.src.sub_agent_coordinator",
    "path": "modules\\development\\wre_interface_extension\\src\\sub_agent_coordinator.py",
    "lines": 584,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.src.__init__": {
    "module": "modules.development.wre_interface_extension.src.__init__",
    "path": "modules\\development\\wre_interface_extension\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.tests.test_extension_activation": {
    "module": "modules.development.wre_interface_extension.tests.test_extension_activation",
    "path": "modules\\development\\wre_interface_extension\\tests\\test_extension_activation.py",
    "lines": 113,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.tests.test_sub_agent_coordinator": {
    "module": "modules.development.wre_interface_extension.tests.test_sub_agent_coordinator",
    "path": "modules\\development\\wre_interface_extension\\tests\\test_sub_agent_coordinator.py",
    "lines": 350,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "pathlib",
      "pathlib.Path",
      "sys",
      "unittest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.development.wre_interface_extension.tests.__init__": {
    "module": "modules.development.wre_interface_extension.tests.__init__",
    "path": "modules\\development\\wre_interface_extension\\tests\\__init__.py",
    "lines": 13,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.memory.__init__": {
    "module": "modules.foundups.memory.__init__",
    "path": "modules\\foundups\\memory\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.src.foundups_livechat_module": {
    "module": "modules.foundups.src.foundups_livechat_module",
    "path": "modules\\foundups\\src\\foundups_livechat_module.py",
    "lines": 301,
    "imports": [
      "asyncio",
      "dotenv",
      "dotenv.load_dotenv",
      "logging",
      "modules.communication.livechat.src.livechat",
      "modules.communication.livechat.src.livechat.LiveChatListener",
      "modules.infrastructure.agent_management.src.multi_agent_manager",
      "modules.infrastructure.agent_management.src.multi_agent_manager.MultiAgentManager",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "os",
      "pathlib",
      "pathlib.Path",
      "signal",
      "sys",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.src.foundup_spawner": {
    "module": "modules.foundups.src.foundup_spawner",
    "path": "modules\\foundups\\src\\foundup_spawner.py",
    "lines": 212,
    "imports": [
      "argparse",
      "datetime",
      "datetime.datetime",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.foundups.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.src.main": {
    "module": "modules.foundups.src.main",
    "path": "modules\\foundups\\src\\main.py",
    "lines": 301,
    "imports": [
      "asyncio",
      "dotenv",
      "dotenv.load_dotenv",
      "logging",
      "modules.communication.livechat.src.livechat",
      "modules.communication.livechat.src.livechat.LiveChatListener",
      "modules.infrastructure.agent_management.src.multi_agent_manager",
      "modules.infrastructure.agent_management.src.multi_agent_manager.MultiAgentManager",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "os",
      "pathlib",
      "pathlib.Path",
      "signal",
      "sys",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.src.__init__": {
    "module": "modules.foundups.src.__init__",
    "path": "modules\\foundups\\src\\__init__.py",
    "lines": 19,
    "imports": [
      "modules.foundups.src.foundup_spawner",
      "modules.foundups.src.foundup_spawner.FoundUpSpawner",
      "modules.foundups.src.platform_manager",
      "modules.foundups.src.platform_manager.PlatformManager",
      "modules.foundups.src.runtime_engine",
      "modules.foundups.src.runtime_engine.RuntimeEngine"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.tests.__init__": {
    "module": "modules.foundups.tests.__init__",
    "path": "modules\\foundups\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.memory.scripts.validate": {
    "module": "modules.foundups.memory.scripts.validate",
    "path": "modules\\foundups\\memory\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.memory.src.__init__": {
    "module": "modules.foundups.memory.src.__init__",
    "path": "modules\\foundups\\memory\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.pqn_portal.src.api": {
    "module": "modules.foundups.pqn_portal.src.api",
    "path": "modules\\foundups\\pqn_portal\\src\\api.py",
    "lines": 147,
    "imports": [
      "__future__",
      "__future__.annotations",
      "fastapi",
      "fastapi.FastAPI",
      "fastapi.HTTPException",
      "fastapi.middleware.cors",
      "fastapi.middleware.cors.CORSMiddleware",
      "fastapi.responses",
      "fastapi.responses.JSONResponse",
      "fastapi.responses.StreamingResponse",
      "json",
      "modules.ai_intelligence.pqn_alignment.src.detector.api",
      "modules.ai_intelligence.pqn_alignment.src.detector.api.run_detector",
      "modules.ai_intelligence.pqn_alignment.src.results_db",
      "modules.ai_intelligence.pqn_alignment.src.results_db.query_runs",
      "modules.foundups.pqn_portal.docs",
      "modules.foundups.pqn_portal.docs.get_docs_index",
      "os",
      "pathlib",
      "pathlib.Path",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Generator",
      "typing.Optional",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.foundups.pqn_portal.src.docs": {
    "module": "modules.foundups.pqn_portal.src.docs",
    "path": "modules\\foundups\\pqn_portal\\src\\docs.py",
    "lines": 14,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.foundups.src.scripts.validate": {
    "module": "modules.foundups.src.scripts.validate",
    "path": "modules\\foundups\\src\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.src.src.__init__": {
    "module": "modules.foundups.src.src.__init__",
    "path": "modules\\foundups\\src\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.tests.scripts.validate": {
    "module": "modules.foundups.tests.scripts.validate",
    "path": "modules\\foundups\\tests\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.foundups.tests.src.__init__": {
    "module": "modules.foundups.tests.src.__init__",
    "path": "modules\\foundups\\tests\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.tests.test_whack": {
    "module": "modules.gamification.tests.test_whack",
    "path": "modules\\gamification\\tests\\test_whack.py",
    "lines": 126,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.gamification",
      "modules.gamification.BehaviorTier",
      "modules.gamification.apply_whack",
      "modules.gamification.classify_behavior",
      "modules.gamification.get_profile",
      "modules.gamification.src",
      "modules.gamification.src.whack",
      "pytest"
    ],
    "incoming": [
      "modules.gamification.whack_a_magat.tests.test_whack"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.gamification.tests.__init__": {
    "module": "modules.gamification.tests.__init__",
    "path": "modules\\gamification\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.__init__": {
    "module": "modules.gamification.whack_a_magat.__init__",
    "path": "modules\\gamification\\whack_a_magat\\__init__.py",
    "lines": 58,
    "imports": [
      "modules.gamification.whack_a_magat.src.historical_facts",
      "modules.gamification.whack_a_magat.src.historical_facts.HistoricalFacts",
      "modules.gamification.whack_a_magat.src.historical_facts.get_parallel",
      "modules.gamification.whack_a_magat.src.historical_facts.get_random_fact",
      "modules.gamification.whack_a_magat.src.historical_facts.get_warning",
      "modules.gamification.whack_a_magat.src.quiz_engine",
      "modules.gamification.whack_a_magat.src.quiz_engine.FScaleQuestion",
      "modules.gamification.whack_a_magat.src.quiz_engine.QuizEngine",
      "modules.gamification.whack_a_magat.src.quiz_engine.QuizQuestion",
      "modules.gamification.whack_a_magat.src.quiz_engine.QuizSession",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.BehaviorTier",
      "modules.gamification.whack_a_magat.src.whack.GAME_ID",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.classify_behavior",
      "modules.gamification.whack_a_magat.src.whack.get_leaderboard",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "modules.gamification.whack_a_magat.src.whack.get_user_position"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.historical_facts": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.historical_facts",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\historical_facts.py",
    "lines": 201,
    "imports": [
      "datetime",
      "datetime.datetime",
      "random",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.mcp_whack_server": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.mcp_whack_server",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\mcp_whack_server.py",
    "lines": 731,
    "imports": [
      "asyncio",
      "collections",
      "collections.deque",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "mcp",
      "mcp.Resource",
      "mcp.Server",
      "mcp.Tool",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.quiz_engine": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.quiz_engine",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\quiz_engine.py",
    "lines": 647,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "os",
      "random",
      "sqlite3",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.self_improvement": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.self_improvement",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\self_improvement.py",
    "lines": 327,
    "imports": [
      "collections",
      "collections.defaultdict",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.spree_tracker": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.spree_tracker",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\spree_tracker.py",
    "lines": 243,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "random",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.status_announcer": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.status_announcer",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\status_announcer.py",
    "lines": 213,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.get_leaderboard",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "random",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.terminology_enforcer": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.terminology_enforcer",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\terminology_enforcer.py",
    "lines": 190,
    "imports": [
      "logging",
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\timeout_announcer.py",
    "lines": 843,
    "imports": [
      "collections",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.gamification.whack_a_magat.src.self_improvement",
      "modules.gamification.whack_a_magat.src.self_improvement.get_optimized_thresholds",
      "modules.gamification.whack_a_magat.src.self_improvement.observe_spree",
      "modules.gamification.whack_a_magat.src.self_improvement.observe_timeout",
      "modules.gamification.whack_a_magat.src.spree_tracker",
      "modules.gamification.whack_a_magat.src.spree_tracker.get_active_sprees",
      "modules.gamification.whack_a_magat.src.spree_tracker.track_frag",
      "modules.gamification.whack_a_magat.src.terminology_enforcer",
      "modules.gamification.whack_a_magat.src.terminology_enforcer.enforce_terminology",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.BehaviorTier",
      "modules.gamification.whack_a_magat.src.whack._profiles_repo",
      "modules.gamification.whack_a_magat.src.whack._update_rank_and_level",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.classify_behavior",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "os",
      "random",
      "sqlite3",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.timeout_tracker": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.timeout_tracker",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\timeout_tracker.py",
    "lines": 171,
    "imports": [
      "collections",
      "collections.defaultdict",
      "logging",
      "time",
      "typing",
      "typing.Dict",
      "typing.Optional",
      "typing.Set",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification._archived_duplicates_per_wsp3.whack": {
    "module": "modules.gamification._archived_duplicates_per_wsp3.whack",
    "path": "modules\\gamification\\_archived_duplicates_per_wsp3\\whack.py",
    "lines": 557,
    "imports": [
      "__future__",
      "__future__.annotations",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "math",
      "math.floor",
      "os",
      "sqlite3",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.tests.scripts.validate": {
    "module": "modules.gamification.tests.scripts.validate",
    "path": "modules\\gamification\\tests\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.src.historical_facts": {
    "module": "modules.gamification.whack_a_magat.src.historical_facts",
    "path": "modules\\gamification\\whack_a_magat\\src\\historical_facts.py",
    "lines": 201,
    "imports": [
      "datetime",
      "datetime.datetime",
      "random",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.command_handler",
      "modules.gamification.whack_a_magat.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.mcp_whack_server": {
    "module": "modules.gamification.whack_a_magat.src.mcp_whack_server",
    "path": "modules\\gamification\\whack_a_magat\\src\\mcp_whack_server.py",
    "lines": 731,
    "imports": [
      "asyncio",
      "collections",
      "collections.deque",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "mcp",
      "mcp.Resource",
      "mcp.Server",
      "mcp.Tool",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.src.quiz_engine": {
    "module": "modules.gamification.whack_a_magat.src.quiz_engine",
    "path": "modules\\gamification\\whack_a_magat\\src\\quiz_engine.py",
    "lines": 647,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "os",
      "random",
      "sqlite3",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.command_handler",
      "modules.gamification.whack_a_magat.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.self_improvement": {
    "module": "modules.gamification.whack_a_magat.src.self_improvement",
    "path": "modules\\gamification\\whack_a_magat\\src\\self_improvement.py",
    "lines": 327,
    "imports": [
      "collections",
      "collections.defaultdict",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.message_processor",
      "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "4 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.spree_tracker": {
    "module": "modules.gamification.whack_a_magat.src.spree_tracker",
    "path": "modules\\gamification\\whack_a_magat\\src\\spree_tracker.py",
    "lines": 243,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "random",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.command_handler",
      "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.status_announcer": {
    "module": "modules.gamification.whack_a_magat.src.status_announcer",
    "path": "modules\\gamification\\whack_a_magat\\src\\status_announcer.py",
    "lines": 213,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.get_leaderboard",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "random",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.event_handler"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.gamification.whack_a_magat.src.terminology_enforcer": {
    "module": "modules.gamification.whack_a_magat.src.terminology_enforcer",
    "path": "modules\\gamification\\whack_a_magat\\src\\terminology_enforcer.py",
    "lines": 190,
    "imports": [
      "logging",
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.greeting_generator",
      "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.timeout_announcer": {
    "module": "modules.gamification.whack_a_magat.src.timeout_announcer",
    "path": "modules\\gamification\\whack_a_magat\\src\\timeout_announcer.py",
    "lines": 843,
    "imports": [
      "collections",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.gamification.whack_a_magat.src.self_improvement",
      "modules.gamification.whack_a_magat.src.self_improvement.get_optimized_thresholds",
      "modules.gamification.whack_a_magat.src.self_improvement.observe_spree",
      "modules.gamification.whack_a_magat.src.self_improvement.observe_timeout",
      "modules.gamification.whack_a_magat.src.spree_tracker",
      "modules.gamification.whack_a_magat.src.spree_tracker.get_active_sprees",
      "modules.gamification.whack_a_magat.src.spree_tracker.track_frag",
      "modules.gamification.whack_a_magat.src.terminology_enforcer",
      "modules.gamification.whack_a_magat.src.terminology_enforcer.enforce_terminology",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.BehaviorTier",
      "modules.gamification.whack_a_magat.src.whack._profiles_repo",
      "modules.gamification.whack_a_magat.src.whack._update_rank_and_level",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.classify_behavior",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "os",
      "random",
      "sqlite3",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_all_chat_functions",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.mcp_youtube_integration",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.test_all_chat_functions",
      "modules.gamification.whack_a_magat.__init__",
      "modules.gamification.whack_a_magat.tests.test_integration",
      "modules.gamification.whack_a_magat.tests.test_multi_whack",
      "modules.gamification.whack_a_magat.tests.test_simulate_multi_whack",
      "modules.gamification.whack_a_magat.tests.test_stream_density",
      "modules.gamification.whack_a_magat.tests.test_timeout_announcement",
      "modules.gamification.whack_a_magat.tests.test_timeout_announcements",
      "modules.gamification.whack_a_magat.tests.test_timeout_announcer",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "15 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.timeout_tracker": {
    "module": "modules.gamification.whack_a_magat.src.timeout_tracker",
    "path": "modules\\gamification\\whack_a_magat\\src\\timeout_tracker.py",
    "lines": 171,
    "imports": [
      "collections",
      "collections.defaultdict",
      "logging",
      "time",
      "typing",
      "typing.Dict",
      "typing.Optional",
      "typing.Set",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring",
      "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
      "modules.gamification.whack_a_magat.__init__",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.tests.test_integration",
      "modules.gamification.whack_a_magat.tests.test_timeout_tracker",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "9 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.whack": {
    "module": "modules.gamification.whack_a_magat.src.whack",
    "path": "modules\\gamification\\whack_a_magat\\src\\whack.py",
    "lines": 557,
    "imports": [
      "__future__",
      "__future__.annotations",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "math",
      "math.floor",
      "os",
      "sqlite3",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_system_tests",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.tests.system_tests.run_system_tests",
      "modules.communication.livechat.tests.system_tests.run_tests_simple",
      "modules.gamification._archived_duplicates_per_wsp3.status_announcer",
      "modules.gamification._archived_duplicates_per_wsp3.timeout_announcer",
      "modules.gamification.whack_a_magat.__init__",
      "modules.gamification.whack_a_magat.src.__init__",
      "modules.gamification.whack_a_magat.src.status_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.tests.test_leaderboard",
      "modules.gamification.whack_a_magat.tests.test_new_ranks",
      "modules.gamification.whack_a_magat.tests.test_stream_density",
      "modules.gamification.whack_a_magat.tests.test_timeout_announcer",
      "modules.gamification.whack_a_magat.tests.test_whack_recording",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "19 inbound references."
    ]
  },
  "modules.gamification.whack_a_magat.src.__init__": {
    "module": "modules.gamification.whack_a_magat.src.__init__",
    "path": "modules\\gamification\\whack_a_magat\\src\\__init__.py",
    "lines": 25,
    "imports": [
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.BehaviorTier",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.classify_behavior",
      "modules.gamification.whack_a_magat.src.whack.get_profile"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.check_database": {
    "module": "modules.gamification.whack_a_magat.tests.check_database",
    "path": "modules\\gamification\\whack_a_magat\\tests\\check_database.py",
    "lines": 48,
    "imports": [
      "os",
      "sqlite3"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.cleanup_test_users": {
    "module": "modules.gamification.whack_a_magat.tests.cleanup_test_users",
    "path": "modules\\gamification\\whack_a_magat\\tests\\cleanup_test_users.py",
    "lines": 36,
    "imports": [
      "os",
      "sqlite3"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.fix_monthly_scores": {
    "module": "modules.gamification.whack_a_magat.tests.fix_monthly_scores",
    "path": "modules\\gamification\\whack_a_magat\\tests\\fix_monthly_scores.py",
    "lines": 38,
    "imports": [
      "datetime",
      "datetime.datetime",
      "sqlite3"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.run_tests": {
    "module": "modules.gamification.whack_a_magat.tests.run_tests",
    "path": "modules\\gamification\\whack_a_magat\\tests\\run_tests.py",
    "lines": 52,
    "imports": [
      "logging",
      "os",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_integration": {
    "module": "modules.gamification.whack_a_magat.tests.test_integration",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_integration.py",
    "lines": 340,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "pytest",
      "time",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_leaderboard": {
    "module": "modules.gamification.whack_a_magat.tests.test_leaderboard",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_leaderboard.py",
    "lines": 295,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.ProfilesRepo",
      "modules.gamification.whack_a_magat.src.whack._profiles_repo",
      "modules.gamification.whack_a_magat.src.whack._reset_state_for_tests",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.get_leaderboard",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "modules.gamification.whack_a_magat.src.whack.get_user_position",
      "os",
      "pytest",
      "shutil",
      "tempfile"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_magadoom_complete": {
    "module": "modules.gamification.whack_a_magat.tests.test_magadoom_complete",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_magadoom_complete.py",
    "lines": 177,
    "imports": [
      "asyncio",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_leaderboard",
      "modules.gamification.whack_a_magat.get_profile",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_magadoom_xp": {
    "module": "modules.gamification.whack_a_magat.tests.test_magadoom_xp",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_magadoom_xp.py",
    "lines": 98,
    "imports": [
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.gamification.whack_a_magat",
      "modules.gamification.whack_a_magat.get_profile",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_multi_whack": {
    "module": "modules.gamification.whack_a_magat.tests.test_multi_whack",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_multi_whack.py",
    "lines": 48,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "time"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_new_ranks": {
    "module": "modules.gamification.whack_a_magat.tests.test_new_ranks",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_new_ranks.py",
    "lines": 59,
    "imports": [
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack._update_rank_and_level",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_simulate_multi_whack": {
    "module": "modules.gamification.whack_a_magat.tests.test_simulate_multi_whack",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_simulate_multi_whack.py",
    "lines": 74,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.communication.livechat.src.event_handler",
      "modules.communication.livechat.src.event_handler.EventHandler",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_stream_density": {
    "module": "modules.gamification.whack_a_magat.tests.test_stream_density",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_stream_density.py",
    "lines": 626,
    "imports": [
      "concurrent.futures",
      "concurrent.futures.ThreadPoolExecutor",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "pytest",
      "random",
      "re",
      "sys",
      "threading",
      "time",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_timeout_announcement": {
    "module": "modules.gamification.whack_a_magat.tests.test_timeout_announcement",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_timeout_announcement.py",
    "lines": 45,
    "imports": [
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "time"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_timeout_announcements": {
    "module": "modules.gamification.whack_a_magat.tests.test_timeout_announcements",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_timeout_announcements.py",
    "lines": 159,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "os",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_timeout_announcer": {
    "module": "modules.gamification.whack_a_magat.tests.test_timeout_announcer",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_timeout_announcer.py",
    "lines": 293,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutManager",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.BehaviorTier",
      "os",
      "pytest",
      "time",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_timeout_tracker": {
    "module": "modules.gamification.whack_a_magat.tests.test_timeout_tracker",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_timeout_tracker.py",
    "lines": 302,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "pytest",
      "time",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_whack": {
    "module": "modules.gamification.whack_a_magat.tests.test_whack",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_whack.py",
    "lines": 4,
    "imports": [
      "modules.gamification.tests.test_whack",
      "modules.gamification.tests.test_whack.*"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.gamification.whack_a_magat.tests.test_whack_recording": {
    "module": "modules.gamification.whack_a_magat.tests.test_whack_recording",
    "path": "modules\\gamification\\whack_a_magat\\tests\\test_whack_recording.py",
    "lines": 55,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.apply_whack",
      "modules.gamification.whack_a_magat.src.whack.get_profile",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.base_dae": {
    "module": "modules.infrastructure.dae_infrastructure.base_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\base_dae.py",
    "lines": 162,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.infrastructure.shared_utilities.posting_safety_lock": {
    "module": "modules.infrastructure.shared_utilities.posting_safety_lock",
    "path": "modules\\infrastructure\\shared_utilities\\posting_safety_lock.py",
    "lines": 165,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.verification.posting_monitor_agent"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.shared_utilities.single_instance": {
    "module": "modules.infrastructure.shared_utilities.single_instance",
    "path": "modules\\infrastructure\\shared_utilities\\single_instance.py",
    "lines": 234,
    "imports": [
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "psutil",
      "sys",
      "time",
      "typing",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.tests.test_single_instance"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.monitor_dashboard": {
    "module": "modules.infrastructure.wre_core.monitor_dashboard",
    "path": "modules\\infrastructure\\wre_core\\monitor_dashboard.py",
    "lines": 136,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.infrastructure.wre_core.wre_monitor",
      "modules.infrastructure.wre_core.wre_monitor.get_monitor",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.run_wre": {
    "module": "modules.infrastructure.wre_core.run_wre",
    "path": "modules\\infrastructure\\wre_core\\run_wre.py",
    "lines": 440,
    "imports": [
      "argparse",
      "asyncio",
      "json",
      "logging",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler.DAECubeAssembler",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.RecursiveLearningEngine",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway.DAEGateway",
      "modules.infrastructure.wre_core.wre_sdk_implementation",
      "modules.infrastructure.wre_core.wre_sdk_implementation.WREConfig",
      "modules.infrastructure.wre_core.wre_sdk_implementation.WRESDK",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_launcher": {
    "module": "modules.infrastructure.wre_core.wre_launcher",
    "path": "modules\\infrastructure\\wre_core\\wre_launcher.py",
    "lines": 136,
    "imports": [
      "asyncio",
      "codecs",
      "modules.infrastructure.wre_core.src.remote_build_orchestrator",
      "modules.infrastructure.wre_core.src.remote_build_orchestrator.create_remote_build_orchestrator",
      "modules.infrastructure.wre_core.src.wsp_core_loader",
      "modules.infrastructure.wre_core.src.wsp_core_loader.create_wsp_core_loader",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_monitor": {
    "module": "modules.infrastructure.wre_core.wre_monitor",
    "path": "modules\\infrastructure\\wre_core\\wre_monitor.py",
    "lines": 480,
    "imports": [
      "asyncio",
      "collections",
      "collections.defaultdict",
      "collections.deque",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.stream_coordinator",
      "modules.communication.livechat.src.intelligent_throttle_manager",
      "modules.communication.livechat.src.livechat_core",
      "modules.infrastructure.wre_core.monitor_dashboard",
      "modules.infrastructure.wre_core.tests.test_wre_integration"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_sdk_implementation": {
    "module": "modules.infrastructure.wre_core.wre_sdk_implementation",
    "path": "modules\\infrastructure\\wre_core\\wre_sdk_implementation.py",
    "lines": 413,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "modules.infrastructure.dae_components.dae_prompting.src.dae_envelope_system",
      "modules.infrastructure.dae_components.dae_prompting.src.dae_envelope_system.DAEEnvelopeSystem",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler.DAECubeAssembler",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine",
      "modules.infrastructure.wre_core.recursive_improvement.src.recursive_engine.RecursiveLearningEngine",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.run_wre"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.__init__": {
    "module": "modules.infrastructure.wre_core.__init__",
    "path": "modules\\infrastructure\\wre_core\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.__init__": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.__init__",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\__init__.py",
    "lines": 35,
    "imports": [
      "modules.infrastructure.dae_components.dae_sub_agents.base.sub_agent_base",
      "modules.infrastructure.dae_components.dae_sub_agents.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.dae_sub_agents.base.sub_agent_base.SubAgentContext",
      "modules.infrastructure.dae_components.dae_sub_agents.compliance.wsp64_preventer",
      "modules.infrastructure.dae_components.dae_sub_agents.compliance.wsp64_preventer.WSP64ViolationPreventionSubAgent",
      "modules.infrastructure.dae_components.dae_sub_agents.enhancement.wsp74_enhancer",
      "modules.infrastructure.dae_components.dae_sub_agents.enhancement.wsp74_enhancer.WSP74AgenticEnhancementSubAgent",
      "modules.infrastructure.dae_components.dae_sub_agents.improvement.wsp48_improver",
      "modules.infrastructure.dae_components.dae_sub_agents.improvement.wsp48_improver.WSP48RecursiveImprovementSubAgent",
      "modules.infrastructure.dae_components.dae_sub_agents.quantum.wsp76_coherence",
      "modules.infrastructure.dae_components.dae_sub_agents.quantum.wsp76_coherence.WSP76QuantumCoherenceSubAgent",
      "modules.infrastructure.dae_components.dae_sub_agents.verification.wsp50_verifier",
      "modules.infrastructure.dae_components.dae_sub_agents.verification.wsp50_verifier.WSP50VerificationSubAgent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.tests.__init__": {
    "module": "modules.infrastructure.dae_components.tests.__init__",
    "path": "modules\\infrastructure\\dae_components\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_monitor.src.monitor_dashboard": {
    "module": "modules.infrastructure.dae_components.dae_monitor.src.monitor_dashboard",
    "path": "modules\\infrastructure\\dae_components\\dae_monitor\\src\\monitor_dashboard.py",
    "lines": 459,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_prompting.src.dae_envelope_system": {
    "module": "modules.infrastructure.dae_components.dae_prompting.src.dae_envelope_system",
    "path": "modules\\infrastructure\\dae_components\\dae_prompting\\src\\dae_envelope_system.py",
    "lines": 490,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.wre_sdk_implementation"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol": {
    "module": "modules.infrastructure.dae_components.dae_recursive_exchange.src.recursive_exchange_protocol",
    "path": "modules\\infrastructure\\dae_components\\dae_recursive_exchange\\src\\recursive_exchange_protocol.py",
    "lines": 489,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.base.sub_agent_base": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.base.sub_agent_base",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\base\\sub_agent_base.py",
    "lines": 233,
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.compliance.wsp64_preventer": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.compliance.wsp64_preventer",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\compliance\\wsp64_preventer.py",
    "lines": 413,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.infrastructure.dae_components.base.sub_agent_base",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentContext",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.enhancement.wsp74_enhancer": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.enhancement.wsp74_enhancer",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\enhancement\\wsp74_enhancer.py",
    "lines": 18,
    "imports": [
      "modules.infrastructure.dae_components.base.sub_agent_base",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentContext",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.improvement.wsp48_improver": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.improvement.wsp48_improver",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\improvement\\wsp48_improver.py",
    "lines": 443,
    "imports": [
      "datetime",
      "datetime.datetime",
      "hashlib",
      "json",
      "logging",
      "modules.infrastructure.dae_components.base.sub_agent_base",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentContext",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.quantum.wsp76_coherence": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.quantum.wsp76_coherence",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\quantum\\wsp76_coherence.py",
    "lines": 21,
    "imports": [
      "modules.infrastructure.dae_components.base.sub_agent_base",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentContext",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.verification.posting_monitor_agent": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.verification.posting_monitor_agent",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\verification\\posting_monitor_agent.py",
    "lines": 432,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.infrastructure.shared_utilities.posting_safety_lock",
      "modules.infrastructure.shared_utilities.posting_safety_lock.PostingSafetyLock",
      "psutil",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_components.dae_sub_agents.verification.wsp50_verifier": {
    "module": "modules.infrastructure.dae_components.dae_sub_agents.verification.wsp50_verifier",
    "path": "modules\\infrastructure\\dae_components\\dae_sub_agents\\verification\\wsp50_verifier.py",
    "lines": 285,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.infrastructure.dae_components.base.sub_agent_base",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentBase",
      "modules.infrastructure.dae_components.base.sub_agent_base.SubAgentContext",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.dae_components.dae_sub_agents.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.dae_infrastructure.tests.__init__": {
    "module": "modules.infrastructure.dae_infrastructure.tests.__init__",
    "path": "modules\\infrastructure\\dae_infrastructure\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.compliance_quality_dae.src.compliance_dae": {
    "module": "modules.infrastructure.dae_infrastructure.compliance_quality_dae.src.compliance_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\compliance_quality_dae\\src\\compliance_dae.py",
    "lines": 502,
    "imports": [
      "dae_envelope_system",
      "dae_envelope_system.DAEPromptEnvelope",
      "dae_envelope_system.DAEResponseEnvelope",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.documentation_registry_dae.src.documentation_dae": {
    "module": "modules.infrastructure.dae_infrastructure.documentation_registry_dae.src.documentation_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\documentation_registry_dae\\src\\documentation_dae.py",
    "lines": 461,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.infrastructure_orchestration_dae.src.infrastructure_dae": {
    "module": "modules.infrastructure.dae_infrastructure.infrastructure_orchestration_dae.src.infrastructure_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\infrastructure_orchestration_dae\\src\\infrastructure_dae.py",
    "lines": 330,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.knowledge_learning_dae.src.knowledge_dae": {
    "module": "modules.infrastructure.dae_infrastructure.knowledge_learning_dae.src.knowledge_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\knowledge_learning_dae\\src\\knowledge_dae.py",
    "lines": 385,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.dae_infrastructure.maintenance_operations_dae.src.maintenance_dae": {
    "module": "modules.infrastructure.dae_infrastructure.maintenance_operations_dae.src.maintenance_dae",
    "path": "modules\\infrastructure\\dae_infrastructure\\maintenance_operations_dae\\src\\maintenance_dae.py",
    "lines": 382,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "shutil",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.instance_lock.src.instance_manager": {
    "module": "modules.infrastructure.instance_lock.src.instance_manager",
    "path": "modules\\infrastructure\\instance_lock\\src\\instance_manager.py",
    "lines": 317,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "psutil",
      "sys",
      "threading",
      "time",
      "typing",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.instance_lock.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.instance_lock.src.__init__": {
    "module": "modules.infrastructure.instance_lock.src.__init__",
    "path": "modules\\infrastructure\\instance_lock\\src\\__init__.py",
    "lines": 15,
    "imports": [
      "modules.infrastructure.instance_lock.src.instance_manager",
      "modules.infrastructure.instance_lock.src.instance_manager.InstanceLock",
      "modules.infrastructure.instance_lock.src.instance_manager.check_single_instance",
      "modules.infrastructure.instance_lock.src.instance_manager.get_instance_lock"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.audit_logger.__init__": {
    "module": "modules.infrastructure.shared_utilities.audit_logger.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\audit_logger\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.__init__": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\__init__.py",
    "lines": 39,
    "imports": [
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator",
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator.BlockConfig",
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator.BlockInterface",
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator.BlockStatus",
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator.DependencyInjector",
      "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator.ModularBlockRunner"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.llm_client.__init__": {
    "module": "modules.infrastructure.shared_utilities.llm_client.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\llm_client\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.__init__": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\__init__.py",
    "lines": 28,
    "imports": [
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.ImprovementAction",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.IssuePattern",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogEntry",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogLevel",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogMonitorAgent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.models.__init__": {
    "module": "modules.infrastructure.shared_utilities.models.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\models\\__init__.py",
    "lines": 5,
    "imports": [
      "modules.infrastructure.shared_utilities.models.src.chat_message",
      "modules.infrastructure.shared_utilities.models.src.chat_message.Author",
      "modules.infrastructure.shared_utilities.models.src.chat_message.ChatMessage"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.tests.test_mode_detection": {
    "module": "modules.infrastructure.shared_utilities.tests.test_mode_detection",
    "path": "modules\\infrastructure\\shared_utilities\\tests\\test_mode_detection.py",
    "lines": 63,
    "imports": [
      "os",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities._archive_fingerprint_system.dae_fingerprint_generator": {
    "module": "modules.infrastructure.shared_utilities._archive_fingerprint_system.dae_fingerprint_generator",
    "path": "modules\\infrastructure\\shared_utilities\\_archive_fingerprint_system\\dae_fingerprint_generator.py",
    "lines": 311,
    "imports": [
      "argparse",
      "json",
      "logging",
      "modules.infrastructure.shared_utilities.module_fingerprint_generator",
      "modules.infrastructure.shared_utilities.module_fingerprint_generator.ModuleFingerprintGenerator",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities._archive_fingerprint_system.module_fingerprint_generator": {
    "module": "modules.infrastructure.shared_utilities._archive_fingerprint_system.module_fingerprint_generator",
    "path": "modules\\infrastructure\\shared_utilities\\_archive_fingerprint_system\\module_fingerprint_generator.py",
    "lines": 332,
    "imports": [
      "ast",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.audit_logger.scripts.validate": {
    "module": "modules.infrastructure.shared_utilities.audit_logger.scripts.validate",
    "path": "modules\\infrastructure\\shared_utilities\\audit_logger\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger": {
    "module": "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger",
    "path": "modules\\infrastructure\\shared_utilities\\audit_logger\\src\\audit_logger.py",
    "lines": 528,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "queue",
      "re",
      "threading",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.shared_utilities.audit_logger.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.audit_logger.src.__init__": {
    "module": "modules.infrastructure.shared_utilities.audit_logger.src.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\audit_logger\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger",
      "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger.AuditEvent",
      "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger.AuditLogger",
      "modules.infrastructure.shared_utilities.audit_logger.src.audit_logger.EventType"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.audit_logger.tests.test_audit_logger": {
    "module": "modules.infrastructure.shared_utilities.audit_logger.tests.test_audit_logger",
    "path": "modules\\infrastructure\\shared_utilities\\audit_logger\\tests\\test_audit_logger.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.scripts.validate": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.scripts.validate",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.src.block_orchestrator",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\src\\block_orchestrator.py",
    "lines": 496,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "enum",
      "enum.Enum",
      "importlib",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Protocol",
      "typing.runtime_checkable"
    ],
    "incoming": [
      "modules.infrastructure.shared_utilities.block_orchestrator.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.src.__init__": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.src.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.tests.test_block_independence": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.tests.test_block_independence",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\tests\\test_block_independence.py",
    "lines": 175,
    "imports": [
      "asyncio",
      "block_runner",
      "block_runner.DependencyInjector",
      "block_runner.ModularBlockRunner",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.block_orchestrator.tests.test_block_orchestrator": {
    "module": "modules.infrastructure.shared_utilities.block_orchestrator.tests.test_block_orchestrator",
    "path": "modules\\infrastructure\\shared_utilities\\block_orchestrator\\tests\\test_block_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.llm_client.scripts.validate": {
    "module": "modules.infrastructure.shared_utilities.llm_client.scripts.validate",
    "path": "modules\\infrastructure\\shared_utilities\\llm_client\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.llm_client.src.client": {
    "module": "modules.infrastructure.shared_utilities.llm_client.src.client",
    "path": "modules\\infrastructure\\shared_utilities\\llm_client\\src\\client.py",
    "lines": 54,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "google.generativeai",
      "os"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.infrastructure.shared_utilities.llm_client.src.__init__": {
    "module": "modules.infrastructure.shared_utilities.llm_client.src.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\llm_client\\src\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.llm_client.tests.test_client": {
    "module": "modules.infrastructure.shared_utilities.llm_client.tests.test_client",
    "path": "modules\\infrastructure\\shared_utilities\\llm_client\\tests\\test_client.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.scripts.validate": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.scripts.validate",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\src\\log_monitor_agent.py",
    "lines": 441,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "pathlib",
      "pathlib.Path",
      "re",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.shared_utilities.log_monitor.__init__",
      "modules.infrastructure.shared_utilities.log_monitor.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.src.__init__": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.src.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\src\\__init__.py",
    "lines": 21,
    "imports": [
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.ImprovementAction",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.IssuePattern",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogEntry",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogLevel",
      "modules.infrastructure.shared_utilities.log_monitor.src.log_monitor_agent.LogMonitorAgent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.tests.test_log_monitor_agent": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.tests.test_log_monitor_agent",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\tests\\test_log_monitor_agent.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.log_monitor.tests.__init__": {
    "module": "modules.infrastructure.shared_utilities.log_monitor.tests.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\log_monitor\\tests\\__init__.py",
    "lines": 5,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.models.scripts.validate": {
    "module": "modules.infrastructure.shared_utilities.models.scripts.validate",
    "path": "modules\\infrastructure\\shared_utilities\\models\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.models.src.chat_message": {
    "module": "modules.infrastructure.shared_utilities.models.src.chat_message",
    "path": "modules\\infrastructure\\shared_utilities\\models\\src\\chat_message.py",
    "lines": 21,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "typing",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.shared_utilities.models.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.shared_utilities.models.src.__init__": {
    "module": "modules.infrastructure.shared_utilities.models.src.__init__",
    "path": "modules\\infrastructure\\shared_utilities\\models\\src\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.shared_utilities.models.tests.test_chat_message": {
    "module": "modules.infrastructure.shared_utilities.models.tests.test_chat_message",
    "path": "modules\\infrastructure\\shared_utilities\\models\\tests\\test_chat_message.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.system_health_monitor.src.system_health_analyzer": {
    "module": "modules.infrastructure.system_health_monitor.src.system_health_analyzer",
    "path": "modules\\infrastructure\\system_health_monitor\\src\\system_health_analyzer.py",
    "lines": 424,
    "imports": [
      "collections",
      "collections.defaultdict",
      "collections.deque",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "pathlib",
      "pathlib.Path",
      "re",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.tests.test_duplicate_detection_fix"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.infrastructure.system_health_monitor.src.wsp_85_validator": {
    "module": "modules.infrastructure.system_health_monitor.src.wsp_85_validator",
    "path": "modules\\infrastructure\\system_health_monitor\\src\\wsp_85_validator.py",
    "lines": 180,
    "imports": [
      "fnmatch",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test": {
    "module": "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
    "path": "modules\\infrastructure\\system_health_monitor\\tests\\detailed_workflow_test.py",
    "lines": 508,
    "imports": [
      "asyncio",
      "colorama",
      "colorama.Fore",
      "colorama.Style",
      "colorama.init",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.communication.livechat.src.message_processor",
      "modules.communication.livechat.src.message_processor.MessageProcessor",
      "modules.gamification.whack_a_magat.src.timeout_announcer",
      "modules.gamification.whack_a_magat.src.timeout_announcer.TimeoutAnnouncer",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.WhackAMagat",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.system_health_monitor.tests.system_integration_test": {
    "module": "modules.infrastructure.system_health_monitor.tests.system_integration_test",
    "path": "modules\\infrastructure\\system_health_monitor\\tests\\system_integration_test.py",
    "lines": 615,
    "imports": [
      "asyncio",
      "colorama",
      "colorama.Fore",
      "colorama.Style",
      "colorama.init",
      "datetime",
      "datetime.datetime",
      "json",
      "modules.communication.livechat.src.command_handler",
      "modules.communication.livechat.src.command_handler.CommandHandler",
      "modules.communication.livechat.src.livechat_core",
      "modules.communication.livechat.src.livechat_core.LiveChatCore",
      "modules.gamification.whack_a_magat.src.timeout_tracker",
      "modules.gamification.whack_a_magat.src.timeout_tracker.TimeoutTracker",
      "modules.gamification.whack_a_magat.src.whack",
      "modules.gamification.whack_a_magat.src.whack.WhackAMagat",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster.LinkedInAntiDetectionPoster",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.x_twitter.src.anti_detection_poster",
      "modules.platform_integration.x_twitter.src.anti_detection_poster.XAntiDetectionPoster",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sqlite3",
      "sys",
      "traceback",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.development_monitor.git_monitor_dae": {
    "module": "modules.infrastructure.wre_core.development_monitor.git_monitor_dae",
    "path": "modules\\infrastructure\\wre_core\\development_monitor\\git_monitor_dae.py",
    "lines": 422,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_development_update",
      "os",
      "re",
      "subprocess",
      "sys",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.__init__": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.__init__",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\__init__.py",
    "lines": 25,
    "imports": [
      "modules.infrastructure.wre_core.recursive_improvement.src.core",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.ErrorPattern",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.Improvement",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.PatternType",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.Solution",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.RecursiveLearningEngine",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.get_engine",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.install_global_handler",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.process_error",
      "modules.infrastructure.wre_core.recursive_improvement.src.persistence",
      "modules.infrastructure.wre_core.recursive_improvement.src.persistence.QuantumState",
      "modules.infrastructure.wre_core.recursive_improvement.src.persistence.QuantumStatePersistence"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.src.__init__": {
    "module": "modules.infrastructure.wre_core.src.__init__",
    "path": "modules\\infrastructure\\wre_core\\src\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.tests.test_wre_integration": {
    "module": "modules.infrastructure.wre_core.tests.test_wre_integration",
    "path": "modules\\infrastructure\\wre_core\\tests\\test_wre_integration.py",
    "lines": 103,
    "imports": [
      "asyncio",
      "modules.infrastructure.wre_core.wre_monitor",
      "modules.infrastructure.wre_core.wre_monitor.get_monitor",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_master_orchestrator.__init__": {
    "module": "modules.infrastructure.wre_core.wre_master_orchestrator.__init__",
    "path": "modules\\infrastructure\\wre_core\\wre_master_orchestrator\\__init__.py",
    "lines": 29,
    "imports": [
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.BlockPlugin",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.MLEStarPlugin",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.OrchestratorPlugin",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.Pattern",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.PatternMemory",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.SocialMediaPlugin",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.WREMasterOrchestrator",
      "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator.WSPValidator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler": {
    "module": "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler",
    "path": "modules\\infrastructure\\wre_core\\dae_cube_assembly\\src\\dae_cube_assembler.py",
    "lines": 383,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.run_wre",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway",
      "modules.infrastructure.wre_core.wre_sdk_implementation"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.core": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.core",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\core.py",
    "lines": 91,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "pathlib",
      "pathlib.Path",
      "re",
      "threading",
      "time",
      "traceback",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.recursive_improvement.__init__",
      "modules.infrastructure.wre_core.recursive_improvement.tests.test_learning",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.holoindex_integration": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.holoindex_integration",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\holoindex_integration.py",
    "lines": 210,
    "imports": [
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "re",
      "subprocess",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.learning": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.learning",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\learning.py",
    "lines": 736,
    "imports": [
      "asyncio",
      "concurrent.futures",
      "concurrent.futures.ProcessPoolExecutor",
      "datetime",
      "hashlib",
      "json",
      "modules.infrastructure.wre_core.recursive_improvement.core",
      "modules.infrastructure.wre_core.recursive_improvement.core.ErrorPattern",
      "modules.infrastructure.wre_core.recursive_improvement.core.Improvement",
      "modules.infrastructure.wre_core.recursive_improvement.core.PatternType",
      "modules.infrastructure.wre_core.recursive_improvement.core.Solution",
      "modules.infrastructure.wre_core.recursive_improvement.persistence",
      "modules.infrastructure.wre_core.recursive_improvement.persistence.QuantumState",
      "modules.infrastructure.wre_core.recursive_improvement.persistence.QuantumStatePersistence",
      "modules.infrastructure.wre_core.recursive_improvement.utils",
      "modules.infrastructure.wre_core.recursive_improvement.utils.load_memory",
      "modules.infrastructure.wre_core.recursive_improvement.utils.save_improvement",
      "modules.infrastructure.wre_core.recursive_improvement.utils.save_pattern",
      "modules.infrastructure.wre_core.recursive_improvement.utils.save_solution",
      "multiprocessing",
      "pathlib",
      "pathlib.Path",
      "re",
      "sys",
      "threading",
      "time",
      "traceback",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.recursive_improvement.__init__",
      "modules.infrastructure.wre_core.recursive_improvement.tests.test_learning",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.persistence": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.persistence",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\persistence.py",
    "lines": 43,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "json",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.recursive_improvement.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.utils": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.utils",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\utils.py",
    "lines": 75,
    "imports": [
      "json",
      "modules.infrastructure.wre_core.recursive_improvement.core",
      "modules.infrastructure.wre_core.recursive_improvement.core.ErrorPattern",
      "modules.infrastructure.wre_core.recursive_improvement.core.Improvement",
      "modules.infrastructure.wre_core.recursive_improvement.core.Solution",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src.wre_integration": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src.wre_integration",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\wre_integration.py",
    "lines": 262,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "inspect",
      "json",
      "logging",
      "modules.infrastructure.wre_core.recursive_improvement.core",
      "modules.infrastructure.wre_core.recursive_improvement.core.ErrorPattern",
      "modules.infrastructure.wre_core.recursive_improvement.core.PatternType",
      "modules.infrastructure.wre_core.recursive_improvement.learning",
      "modules.infrastructure.wre_core.recursive_improvement.learning.RecursiveLearningEngine",
      "pathlib",
      "pathlib.Path",
      "traceback",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat.src.livechat_core"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.tests.test_learning": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.tests.test_learning",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\tests\\test_learning.py",
    "lines": 14,
    "imports": [
      "modules.infrastructure.wre_core.recursive_improvement.src.core",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.Improvement",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.RecursiveLearningEngine",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.process_error",
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.infrastructure.wre_core.recursive_improvement.src._archive_fingerprint_system.wre_fingerprint_integration": {
    "module": "modules.infrastructure.wre_core.recursive_improvement.src._archive_fingerprint_system.wre_fingerprint_integration",
    "path": "modules\\infrastructure\\wre_core\\recursive_improvement\\src\\_archive_fingerprint_system\\wre_fingerprint_integration.py",
    "lines": 355,
    "imports": [
      "datetime",
      "datetime.datetime",
      "inspect",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "wre_integration",
      "wre_integration.get_wre_integration"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway": {
    "module": "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway",
    "path": "modules\\infrastructure\\wre_core\\wre_gateway\\src\\dae_gateway.py",
    "lines": 469,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler.ConsciousnessState",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler.DAECubeAssembler",
      "modules.infrastructure.wre_core.dae_cube_assembly.src.dae_cube_assembler.EvolutionPhase",
      "modules.infrastructure.wre_core.recursive_improvement.src.core",
      "modules.infrastructure.wre_core.recursive_improvement.src.core.PatternType",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning",
      "modules.infrastructure.wre_core.recursive_improvement.src.learning.RecursiveLearningEngine",
      "modules.infrastructure.wre_core.wre_gateway.src.mlestar_dae_integration",
      "modules.infrastructure.wre_core.wre_gateway.src.mlestar_dae_integration.MLESTARDAE",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.run_wre",
      "modules.infrastructure.wre_core.wre_gateway.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_gateway.src.mlestar_dae_integration": {
    "module": "modules.infrastructure.wre_core.wre_gateway.src.mlestar_dae_integration",
    "path": "modules\\infrastructure\\wre_core\\wre_gateway\\src\\mlestar_dae_integration.py",
    "lines": 406,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "logging",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTAROrchestrator",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.MLESTARPhase",
      "modules.ai_intelligence.mle_star_engine.src.mlestar_orchestrator.OptimizationTarget",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_gateway.src.__init__": {
    "module": "modules.infrastructure.wre_core.wre_gateway.src.__init__",
    "path": "modules\\infrastructure\\wre_core\\wre_gateway\\src\\__init__.py",
    "lines": 4,
    "imports": [
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway",
      "modules.infrastructure.wre_core.wre_gateway.src.dae_gateway.DAEGateway"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator": {
    "module": "modules.infrastructure.wre_core.wre_master_orchestrator.src.wre_master_orchestrator",
    "path": "modules\\infrastructure\\wre_core\\wre_master_orchestrator\\src\\wre_master_orchestrator.py",
    "lines": 438,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "modules.ai_intelligence.pqn_alignment",
      "modules.ai_intelligence.pqn_alignment.PQNAlignmentDAE",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.ai_intelligence.pqn_alignment.src.pqn_alignment_dae",
      "modules.infrastructure.wre_core.wre_master_orchestrator.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wsp_framework_dae.src.wsp_framework_dae": {
    "module": "modules.infrastructure.wsp_framework_dae.src.wsp_framework_dae",
    "path": "modules\\infrastructure\\wsp_framework_dae\\src\\wsp_framework_dae.py",
    "lines": 684,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "difflib",
      "hashlib",
      "json",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.infrastructure.wsp_framework_dae.tests.test_wsp_governance": {
    "module": "modules.infrastructure.wsp_framework_dae.tests.test_wsp_governance",
    "path": "modules\\infrastructure\\wsp_framework_dae\\tests\\test_wsp_governance.py",
    "lines": 99,
    "imports": [
      "asyncio",
      "json",
      "pathlib",
      "pathlib.Path",
      "src.wsp_framework_dae",
      "src.wsp_framework_dae.WSPFrameworkDAE",
      "src.wsp_framework_dae.WSPImprovement",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.__init__": {
    "module": "modules.platform_integration.github_integration.__init__",
    "path": "modules\\platform_integration\\github_integration\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.__init__": {
    "module": "modules.platform_integration.linkedin_agent.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\__init__.py",
    "lines": 51,
    "imports": [
      "modules.platform_integration.linkedin_agent.src",
      "modules.platform_integration.linkedin_agent.src.EngagementAction",
      "modules.platform_integration.linkedin_agent.src.EngagementType",
      "modules.platform_integration.linkedin_agent.src.LinkedInAgent",
      "modules.platform_integration.linkedin_agent.src.LinkedInPost",
      "modules.platform_integration.linkedin_agent.src.LinkedInProfile",
      "modules.platform_integration.linkedin_agent.src.PostType",
      "modules.platform_integration.linkedin_agent.src.create_linkedin_agent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.__init__": {
    "module": "modules.platform_integration.linkedin_scheduler.__init__",
    "path": "modules\\platform_integration\\linkedin_scheduler\\__init__.py",
    "lines": 18,
    "imports": [
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.LinkedInAPIError",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.LinkedInScheduler",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.PostQueue"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.__init__": {
    "module": "modules.platform_integration.remote_builder.__init__",
    "path": "modules\\platform_integration\\remote_builder\\__init__.py",
    "lines": 30,
    "imports": [
      "modules.platform_integration.remote_builder.src.build_api",
      "modules.platform_integration.remote_builder.src.build_api.BuildAPI",
      "modules.platform_integration.remote_builder.src.build_monitor",
      "modules.platform_integration.remote_builder.src.build_monitor.BuildMonitor",
      "modules.platform_integration.remote_builder.src.remote_builder",
      "modules.platform_integration.remote_builder.src.remote_builder.RemoteBuilder"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.session_launcher.__init__": {
    "module": "modules.platform_integration.session_launcher.__init__",
    "path": "modules\\platform_integration\\session_launcher\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\__init__.py",
    "lines": 42,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.SocialMediaEventRouter",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.Platform",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.SocialMediaOrchestrator",
      "modules.platform_integration.social_media_orchestrator.src.unified_posting_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_posting_interface.UnifiedPostingInterface"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.__init__": {
    "module": "modules.platform_integration.stream_resolver.__init__",
    "path": "modules\\platform_integration\\stream_resolver\\__init__.py",
    "lines": 20,
    "imports": [
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.QuotaExceededError",
      "modules.platform_integration.stream_resolver.src.stream_resolver.calculate_dynamic_delay",
      "modules.platform_integration.stream_resolver.src.stream_resolver.check_video_details",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_active_livestream_video_id",
      "modules.platform_integration.stream_resolver.src.stream_resolver.search_livestreams"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.tests.test_hello_world_platforms": {
    "module": "modules.platform_integration.tests.test_hello_world_platforms",
    "path": "modules\\platform_integration\\tests\\test_hello_world_platforms.py",
    "lines": 159,
    "imports": [
      "logging",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.OAuthManager",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.tests.__init__": {
    "module": "modules.platform_integration.tests.__init__",
    "path": "modules\\platform_integration\\tests\\__init__.py",
    "lines": 6,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.__init__": {
    "module": "modules.platform_integration.x_twitter.__init__",
    "path": "modules\\platform_integration\\x_twitter\\__init__.py",
    "lines": 54,
    "imports": [
      "modules.platform_integration.x_twitter.src",
      "modules.platform_integration.x_twitter.src.AuthenticationLevel",
      "modules.platform_integration.x_twitter.src.AutonomousPost",
      "modules.platform_integration.x_twitter.src.CABREngine",
      "modules.platform_integration.x_twitter.src.CABRInteraction",
      "modules.platform_integration.x_twitter.src.CommunicationMode",
      "modules.platform_integration.x_twitter.src.DAEAuthenticator",
      "modules.platform_integration.x_twitter.src.DAEIdentity",
      "modules.platform_integration.x_twitter.src.DAEIdentityState",
      "modules.platform_integration.x_twitter.src.SocialEngagementToken",
      "modules.platform_integration.x_twitter.src.XTwitterDAENode",
      "modules.platform_integration.x_twitter.src.create_x_twitter_dae_node",
      "modules.platform_integration.x_twitter.src.test_x_twitter_dae"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.__init__": {
    "module": "modules.platform_integration.youtube_auth.__init__",
    "path": "modules\\platform_integration\\youtube_auth\\__init__.py",
    "lines": 31,
    "imports": [
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.__init__": {
    "module": "modules.platform_integration.youtube_proxy.__init__",
    "path": "modules\\platform_integration\\youtube_proxy\\__init__.py",
    "lines": 56,
    "imports": [
      "modules.platform_integration.youtube_proxy.src",
      "modules.platform_integration.youtube_proxy.src.ProxyStatus",
      "modules.platform_integration.youtube_proxy.src.StreamInfo",
      "modules.platform_integration.youtube_proxy.src.YouTubeProxy",
      "modules.platform_integration.youtube_proxy.src.YouTubeStream",
      "modules.platform_integration.youtube_proxy.src.create_youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.EngagementLevel"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.scripts.validate": {
    "module": "modules.platform_integration.github_integration.scripts.validate",
    "path": "modules\\platform_integration\\github_integration\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.github_api_client": {
    "module": "modules.platform_integration.github_integration.src.github_api_client",
    "path": "modules\\platform_integration\\github_integration\\src\\github_api_client.py",
    "lines": 579,
    "imports": [
      "aiohttp",
      "asyncio",
      "base64",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.platform_integration.github_integration.tests.test_basic_functionality",
      "modules.platform_integration.github_integration.tests.test_github_api_client"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.platform_integration.github_integration.src.github_automation": {
    "module": "modules.platform_integration.github_integration.src.github_automation",
    "path": "modules\\platform_integration\\github_integration\\src\\github_automation.py",
    "lines": 534,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "modules.platform_integration.github_integration.github_api_client",
      "modules.platform_integration.github_integration.github_api_client.GitHubAPIClient",
      "modules.platform_integration.github_integration.github_api_client.create_feature_branch_and_pr",
      "modules.platform_integration.github_integration.github_api_client.create_issue_for_bug",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.github_integration.tests.test_basic_functionality"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.github_integration.src.wre_integration": {
    "module": "modules.platform_integration.github_integration.src.wre_integration",
    "path": "modules\\platform_integration\\github_integration\\src\\wre_integration.py",
    "lines": 403,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.github_integration.github_api_client",
      "modules.platform_integration.github_integration.github_api_client.GitHubAPIClient",
      "modules.platform_integration.github_integration.github_api_client.GitHubAPIError",
      "modules.platform_integration.github_integration.github_automation",
      "modules.platform_integration.github_integration.github_automation.GitHubAutomation",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.github_integration.tests.test_github_integration"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.wsp_automation": {
    "module": "modules.platform_integration.github_integration.src.wsp_automation",
    "path": "modules\\platform_integration\\github_integration\\src\\wsp_automation.py",
    "lines": 846,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.platform_integration.github_integration.github_automation",
      "modules.platform_integration.github_integration.github_automation.GitHubAutomation",
      "modules.platform_integration.github_integration.wre_integration",
      "modules.platform_integration.github_integration.wre_integration.WREGitHubIntegration",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.platform_integration.github_integration.tests.test_github_integration"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.__init__": {
    "module": "modules.platform_integration.github_integration.src.__init__",
    "path": "modules\\platform_integration\\github_integration\\src\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_basic_functionality": {
    "module": "modules.platform_integration.github_integration.tests.test_basic_functionality",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_basic_functionality.py",
    "lines": 255,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.platform_integration.github_integration.src.github_api_client",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubAPIClient",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubAPIError",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubRepository",
      "modules.platform_integration.github_integration.src.github_api_client.Issue",
      "modules.platform_integration.github_integration.src.github_api_client.IssueState",
      "modules.platform_integration.github_integration.src.github_api_client.PullRequest",
      "modules.platform_integration.github_integration.src.github_api_client.PullRequestState",
      "modules.platform_integration.github_integration.src.github_automation",
      "modules.platform_integration.github_integration.src.github_automation.GitHubAutomation",
      "pytest",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_github_api_client": {
    "module": "modules.platform_integration.github_integration.tests.test_github_api_client",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_github_api_client.py",
    "lines": 490,
    "imports": [
      "aioresponses",
      "aioresponses.aioresponses",
      "asyncio",
      "base64",
      "datetime",
      "datetime.datetime",
      "modules.platform_integration.github_integration.src.github_api_client",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubAPIClient",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubAPIError",
      "modules.platform_integration.github_integration.src.github_api_client.GitHubRepository",
      "modules.platform_integration.github_integration.src.github_api_client.Issue",
      "modules.platform_integration.github_integration.src.github_api_client.IssueState",
      "modules.platform_integration.github_integration.src.github_api_client.PullRequest",
      "modules.platform_integration.github_integration.src.github_api_client.PullRequestState",
      "pytest",
      "unittest.mock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_github_automation": {
    "module": "modules.platform_integration.github_integration.tests.test_github_automation",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_github_automation.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_github_integration": {
    "module": "modules.platform_integration.github_integration.tests.test_github_integration",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_github_integration.py",
    "lines": 176,
    "imports": [
      "asyncio",
      "dotenv",
      "dotenv.load_dotenv",
      "logging",
      "modules.platform_integration.github_integration.src.wre_integration",
      "modules.platform_integration.github_integration.src.wre_integration.WREGitHubIntegration",
      "modules.platform_integration.github_integration.src.wsp_automation",
      "modules.platform_integration.github_integration.src.wsp_automation.WSPAutomationManager",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_wre_integration": {
    "module": "modules.platform_integration.github_integration.tests.test_wre_integration",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_wre_integration.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_wsp_automation": {
    "module": "modules.platform_integration.github_integration.tests.test_wsp_automation",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_wsp_automation.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.__init__": {
    "module": "modules.platform_integration.github_integration.tests.__init__",
    "path": "modules\\platform_integration\\github_integration\\tests\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.adapters.github_api_adapter": {
    "module": "modules.platform_integration.github_integration.src.adapters.github_api_adapter",
    "path": "modules\\platform_integration\\github_integration\\src\\adapters\\github_api_adapter.py",
    "lines": 380,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.src.adapters.__init__": {
    "module": "modules.platform_integration.github_integration.src.adapters.__init__",
    "path": "modules\\platform_integration\\github_integration\\src\\adapters\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.auth.dynamic_token_manager": {
    "module": "modules.platform_integration.github_integration.src.auth.dynamic_token_manager",
    "path": "modules\\platform_integration\\github_integration\\src\\auth\\dynamic_token_manager.py",
    "lines": 558,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "httpx",
      "json",
      "jwt",
      "logging",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.src.cube_adapters.ai_intelligence_cube_adapter": {
    "module": "modules.platform_integration.github_integration.src.cube_adapters.ai_intelligence_cube_adapter",
    "path": "modules\\platform_integration\\github_integration\\src\\cube_adapters\\ai_intelligence_cube_adapter.py",
    "lines": 339,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.github_integration.extensions.compliance_github_extension",
      "modules.platform_integration.github_integration.extensions.compliance_github_extension.ComplianceGitHubExtension",
      "modules.platform_integration.github_integration.src.base_cube_adapter",
      "modules.platform_integration.github_integration.src.base_cube_adapter.BaseCubeAdapter",
      "modules.platform_integration.github_integration.src.base_cube_adapter.CubeModuleChange",
      "modules.platform_integration.github_integration.src.base_cube_adapter.CubeOperationResult",
      "modules.platform_integration.github_integration.src.base_cube_adapter.CubeType",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.src.cube_adapters.base_cube_adapter": {
    "module": "modules.platform_integration.github_integration.src.cube_adapters.base_cube_adapter",
    "path": "modules\\platform_integration\\github_integration\\src\\cube_adapters\\base_cube_adapter.py",
    "lines": 377,
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.platform_integration.github_integration.adapters.github_api_adapter",
      "modules.platform_integration.github_integration.adapters.github_api_adapter.GitHubAPIAdapter",
      "modules.platform_integration.github_integration.extensions.compliance_github_extension",
      "modules.platform_integration.github_integration.extensions.compliance_github_extension.ComplianceGitHubExtension",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Type"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.src.cube_adapters.__init__": {
    "module": "modules.platform_integration.github_integration.src.cube_adapters.__init__",
    "path": "modules\\platform_integration\\github_integration\\src\\cube_adapters\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.src.extensions.compliance_github_extension": {
    "module": "modules.platform_integration.github_integration.src.extensions.compliance_github_extension",
    "path": "modules\\platform_integration\\github_integration\\src\\extensions\\compliance_github_extension.py",
    "lines": 324,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.github_integration.adapters.github_api_adapter",
      "modules.platform_integration.github_integration.adapters.github_api_adapter.GitHubAPIAdapter",
      "modules.platform_integration.github_integration.adapters.github_api_adapter.GitHubIssueRequest",
      "modules.platform_integration.github_integration.adapters.github_api_adapter.GitHubPRRequest",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.github_integration.src.extensions.__init__": {
    "module": "modules.platform_integration.github_integration.src.extensions.__init__",
    "path": "modules\\platform_integration\\github_integration\\src\\extensions\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_adapters.github_api_adapter": {
    "module": "modules.platform_integration.github_integration.tests.test_adapters.github_api_adapter",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_adapters\\github_api_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_auth.dynamic_token_manager": {
    "module": "modules.platform_integration.github_integration.tests.test_auth.dynamic_token_manager",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_auth\\dynamic_token_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_cube_adapters.ai_intelligence_cube_adapter": {
    "module": "modules.platform_integration.github_integration.tests.test_cube_adapters.ai_intelligence_cube_adapter",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_cube_adapters\\ai_intelligence_cube_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_cube_adapters.base_cube_adapter": {
    "module": "modules.platform_integration.github_integration.tests.test_cube_adapters.base_cube_adapter",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_cube_adapters\\base_cube_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.github_integration.tests.test_extensions.compliance_github_extension": {
    "module": "modules.platform_integration.github_integration.tests.test_extensions.compliance_github_extension",
    "path": "modules\\platform_integration\\github_integration\\tests\\test_extensions\\compliance_github_extension.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.scripts.fix_logging": {
    "module": "modules.platform_integration.linkedin_agent.scripts.fix_logging",
    "path": "modules\\platform_integration\\linkedin_agent\\scripts\\fix_logging.py",
    "lines": 76,
    "imports": [
      "os",
      "re",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.scripts.post_holoindex_achievement": {
    "module": "modules.platform_integration.linkedin_agent.scripts.post_holoindex_achievement",
    "path": "modules\\platform_integration\\linkedin_agent\\scripts\\post_holoindex_achievement.py",
    "lines": 70,
    "imports": [
      "datetime",
      "datetime.datetime",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.scripts.validate": {
    "module": "modules.platform_integration.linkedin_agent.scripts.validate",
    "path": "modules\\platform_integration\\linkedin_agent\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.anti_detection_poster": {
    "module": "modules.platform_integration.linkedin_agent.src.anti_detection_poster",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\anti_detection_poster.py",
    "lines": 1026,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor.detect_and_fix_duplicate",
      "os",
      "pickle",
      "random",
      "re",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.action_chains",
      "selenium.webdriver.common.action_chains.ActionChains",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "subprocess",
      "sys",
      "time",
      "typing",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.system_health_monitor.tests.system_integration_test",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.git_linkedin_bridge": {
    "module": "modules.platform_integration.linkedin_agent.src.git_linkedin_bridge",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\git_linkedin_bridge.py",
    "lines": 390,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "json",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_git_commits",
      "os",
      "subprocess",
      "sys",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.linkedin_agent": {
    "module": "modules.platform_integration.linkedin_agent.src.linkedin_agent",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\linkedin_agent.py",
    "lines": 411,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "linkedin_oauth_test",
      "linkedin_oauth_test.LinkedInOAuthTest",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.gamification.priority_scorer.src.priority_scorer",
      "modules.gamification.priority_scorer.src.priority_scorer.PriorityScorer",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.OAuthManager",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union"
    ],
    "incoming": [
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator",
      "modules.platform_integration.linkedin_agent.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.__init__": {
    "module": "modules.platform_integration.linkedin_agent.src.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\__init__.py",
    "lines": 27,
    "imports": [
      "modules.platform_integration.linkedin_agent.src.linkedin_agent",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.EngagementAction",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.EngagementType",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.LinkedInAgent",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.LinkedInPost",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.LinkedInProfile",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.PostType",
      "modules.platform_integration.linkedin_agent.src.linkedin_agent.create_linkedin_agent"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.auth.credentials": {
    "module": "modules.platform_integration.linkedin_agent.src.auth.credentials",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\auth\\credentials.py",
    "lines": 209,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.auth.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.auth.oauth_manager": {
    "module": "modules.platform_integration.linkedin_agent.src.auth.oauth_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\auth\\oauth_manager.py",
    "lines": 170,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.OAuthManager",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.auth.__init__",
      "modules.platform_integration.linkedin_agent.tests.test_auth.test_oauth_manager"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.auth.session_manager": {
    "module": "modules.platform_integration.linkedin_agent.src.auth.session_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\auth\\session_manager.py",
    "lines": 197,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.auth.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.auth.__init__": {
    "module": "modules.platform_integration.linkedin_agent.src.auth.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\auth\\__init__.py",
    "lines": 22,
    "imports": [
      "modules.platform_integration.linkedin_agent.src.auth.credentials",
      "modules.platform_integration.linkedin_agent.src.auth.credentials.LinkedInCredentials",
      "modules.platform_integration.linkedin_agent.src.auth.oauth_manager",
      "modules.platform_integration.linkedin_agent.src.auth.oauth_manager.LinkedInOAuthManager",
      "modules.platform_integration.linkedin_agent.src.auth.session_manager",
      "modules.platform_integration.linkedin_agent.src.auth.session_manager.LinkedInSessionManager"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.automation.post_scheduler": {
    "module": "modules.platform_integration.linkedin_agent.src.automation.post_scheduler",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\automation\\post_scheduler.py",
    "lines": 427,
    "imports": [
      "apscheduler.schedulers.background",
      "apscheduler.schedulers.background.BackgroundScheduler",
      "apscheduler.triggers.cron",
      "apscheduler.triggers.cron.CronTrigger",
      "apscheduler.triggers.date",
      "apscheduler.triggers.date.DateTrigger",
      "apscheduler.triggers.interval",
      "apscheduler.triggers.interval.IntervalTrigger",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "os",
      "requests",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "uuid"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.automation.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.automation.__init__": {
    "module": "modules.platform_integration.linkedin_agent.src.automation.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\automation\\__init__.py",
    "lines": 19,
    "imports": [
      "modules.platform_integration.linkedin_agent.src.automation.post_scheduler",
      "modules.platform_integration.linkedin_agent.src.automation.post_scheduler.LinkedInPostScheduler",
      "modules.platform_integration.linkedin_agent.src.automation.post_scheduler.ScheduledPost"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.content.content_templates": {
    "module": "modules.platform_integration.linkedin_agent.src.content.content_templates",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\content\\content_templates.py",
    "lines": 117,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.content.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.content.hashtag_manager": {
    "module": "modules.platform_integration.linkedin_agent.src.content.hashtag_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\content\\hashtag_manager.py",
    "lines": 163,
    "imports": [
      "logging",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.content.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.content.media_handler": {
    "module": "modules.platform_integration.linkedin_agent.src.content.media_handler",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\content\\media_handler.py",
    "lines": 190,
    "imports": [
      "logging",
      "mimetypes",
      "os",
      "shutil",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "urllib.parse",
      "urllib.parse.urlparse"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.content.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.content.post_generator": {
    "module": "modules.platform_integration.linkedin_agent.src.content.post_generator",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\content\\post_generator.py",
    "lines": 151,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.content.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.content.__init__": {
    "module": "modules.platform_integration.linkedin_agent.src.content.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\content\\__init__.py",
    "lines": 24,
    "imports": [
      "modules.platform_integration.linkedin_agent.src.content.content_templates",
      "modules.platform_integration.linkedin_agent.src.content.content_templates.ContentTemplates",
      "modules.platform_integration.linkedin_agent.src.content.hashtag_manager",
      "modules.platform_integration.linkedin_agent.src.content.hashtag_manager.HashtagManager",
      "modules.platform_integration.linkedin_agent.src.content.media_handler",
      "modules.platform_integration.linkedin_agent.src.content.media_handler.MediaHandler",
      "modules.platform_integration.linkedin_agent.src.content.post_generator",
      "modules.platform_integration.linkedin_agent.src.content.post_generator.LinkedInPostGenerator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.engagement.connection_manager": {
    "module": "modules.platform_integration.linkedin_agent.src.engagement.connection_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\engagement\\connection_manager.py",
    "lines": 513,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.engagement.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.engagement.feed_reader": {
    "module": "modules.platform_integration.linkedin_agent.src.engagement.feed_reader",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\engagement\\feed_reader.py",
    "lines": 199,
    "imports": [
      "asyncio",
      "collections",
      "collections.Counter",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.engagement.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager": {
    "module": "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\engagement\\interaction_manager.py",
    "lines": 470,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.engagement.__init__",
      "modules.platform_integration.linkedin_agent.tests.test_engagement.test_interaction_manager"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.engagement.messaging": {
    "module": "modules.platform_integration.linkedin_agent.src.engagement.messaging",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\engagement\\messaging.py",
    "lines": 508,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "logging",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.engagement.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.src.engagement.__init__": {
    "module": "modules.platform_integration.linkedin_agent.src.engagement.__init__",
    "path": "modules\\platform_integration\\linkedin_agent\\src\\engagement\\__init__.py",
    "lines": 24,
    "imports": [
      "modules.platform_integration.linkedin_agent.src.engagement.connection_manager",
      "modules.platform_integration.linkedin_agent.src.engagement.connection_manager.LinkedInConnectionManager",
      "modules.platform_integration.linkedin_agent.src.engagement.feed_reader",
      "modules.platform_integration.linkedin_agent.src.engagement.feed_reader.LinkedInFeedReader",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.LinkedInInteractionManager",
      "modules.platform_integration.linkedin_agent.src.engagement.messaging",
      "modules.platform_integration.linkedin_agent.src.engagement.messaging.LinkedInMessaging"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_auth.credentials": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_auth.credentials",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_auth\\credentials.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_auth.oauth_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_auth.oauth_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_auth\\oauth_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_auth.session_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_auth.session_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_auth\\session_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_auth.test_oauth_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_auth.test_oauth_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_auth\\test_oauth_manager.py",
    "lines": 263,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.platform_integration.linkedin_agent.src.auth.oauth_manager",
      "modules.platform_integration.linkedin_agent.src.auth.oauth_manager.LinkedInOAuthManager",
      "modules.platform_integration.linkedin_agent.src.auth.oauth_manager.OAuthConfig",
      "os",
      "pytest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_automation.post_scheduler": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_automation.post_scheduler",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_automation\\post_scheduler.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_content.content_templates": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_content.content_templates",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_content\\content_templates.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_content.hashtag_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_content.hashtag_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_content\\hashtag_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_content.media_handler": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_content.media_handler",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_content\\media_handler.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_content.post_generator": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_content.post_generator",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_content\\post_generator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_content.test_post_generator": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_content.test_post_generator",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_content\\test_post_generator.py",
    "lines": 294,
    "imports": [
      "asyncio",
      "content.post_generator",
      "content.post_generator.LinkedInPost",
      "content.post_generator.LinkedInPostGenerator",
      "content.post_generator.PostType",
      "datetime",
      "datetime.datetime",
      "os",
      "pytest",
      "sys",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_engagement.connection_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_engagement.connection_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_engagement\\connection_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_engagement.feed_reader": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_engagement.feed_reader",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_engagement\\feed_reader.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_engagement.interaction_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_engagement.interaction_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_engagement\\interaction_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_engagement.messaging": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_engagement.messaging",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_engagement\\messaging.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_agent.tests.test_engagement.test_interaction_manager": {
    "module": "modules.platform_integration.linkedin_agent.tests.test_engagement.test_interaction_manager",
    "path": "modules\\platform_integration\\linkedin_agent\\tests\\test_engagement\\test_interaction_manager.py",
    "lines": 360,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.InteractionResult",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.InteractionTarget",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.InteractionType",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.LinkedInInteractionManager",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.ReactionType",
      "modules.platform_integration.linkedin_agent.src.engagement.interaction_manager.create_linkedin_interaction_manager",
      "os",
      "sys",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.scripts.validate": {
    "module": "modules.platform_integration.linkedin_scheduler.scripts.validate",
    "path": "modules\\platform_integration\\linkedin_scheduler\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.api_demo": {
    "module": "modules.platform_integration.linkedin_scheduler.src.api_demo",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\api_demo.py",
    "lines": 247,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "linkedin_scheduler",
      "linkedin_scheduler.LinkedInAPIError",
      "linkedin_scheduler.LinkedInScheduler",
      "linkedin_scheduler.PostQueue",
      "logging"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.api_test": {
    "module": "modules.platform_integration.linkedin_scheduler.src.api_test",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\api_test.py",
    "lines": 173,
    "imports": [
      "linkedin_scheduler",
      "linkedin_scheduler.LinkedInAPIError",
      "linkedin_scheduler.LinkedInScheduler",
      "logging",
      "os"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler": {
    "module": "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\linkedin_scheduler.py",
    "lines": 496,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "os",
      "requests",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Literal",
      "typing.Optional",
      "urllib.parse",
      "urllib.parse.urlencode"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_scheduler.__init__",
      "modules.platform_integration.linkedin_scheduler.tests.test_api_integration",
      "modules.platform_integration.linkedin_scheduler.tests.test_environment_creds"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "3 inbound references."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.poc_validation": {
    "module": "modules.platform_integration.linkedin_scheduler.src.poc_validation",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\poc_validation.py",
    "lines": 219,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "linkedin_scheduler",
      "linkedin_scheduler.LinkedInScheduler",
      "linkedin_scheduler.PostQueue",
      "logging",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.quick_test": {
    "module": "modules.platform_integration.linkedin_scheduler.src.quick_test",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\quick_test.py",
    "lines": 79,
    "imports": [
      "linkedin_scheduler",
      "linkedin_scheduler.LinkedInAPIError",
      "linkedin_scheduler.LinkedInScheduler",
      "logging"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.src.__init__": {
    "module": "modules.platform_integration.linkedin_scheduler.src.__init__",
    "path": "modules\\platform_integration\\linkedin_scheduler\\src\\__init__.py",
    "lines": 2,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_api_demo": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_api_demo",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_api_demo.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_api_integration": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_api_integration",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_api_integration.py",
    "lines": 406,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.LinkedInAPIError",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.LinkedInScheduler",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.PostQueue",
      "os",
      "requests",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_api_test": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_api_test",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_api_test.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_environment_creds": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_environment_creds",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_environment_creds.py",
    "lines": 72,
    "imports": [
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler",
      "modules.platform_integration.linkedin_scheduler.src.linkedin_scheduler.LinkedInScheduler",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_linkedin_scheduler": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_linkedin_scheduler",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_linkedin_scheduler.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_poc_validation": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_poc_validation",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_poc_validation.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.linkedin_scheduler.tests.test_quick_test": {
    "module": "modules.platform_integration.linkedin_scheduler.tests.test_quick_test",
    "path": "modules\\platform_integration\\linkedin_scheduler\\tests\\test_quick_test.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.scripts.validate": {
    "module": "modules.platform_integration.remote_builder.scripts.validate",
    "path": "modules\\platform_integration\\remote_builder\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.src.build_api": {
    "module": "modules.platform_integration.remote_builder.src.build_api",
    "path": "modules\\platform_integration\\remote_builder\\src\\build_api.py",
    "lines": 180,
    "imports": [
      "datetime",
      "datetime.datetime",
      "flask",
      "flask.Flask",
      "flask.jsonify",
      "flask.request",
      "logging",
      "modules.platform_integration.remote_builder.remote_builder",
      "modules.platform_integration.remote_builder.remote_builder.RemoteBuilder",
      "modules.platform_integration.remote_builder.remote_builder.create_build_request",
      "typing",
      "typing.Any",
      "typing.Dict"
    ],
    "incoming": [
      "modules.platform_integration.remote_builder.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.src.remote_builder": {
    "module": "modules.platform_integration.remote_builder.src.remote_builder",
    "path": "modules\\platform_integration\\remote_builder\\src\\remote_builder.py",
    "lines": 553,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.wre_core.src.components.module_development.module_development_coordinator",
      "modules.wre_core.src.components.module_development.module_development_coordinator.ModuleDevelopmentCoordinator",
      "modules.wre_core.src.prometheus_orchestration_engine",
      "modules.wre_core.src.prometheus_orchestration_engine.PrometheusOrchestrationEngine",
      "modules.wre_core.src.utils.logging_utils",
      "modules.wre_core.src.utils.logging_utils.wre_log",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.remote_builder.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.remote_builder.src.__init__": {
    "module": "modules.platform_integration.remote_builder.src.__init__",
    "path": "modules\\platform_integration\\remote_builder\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.tests.test_build_api": {
    "module": "modules.platform_integration.remote_builder.tests.test_build_api",
    "path": "modules\\platform_integration\\remote_builder\\tests\\test_build_api.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.remote_builder.tests.test_remote_builder": {
    "module": "modules.platform_integration.remote_builder.tests.test_remote_builder",
    "path": "modules\\platform_integration\\remote_builder\\tests\\test_remote_builder.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.session_launcher.scripts.validate": {
    "module": "modules.platform_integration.session_launcher.scripts.validate",
    "path": "modules\\platform_integration\\session_launcher\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.session_launcher.src.session_launcher": {
    "module": "modules.platform_integration.session_launcher.src.session_launcher",
    "path": "modules\\platform_integration\\session_launcher\\src\\session_launcher.py",
    "lines": 693,
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "uuid"
    ],
    "incoming": [
      "modules.platform_integration.session_launcher.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.session_launcher.src.__init__": {
    "module": "modules.platform_integration.session_launcher.src.__init__",
    "path": "modules\\platform_integration\\session_launcher\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.platform_integration.session_launcher.src.session_launcher",
      "modules.platform_integration.session_launcher.src.session_launcher.LaunchRequest",
      "modules.platform_integration.session_launcher.src.session_launcher.SessionLauncher",
      "modules.platform_integration.session_launcher.src.session_launcher.SessionStatus"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.session_launcher.tests.test_session_launcher": {
    "module": "modules.platform_integration.session_launcher.tests.test_session_launcher",
    "path": "modules\\platform_integration\\session_launcher\\tests\\test_session_launcher.py",
    "lines": 13,
    "imports": [
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.session_launcher.tests.__init__": {
    "module": "modules.platform_integration.session_launcher.tests.__init__",
    "path": "modules\\platform_integration\\session_launcher\\tests\\__init__.py",
    "lines": 7,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.scripts.validate": {
    "module": "modules.platform_integration.social_media_orchestrator.scripts.validate",
    "path": "modules\\platform_integration\\social_media_orchestrator\\scripts\\validate.py",
    "lines": 144,
    "imports": [
      "asyncio",
      "logging",
      "pathlib",
      "pathlib.Path",
      "social_media_orchestrator",
      "social_media_orchestrator.LinkedInAdapter",
      "social_media_orchestrator.TwitterAdapter",
      "social_media_orchestrator.create_social_media_orchestrator",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.autonomous_action_scheduler": {
    "module": "modules.platform_integration.social_media_orchestrator.src.autonomous_action_scheduler",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\autonomous_action_scheduler.py",
    "lines": 445,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator.Platform",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator.SimplePostingOrchestrator",
      "os",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.human_scheduling_interface": {
    "module": "modules.platform_integration.social_media_orchestrator.src.human_scheduling_interface",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\human_scheduling_interface.py",
    "lines": 350,
    "imports": [
      "argparse",
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator.Platform",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator.PostResponse",
      "modules.platform_integration.social_media_orchestrator.simple_posting_orchestrator.SimplePostingOrchestrator",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.multi_account_manager": {
    "module": "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\multi_account_manager.py",
    "lines": 439,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster.AntiDetectionLinkedIn",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster.AntiDetectionX",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "yaml"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.__init__",
      "modules.platform_integration.social_media_orchestrator.tests.integration.test_git_push_social",
      "modules.platform_integration.social_media_orchestrator.tests.test_git_push_posting",
      "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation",
      "modules.platform_integration.social_media_orchestrator.tests.test_system_coexistence"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor": {
    "module": "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\post_safety_monitor.py",
    "lines": 313,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.orchestrator",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster",
      "modules.platform_integration.social_media_orchestrator.tests.test_cancellation_detection",
      "modules.platform_integration.social_media_orchestrator.tests.test_post_safety_monitor",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator": {
    "module": "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\simple_posting_orchestrator.py",
    "lines": 823,
    "imports": [
      "asyncio",
      "atexit",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_general_content",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_stream_notification",
      "modules.platform_integration.stream_resolver.src.no_quota_stream_checker",
      "modules.platform_integration.stream_resolver.src.no_quota_stream_checker.NoQuotaStreamChecker",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster.AntiDetectionX",
      "os",
      "re",
      "sqlite3",
      "threading",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.test_live_verification",
      "modules.platform_integration.social_media_orchestrator.__init__",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.tests.test_cancellation_detection",
      "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_check",
      "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_prevention",
      "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation",
      "modules.platform_integration.social_media_orchestrator.tests.test_live_verification",
      "modules.platform_integration.social_media_orchestrator.tests.test_orchestrator_integration",
      "modules.platform_integration.social_media_orchestrator.tests.test_simplified_posting",
      "modules.platform_integration.social_media_orchestrator.tests.test_system_coexistence",
      "modules.platform_integration.stream_resolver.src.stream_resolver"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "13 inbound references."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator": {
    "module": "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\social_media_orchestrator.py",
    "lines": 426,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.social_media_orchestrator.content.content_orchestrator",
      "modules.platform_integration.social_media_orchestrator.content.content_orchestrator.ContentOrchestrator",
      "modules.platform_integration.social_media_orchestrator.oauth.oauth_coordinator",
      "modules.platform_integration.social_media_orchestrator.oauth.oauth_coordinator.OAuthCoordinator",
      "modules.platform_integration.social_media_orchestrator.platform_adapters.linkedin_adapter",
      "modules.platform_integration.social_media_orchestrator.platform_adapters.linkedin_adapter.LinkedInAdapter",
      "modules.platform_integration.social_media_orchestrator.platform_adapters.twitter_adapter",
      "modules.platform_integration.social_media_orchestrator.platform_adapters.twitter_adapter.TwitterAdapter",
      "modules.platform_integration.social_media_orchestrator.scheduling.scheduling_engine",
      "modules.platform_integration.social_media_orchestrator.scheduling.scheduling_engine.SchedulingEngine",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.__init__",
      "modules.platform_integration.social_media_orchestrator.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "2 inbound references."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface": {
    "module": "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\unified_linkedin_interface.py",
    "lines": 382,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster",
      "modules.platform_integration.linkedin_agent.src.anti_detection_poster.AntiDetectionLinkedIn",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.orchestrator",
      "os",
      "threading",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.infrastructure.wre_core.development_monitor.git_monitor_dae",
      "modules.platform_integration.linkedin_agent.src.git_linkedin_bridge",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation",
      "modules.platform_integration.social_media_orchestrator.tests.test_system_coexistence"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.src.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\__init__.py",
    "lines": 54,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.content",
      "modules.platform_integration.social_media_orchestrator.src.content.ContentOrchestrator",
      "modules.platform_integration.social_media_orchestrator.src.oauth",
      "modules.platform_integration.social_media_orchestrator.src.oauth.OAuthCoordinator",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.BasePlatformAdapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.LinkedInAdapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.TwitterAdapter",
      "modules.platform_integration.social_media_orchestrator.src.scheduling",
      "modules.platform_integration.social_media_orchestrator.src.scheduling.ScheduledPost",
      "modules.platform_integration.social_media_orchestrator.src.scheduling.SchedulingEngine",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.AuthenticationError",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.ContentError",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.OrchestrationError",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.PostResult",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.SchedulingError",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.SocialMediaOrchestrator",
      "modules.platform_integration.social_media_orchestrator.src.social_media_orchestrator.create_social_media_orchestrator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_autonomous_scheduler": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_autonomous_scheduler",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_autonomous_scheduler.py",
    "lines": 119,
    "imports": [
      "asyncio",
      "autonomous_action_scheduler",
      "autonomous_action_scheduler.ActionType",
      "autonomous_action_scheduler.AutonomousActionScheduler",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "os",
      "sys",
      "unittest"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_cancellation_detection": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_cancellation_detection",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_cancellation_detection.py",
    "lines": 143,
    "imports": [
      "asyncio",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor.PostSafetyMonitor",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor.detect_and_fix_duplicate",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.orchestrator",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_check": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_check",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_duplicate_check.py",
    "lines": 67,
    "imports": [
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_prevention": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_duplicate_prevention",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_duplicate_prevention.py",
    "lines": 82,
    "imports": [
      "asyncio",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_git_push_posting": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_git_push_posting",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_git_push_posting.py",
    "lines": 154,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.MultiAccountManager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.SocialMediaEventRouter",
      "os",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_hello_world": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_hello_world",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_hello_world.py",
    "lines": 269,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "pathlib",
      "pathlib.Path",
      "social_media_orchestrator",
      "social_media_orchestrator.AuthenticationError",
      "social_media_orchestrator.LinkedInAdapter",
      "social_media_orchestrator.TwitterAdapter",
      "social_media_orchestrator.create_social_media_orchestrator",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_architecture_consolidation",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_linkedin_architecture_consolidation.py",
    "lines": 291,
    "imports": [
      "ast",
      "asyncio",
      "glob",
      "inspect",
      "logging",
      "modules.infrastructure.wre_core.development_monitor.git_monitor_dae",
      "modules.infrastructure.wre_core.development_monitor.git_monitor_dae.DevelopmentMonitorDAE",
      "modules.platform_integration.linkedin_agent.src.git_linkedin_bridge",
      "modules.platform_integration.linkedin_agent.src.git_linkedin_bridge.GitLinkedInBridge",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.AccountCredentialManager",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_development_update",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_general_content",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_git_commits",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_stream_notification",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.unified_linkedin",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_hello_world": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_linkedin_hello_world",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_linkedin_hello_world.py",
    "lines": 127,
    "imports": [
      "asyncio",
      "logging",
      "pathlib",
      "pathlib.Path",
      "platform_adapters.linkedin_adapter",
      "platform_adapters.linkedin_adapter.LinkedInAdapter",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_live_integration": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_live_integration",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_live_integration.py",
    "lines": 198,
    "imports": [
      "anti_detection_poster",
      "anti_detection_poster.AntiDetectionLinkedIn",
      "asyncio",
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "os",
      "pathlib",
      "pathlib.Path",
      "social_media_orchestrator",
      "social_media_orchestrator.SocialMediaOrchestrator",
      "sys",
      "x_twitter_dae",
      "x_twitter_dae.XTwitterDAE"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_live_verification": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_live_verification",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_live_verification.py",
    "lines": 121,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.Platform",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.PostResponse",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.PostResult",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "pytest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_orchestrator_integration": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_orchestrator_integration",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_orchestrator_integration.py",
    "lines": 68,
    "imports": [
      "asyncio",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_post_safety_monitor": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_post_safety_monitor",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_post_safety_monitor.py",
    "lines": 136,
    "imports": [
      "asyncio",
      "json",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor.PostSafetyMonitor",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_simplified_posting": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_simplified_posting",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_simplified_posting.py",
    "lines": 130,
    "imports": [
      "asyncio",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.SimplePostingOrchestrator"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_social_media_orchestrator": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_social_media_orchestrator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_social_media_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_system_coexistence": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_system_coexistence",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_system_coexistence.py",
    "lines": 235,
    "imports": [
      "asyncio",
      "inspect",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.AccountCredentialManager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.MultiAccountManager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.SocialMediaEventRouter",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.LinkedInCompanyPage",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.post_stream_notification",
      "modules.platform_integration.social_media_orchestrator.src.unified_linkedin_interface.unified_linkedin",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_twitter_hello_world": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_twitter_hello_world",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_twitter_hello_world.py",
    "lines": 111,
    "imports": [
      "asyncio",
      "logging",
      "pathlib",
      "pathlib.Path",
      "platform_adapters.twitter_adapter",
      "platform_adapters.twitter_adapter.TwitterAdapter",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.content.content_orchestrator": {
    "module": "modules.platform_integration.social_media_orchestrator.src.content.content_orchestrator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\content\\content_orchestrator.py",
    "lines": 309,
    "imports": [
      "datetime",
      "datetime.datetime",
      "logging",
      "re",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.content.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.content.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.src.content.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\content\\__init__.py",
    "lines": 8,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.content.content_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.content.content_orchestrator.ContentOrchestrator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.oauth.oauth_coordinator": {
    "module": "modules.platform_integration.social_media_orchestrator.src.oauth.oauth_coordinator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\oauth\\oauth_coordinator.py",
    "lines": 280,
    "imports": [
      "cryptography.fernet",
      "cryptography.fernet.Fernet",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "os",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.oauth.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.oauth.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.src.oauth.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\oauth\\__init__.py",
    "lines": 8,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.oauth.oauth_coordinator",
      "modules.platform_integration.social_media_orchestrator.src.oauth.oauth_coordinator.OAuthCoordinator"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.platform_adapters.base_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.src.platform_adapters.base_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\platform_adapters\\base_adapter.py",
    "lines": 211,
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.platform_adapters.linkedin_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.src.platform_adapters.linkedin_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\platform_adapters\\linkedin_adapter.py",
    "lines": 318,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.platform_adapters.twitter_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.src.platform_adapters.twitter_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\platform_adapters\\twitter_adapter.py",
    "lines": 230,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.platform_adapters.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.src.platform_adapters.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\platform_adapters\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.base_adapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.base_adapter.BasePlatformAdapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.linkedin_adapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.linkedin_adapter.LinkedInAdapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.twitter_adapter",
      "modules.platform_integration.social_media_orchestrator.src.platform_adapters.twitter_adapter.TwitterAdapter"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.scheduling.scheduling_engine": {
    "module": "modules.platform_integration.social_media_orchestrator.src.scheduling.scheduling_engine",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\scheduling\\scheduling_engine.py",
    "lines": 438,
    "imports": [
      "apscheduler.schedulers.asyncio",
      "apscheduler.schedulers.asyncio.AsyncIOScheduler",
      "apscheduler.triggers.date",
      "apscheduler.triggers.date.DateTrigger",
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "pytz",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "uuid"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.scheduling.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.src.scheduling.__init__": {
    "module": "modules.platform_integration.social_media_orchestrator.src.scheduling.__init__",
    "path": "modules\\platform_integration\\social_media_orchestrator\\src\\scheduling\\__init__.py",
    "lines": 8,
    "imports": [
      "modules.platform_integration.social_media_orchestrator.src.scheduling.scheduling_engine",
      "modules.platform_integration.social_media_orchestrator.src.scheduling.scheduling_engine.ScheduledPost",
      "modules.platform_integration.social_media_orchestrator.src.scheduling.scheduling_engine.SchedulingEngine"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.integration.test_detailed_linkedin": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.integration.test_detailed_linkedin",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\integration\\test_detailed_linkedin.py",
    "lines": 176,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.action_chains",
      "selenium.webdriver.common.action_chains.ActionChains",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.integration.test_final_posting": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.integration.test_final_posting",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\integration\\test_final_posting.py",
    "lines": 238,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "dotenv",
      "dotenv.load_dotenv",
      "os",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "sys",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.integration.test_git_push_social": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.integration.test_git_push_social",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\integration\\test_git_push_social.py",
    "lines": 129,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager.SocialMediaEventRouter",
      "os",
      "subprocess",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.integration.test_linkedin_debug": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.integration.test_linkedin_debug",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\integration\\test_linkedin_debug.py",
    "lines": 122,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.integration.test_verify_posts": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.integration.test_verify_posts",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\integration\\test_verify_posts.py",
    "lines": 99,
    "imports": [
      "os",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_content.content_orchestrator": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_content.content_orchestrator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_content\\content_orchestrator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_oauth.oauth_coordinator": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_oauth.oauth_coordinator",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_oauth\\oauth_coordinator.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.base_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.base_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_platform_adapters\\base_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.linkedin_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.linkedin_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_platform_adapters\\linkedin_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.twitter_adapter": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_platform_adapters.twitter_adapter",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_platform_adapters\\twitter_adapter.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.social_media_orchestrator.tests.test_scheduling.scheduling_engine": {
    "module": "modules.platform_integration.social_media_orchestrator.tests.test_scheduling.scheduling_engine",
    "path": "modules\\platform_integration\\social_media_orchestrator\\tests\\test_scheduling\\scheduling_engine.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.scripts.test_live_detection": {
    "module": "modules.platform_integration.stream_resolver.scripts.test_live_detection",
    "path": "modules\\platform_integration\\stream_resolver\\scripts\\test_live_detection.py",
    "lines": 202,
    "imports": [
      "json",
      "re",
      "requests",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.scripts.validate": {
    "module": "modules.platform_integration.stream_resolver.scripts.validate",
    "path": "modules\\platform_integration\\stream_resolver\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.src.no_quota_stream_checker": {
    "module": "modules.platform_integration.stream_resolver.src.no_quota_stream_checker",
    "path": "modules\\platform_integration\\stream_resolver\\src\\no_quota_stream_checker.py",
    "lines": 465,
    "imports": [
      "json",
      "logging",
      "os",
      "random",
      "re",
      "requests",
      "requests.adapters",
      "requests.adapters.HTTPAdapter",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "urllib3.util.retry",
      "urllib3.util.retry.Retry"
    ],
    "incoming": [
      "modules.communication.livechat._archive.experimental_2025_09_19.stream_end_detector",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.src.periodic_stream_monitor": {
    "module": "modules.platform_integration.stream_resolver.src.periodic_stream_monitor",
    "path": "modules\\platform_integration\\stream_resolver\\src\\periodic_stream_monitor.py",
    "lines": 361,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.src.stream_resolver": {
    "module": "modules.platform_integration.stream_resolver.src.stream_resolver",
    "path": "modules\\platform_integration\\stream_resolver\\src\\stream_resolver.py",
    "lines": 1140,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "dotenv",
      "dotenv.load_dotenv",
      "googleapiclient.discovery",
      "googleapiclient.discovery.Resource",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "logging",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator.handle_stream_detected",
      "modules.platform_integration.stream_resolver.no_quota_stream_checker",
      "modules.platform_integration.stream_resolver.no_quota_stream_checker.NoQuotaStreamChecker",
      "modules.platform_integration.youtube_auth.src.quota_tester",
      "modules.platform_integration.youtube_auth.src.quota_tester.QuotaTester",
      "modules.platform_integration.youtube_auth.src.quota_tester.get_best_credential_set",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "random",
      "sys",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.logging_config",
      "utils.logging_config.setup_logging",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.communication.livechat._archive.archived_bloat_functions",
      "modules.communication.livechat._archive.experimental_2025_09_19.stream_coordinator",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_system_tests",
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple",
      "modules.communication.livechat.tests.integration.test_intensive_monitoring",
      "modules.communication.livechat.tests.system_tests.run_system_tests",
      "modules.communication.livechat.tests.system_tests.run_tests_simple",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test",
      "modules.platform_integration.stream_resolver.__init__",
      "modules.platform_integration.stream_resolver.tests.test_circuit_breaker",
      "modules.platform_integration.stream_resolver.tests.test_edge_cases",
      "modules.platform_integration.stream_resolver.tests.test_quota_intelligence",
      "modules.platform_integration.stream_resolver.tests.test_stream_resolver",
      "modules.platform_integration.stream_resolver.tests.test_video",
      "modules.platform_integration.utilities.oauth_management.tests.test_optimizations",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy_fixed"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.src.stream_resolver_backup": {
    "module": "modules.platform_integration.stream_resolver.src.stream_resolver_backup",
    "path": "modules\\platform_integration\\stream_resolver\\src\\stream_resolver_backup.py",
    "lines": 353,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "googleapiclient.discovery",
      "googleapiclient.discovery.Resource",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "logging",
      "os",
      "random",
      "sys",
      "time",
      "typing",
      "typing.Optional",
      "typing.Tuple",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.logging_config",
      "utils.logging_config.setup_logging",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service",
      "utils.oauth_manager.get_authenticated_service_with_fallback"
    ],
    "incoming": [
      "modules.platform_integration.stream_resolver.tests.test_stream_resolver_backup"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.src.stream_search_manager": {
    "module": "modules.platform_integration.stream_resolver.src.stream_search_manager",
    "path": "modules\\platform_integration\\stream_resolver\\src\\stream_search_manager.py",
    "lines": 115,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "logging",
      "time",
      "typing",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.stream_resolver.src.__init__": {
    "module": "modules.platform_integration.stream_resolver.src.__init__",
    "path": "modules\\platform_integration\\stream_resolver\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_circuit_breaker": {
    "module": "modules.platform_integration.stream_resolver.tests.test_circuit_breaker",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_circuit_breaker.py",
    "lines": 296,
    "imports": [
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.CircuitBreaker",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolverError",
      "modules.platform_integration.stream_resolver.src.stream_resolver.circuit_breaker",
      "os",
      "pytest",
      "sys",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_edge_cases": {
    "module": "modules.platform_integration.stream_resolver.tests.test_edge_cases",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_edge_cases.py",
    "lines": 169,
    "imports": [
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.QuotaExceededError",
      "modules.platform_integration.stream_resolver.src.stream_resolver.check_video_details",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_active_livestream_video_id",
      "modules.platform_integration.stream_resolver.src.stream_resolver.search_livestreams",
      "os",
      "pytest",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_no_quota_anti_rate_limit": {
    "module": "modules.platform_integration.stream_resolver.tests.test_no_quota_anti_rate_limit",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_no_quota_anti_rate_limit.py",
    "lines": 323,
    "imports": [
      "os",
      "requests",
      "src.no_quota_stream_checker",
      "src.no_quota_stream_checker.NoQuotaStreamChecker",
      "sys",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.call",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_quota_intelligence": {
    "module": "modules.platform_integration.stream_resolver.tests.test_quota_intelligence",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_quota_intelligence.py",
    "lines": 349,
    "imports": [
      "collections",
      "collections.Counter",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "json",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.find_active_stream",
      "modules.platform_integration.stream_resolver.src.stream_resolver.search_livestreams_enhanced",
      "os",
      "pytz",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.call",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_stream_resolver": {
    "module": "modules.platform_integration.stream_resolver.tests.test_stream_resolver",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_stream_resolver.py",
    "lines": 885,
    "imports": [
      "googleapiclient.errors",
      "io",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.FORCE_DEV_DELAY",
      "modules.platform_integration.stream_resolver.src.stream_resolver.QuotaExceededError",
      "modules.platform_integration.stream_resolver.src.stream_resolver.calculate_dynamic_delay",
      "modules.platform_integration.stream_resolver.src.stream_resolver.check_video_details",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_active_livestream_video_id",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_authenticated_service_with_fallback",
      "modules.platform_integration.stream_resolver.src.stream_resolver.mask_sensitive_id",
      "modules.platform_integration.stream_resolver.src.stream_resolver.search_livestreams",
      "os",
      "pytest",
      "random",
      "subprocess",
      "sys",
      "tempfile",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_stream_resolver_backup": {
    "module": "modules.platform_integration.stream_resolver.tests.test_stream_resolver_backup",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_stream_resolver_backup.py",
    "lines": 29,
    "imports": [
      "modules.platform_integration.stream_resolver.src.stream_resolver_backup",
      "modules.platform_integration.stream_resolver.src.stream_resolver_backup.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.test_video": {
    "module": "modules.platform_integration.stream_resolver.tests.test_video",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\test_video.py",
    "lines": 51,
    "imports": [
      "logging",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.check_video_details",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "utils.env_loader",
      "utils.env_loader.get_env_variable",
      "utils.logging_config",
      "utils.logging_config.setup_logging"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.stream_resolver.tests.__init__": {
    "module": "modules.platform_integration.stream_resolver.tests.__init__",
    "path": "modules\\platform_integration\\stream_resolver\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.token_manager": {
    "module": "modules.platform_integration.utilities.blockchain_integration.token_manager",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\token_manager.py",
    "lines": 64,
    "imports": [
      "logging",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.utilities.blockchain_integration.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.__init__": {
    "module": "modules.platform_integration.utilities.blockchain_integration.__init__",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\__init__.py",
    "lines": 9,
    "imports": [
      "modules.platform_integration.utilities.blockchain_integration.token_manager",
      "modules.platform_integration.utilities.blockchain_integration.token_manager.TokenManager"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.__init__": {
    "module": "modules.platform_integration.utilities.consent_engine.__init__",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.__init__": {
    "module": "modules.platform_integration.utilities.oauth_management.__init__",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\__init__.py",
    "lines": 22,
    "imports": [
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager",
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager.OAuthManager",
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager.QuotaManager",
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager.get_authenticated_service",
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager.get_authenticated_service_with_fallback",
      "modules.platform_integration.utilities.oauth_management.src.oauth_manager.quota_manager"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.__init__": {
    "module": "modules.platform_integration.utilities.token_manager.__init__",
    "path": "modules\\platform_integration\\utilities\\token_manager\\__init__.py",
    "lines": 9,
    "imports": [
      "modules.platform_integration.utilities.token_manager.src.token_manager",
      "modules.platform_integration.utilities.token_manager.src.token_manager.TokenManager",
      "modules.platform_integration.utilities.token_manager.src.token_manager.token_manager"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.ab_testing.src.agent_ab_tester": {
    "module": "modules.platform_integration.utilities.ab_testing.src.agent_ab_tester",
    "path": "modules\\platform_integration\\utilities\\ab_testing\\src\\agent_ab_tester.py",
    "lines": 361,
    "imports": [
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.scripts.validate": {
    "module": "modules.platform_integration.utilities.blockchain_integration.scripts.validate",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.src.blockchain_integration": {
    "module": "modules.platform_integration.utilities.blockchain_integration.src.blockchain_integration",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\src\\blockchain_integration.py",
    "lines": 359,
    "imports": [
      "datetime",
      "datetime.datetime",
      "hashlib",
      "json",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "uuid"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.src.__init__": {
    "module": "modules.platform_integration.utilities.blockchain_integration.src.__init__",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\src\\__init__.py",
    "lines": 1,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.tests.test_blockchain_integration": {
    "module": "modules.platform_integration.utilities.blockchain_integration.tests.test_blockchain_integration",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\tests\\test_blockchain_integration.py",
    "lines": 49,
    "imports": [
      "blockchain_integration",
      "blockchain_integration.BlockchainIntegration",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.utilities.blockchain_integration.tests.__init__": {
    "module": "modules.platform_integration.utilities.blockchain_integration.tests.__init__",
    "path": "modules\\platform_integration\\utilities\\blockchain_integration\\tests\\__init__.py",
    "lines": 3,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.scripts.validate": {
    "module": "modules.platform_integration.utilities.consent_engine.scripts.validate",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.src.consent_engine": {
    "module": "modules.platform_integration.utilities.consent_engine.src.consent_engine",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\src\\consent_engine.py",
    "lines": 565,
    "imports": [
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "json",
      "logging",
      "pathlib",
      "pathlib.Path",
      "threading",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Set",
      "uuid"
    ],
    "incoming": [
      "modules.platform_integration.utilities.consent_engine.src.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.src.__init__": {
    "module": "modules.platform_integration.utilities.consent_engine.src.__init__",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\src\\__init__.py",
    "lines": 10,
    "imports": [
      "modules.platform_integration.utilities.consent_engine.src.consent_engine",
      "modules.platform_integration.utilities.consent_engine.src.consent_engine.ConsentEngine",
      "modules.platform_integration.utilities.consent_engine.src.consent_engine.ConsentRequest",
      "modules.platform_integration.utilities.consent_engine.src.consent_engine.ConsentStatus"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.tests.test_consent_engine": {
    "module": "modules.platform_integration.utilities.consent_engine.tests.test_consent_engine",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\tests\\test_consent_engine.py",
    "lines": 13,
    "imports": [
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.utilities.consent_engine.tests.__init__": {
    "module": "modules.platform_integration.utilities.consent_engine.tests.__init__",
    "path": "modules\\platform_integration\\utilities\\consent_engine\\tests\\__init__.py",
    "lines": 7,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.scripts.refresh_tokens": {
    "module": "modules.platform_integration.utilities.oauth_management.scripts.refresh_tokens",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\scripts\\refresh_tokens.py",
    "lines": 95,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.scripts.validate": {
    "module": "modules.platform_integration.utilities.oauth_management.scripts.validate",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.src.oauth_manager": {
    "module": "modules.platform_integration.utilities.oauth_management.src.oauth_manager",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\src\\oauth_manager.py",
    "lines": 672,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "dotenv",
      "dotenv.load_dotenv",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "logging",
      "os",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional",
      "typing.Tuple",
      "utils.logging_config",
      "utils.logging_config.setup_logging"
    ],
    "incoming": [
      "modules.platform_integration.utilities.oauth_management.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.src.__init__": {
    "module": "modules.platform_integration.utilities.oauth_management.src.__init__",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.tests.show_credential_mapping": {
    "module": "modules.platform_integration.utilities.oauth_management.tests.show_credential_mapping",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\tests\\show_credential_mapping.py",
    "lines": 95,
    "imports": [
      "json",
      "os",
      "sys",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.tests.test_credential_rotation": {
    "module": "modules.platform_integration.utilities.oauth_management.tests.test_credential_rotation",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\tests\\test_credential_rotation.py",
    "lines": 159,
    "imports": [
      "logging",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service_with_fallback",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.tests.test_oauth_manager": {
    "module": "modules.platform_integration.utilities.oauth_management.tests.test_oauth_manager",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\tests\\test_oauth_manager.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.tests.test_oauth_rotation_validation": {
    "module": "modules.platform_integration.utilities.oauth_management.tests.test_oauth_rotation_validation",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\tests\\test_oauth_rotation_validation.py",
    "lines": 433,
    "imports": [
      "datetime",
      "datetime.datetime",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "logging",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_authenticated_service_with_fallback",
      "modules.infrastructure.oauth_management.src.oauth_manager.quota_manager",
      "os",
      "sys",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.oauth_management.tests.test_optimizations": {
    "module": "modules.platform_integration.utilities.oauth_management.tests.test_optimizations",
    "path": "modules\\platform_integration\\utilities\\oauth_management\\tests\\test_optimizations.py",
    "lines": 97,
    "imports": [
      "datetime",
      "datetime.datetime",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.circuit_breaker",
      "os",
      "sys",
      "time",
      "utils.oauth_manager",
      "utils.oauth_manager.get_authenticated_service_with_fallback",
      "utils.oauth_manager.quota_manager"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.scripts.validate": {
    "module": "modules.platform_integration.utilities.token_manager.scripts.validate",
    "path": "modules\\platform_integration\\utilities\\token_manager\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.src.token_manager": {
    "module": "modules.platform_integration.utilities.token_manager.src.token_manager",
    "path": "modules\\platform_integration\\utilities\\token_manager\\src\\token_manager.py",
    "lines": 193,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "logging",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.get_oauth_token_file",
      "os",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.utilities.token_manager.__init__"
    ],
    "has_main_guard": false,
    "recommendation": "review",
    "notes": [
      "Single inbound reference; verify necessity."
    ]
  },
  "modules.platform_integration.utilities.token_manager.src.__init__": {
    "module": "modules.platform_integration.utilities.token_manager.src.__init__",
    "path": "modules\\platform_integration\\utilities\\token_manager\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.tests.test_token_manager": {
    "module": "modules.platform_integration.utilities.token_manager.tests.test_token_manager",
    "path": "modules\\platform_integration\\utilities\\token_manager\\tests\\test_token_manager.py",
    "lines": 54,
    "imports": [
      "asyncio",
      "logging",
      "modules.infrastructure.token_manager.src.token_manager",
      "modules.infrastructure.token_manager.src.token_manager.TokenManager",
      "pytest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.tests.test_token_manager_coverage": {
    "module": "modules.platform_integration.utilities.token_manager.tests.test_token_manager_coverage",
    "path": "modules\\platform_integration\\utilities\\token_manager\\tests\\test_token_manager_coverage.py",
    "lines": 314,
    "imports": [
      "asyncio",
      "modules.infrastructure.token_manager.src.token_manager",
      "modules.infrastructure.token_manager.src.token_manager.TokenManager",
      "pytest",
      "time",
      "unittest",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.utilities.token_manager.tests.__init__": {
    "module": "modules.platform_integration.utilities.token_manager.tests.__init__",
    "path": "modules\\platform_integration\\utilities\\token_manager\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.scripts.validate": {
    "module": "modules.platform_integration.x_twitter.scripts.validate",
    "path": "modules\\platform_integration\\x_twitter\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.src.simple_x_poster": {
    "module": "modules.platform_integration.x_twitter.src.simple_x_poster",
    "path": "modules\\platform_integration\\x_twitter\\src\\simple_x_poster.py",
    "lines": 161,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "os",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.src.trigger_x_post": {
    "module": "modules.platform_integration.x_twitter.src.trigger_x_post",
    "path": "modules\\platform_integration\\x_twitter\\src\\trigger_x_post.py",
    "lines": 67,
    "imports": [
      "json",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster",
      "modules.platform_integration.x_twitter.src.x_anti_detection_poster.AntiDetectionX",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.src.x_anti_detection_poster": {
    "module": "modules.platform_integration.x_twitter.src.x_anti_detection_poster",
    "path": "modules\\platform_integration\\x_twitter\\src\\x_anti_detection_poster.py",
    "lines": 834,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor",
      "modules.platform_integration.social_media_orchestrator.src.post_safety_monitor.detect_and_fix_duplicate",
      "os",
      "pickle",
      "random",
      "re",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.action_chains",
      "selenium.webdriver.common.action_chains.ActionChains",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "subprocess",
      "time",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.Optional"
    ],
    "incoming": [
      "modules.platform_integration.social_media_orchestrator.src.multi_account_manager",
      "modules.platform_integration.social_media_orchestrator.src.simple_posting_orchestrator",
      "modules.platform_integration.x_twitter.src.trigger_x_post"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.src.x_twitter_dae": {
    "module": "modules.platform_integration.x_twitter.src.x_twitter_dae",
    "path": "modules\\platform_integration\\x_twitter\\src\\x_twitter_dae.py",
    "lines": 1052,
    "imports": [
      "asyncio",
      "cryptography.hazmat.primitives",
      "cryptography.hazmat.primitives.asymmetric",
      "cryptography.hazmat.primitives.asymmetric.padding",
      "cryptography.hazmat.primitives.asymmetric.rsa",
      "cryptography.hazmat.primitives.hashes",
      "cryptography.hazmat.primitives.serialization",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "enum",
      "enum.Enum",
      "hashlib",
      "json",
      "logging",
      "modules.wre_core.src.components.module_development.module_development_coordinator",
      "modules.wre_core.src.components.module_development.module_development_coordinator.ModuleDevelopmentCoordinator",
      "modules.wre_core.src.components.utils.wre_logger",
      "modules.wre_core.src.components.utils.wre_logger.wre_log",
      "modules.wre_core.src.prometheus_orchestration_engine",
      "modules.wre_core.src.prometheus_orchestration_engine.PrometheusOrchestrationEngine",
      "pathlib",
      "pathlib.Path",
      "random",
      "tweepy",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Union",
      "uuid"
    ],
    "incoming": [
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.platform_integration.x_twitter.src.__init__"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.src.__init__": {
    "module": "modules.platform_integration.x_twitter.src.__init__",
    "path": "modules\\platform_integration\\x_twitter\\src\\__init__.py",
    "lines": 38,
    "imports": [
      "modules.platform_integration.x_twitter.src.x_twitter_dae",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.AuthenticationLevel",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.AutonomousPost",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.CABREngine",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.CABRInteraction",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.CommunicationMode",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.DAEAuthenticator",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.DAEIdentity",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.DAEIdentityState",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.SocialEngagementToken",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.XTwitterDAENode",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.create_x_twitter_dae_node",
      "modules.platform_integration.x_twitter.src.x_twitter_dae.test_x_twitter_dae"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.debug_x_content": {
    "module": "modules.platform_integration.x_twitter.tests.debug_x_content",
    "path": "modules\\platform_integration\\x_twitter\\tests\\debug_x_content.py",
    "lines": 167,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.debug_x_post": {
    "module": "modules.platform_integration.x_twitter.tests.debug_x_post",
    "path": "modules\\platform_integration\\x_twitter\\tests\\debug_x_post.py",
    "lines": 194,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.action_chains",
      "selenium.webdriver.common.action_chains.ActionChains",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.find_post_button": {
    "module": "modules.platform_integration.x_twitter.tests.find_post_button",
    "path": "modules\\platform_integration\\x_twitter\\tests\\find_post_button.py",
    "lines": 101,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.map_x_buttons": {
    "module": "modules.platform_integration.x_twitter.tests.map_x_buttons",
    "path": "modules\\platform_integration\\x_twitter\\tests\\map_x_buttons.py",
    "lines": 140,
    "imports": [
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.poc_x_anti_detection": {
    "module": "modules.platform_integration.x_twitter.tests.poc_x_anti_detection",
    "path": "modules\\platform_integration\\x_twitter\\tests\\poc_x_anti_detection.py",
    "lines": 98,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "traceback",
      "x_anti_detection_poster",
      "x_anti_detection_poster.AntiDetectionX"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.simple_x_post": {
    "module": "modules.platform_integration.x_twitter.tests.simple_x_post",
    "path": "modules\\platform_integration\\x_twitter\\tests\\simple_x_post.py",
    "lines": 215,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "os",
      "selenium",
      "selenium.webdriver",
      "selenium.webdriver.chrome.options",
      "selenium.webdriver.chrome.options.Options",
      "selenium.webdriver.common.by",
      "selenium.webdriver.common.by.By",
      "selenium.webdriver.common.keys",
      "selenium.webdriver.common.keys.Keys",
      "selenium.webdriver.support",
      "selenium.webdriver.support.expected_conditions",
      "selenium.webdriver.support.ui",
      "selenium.webdriver.support.ui.WebDriverWait",
      "time",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.x_twitter.tests.test_x_twitter_dae": {
    "module": "modules.platform_integration.x_twitter.tests.test_x_twitter_dae",
    "path": "modules\\platform_integration\\x_twitter\\tests\\test_x_twitter_dae.py",
    "lines": 29,
    "imports": [],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set1": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set1",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set1.py",
    "lines": 82,
    "imports": [
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set10": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set10",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set10.py",
    "lines": 77,
    "imports": [
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set5": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set5",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set5.py",
    "lines": 49,
    "imports": [
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set6": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set6",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set6.py",
    "lines": 97,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set7": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set7",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set7.py",
    "lines": 97,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set8": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set8",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set8.py",
    "lines": 77,
    "imports": [
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_set9": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_set9",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_set9.py",
    "lines": 77,
    "imports": [
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.authorize_sets_8_9_10": {
    "module": "modules.platform_integration.youtube_auth.scripts.authorize_sets_8_9_10",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\authorize_sets_8_9_10.py",
    "lines": 159,
    "imports": [
      "argparse",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.check_all_quota_usage": {
    "module": "modules.platform_integration.youtube_auth.scripts.check_all_quota_usage",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\check_all_quota_usage.py",
    "lines": 219,
    "imports": [
      "datetime",
      "datetime.datetime",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.check_all_tokens": {
    "module": "modules.platform_integration.youtube_auth.scripts.check_all_tokens",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\check_all_tokens.py",
    "lines": 153,
    "imports": [
      "datetime",
      "datetime.datetime",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.community_quota_setup": {
    "module": "modules.platform_integration.youtube_auth.scripts.community_quota_setup",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\community_quota_setup.py",
    "lines": 290,
    "imports": [
      "argparse",
      "datetime",
      "datetime.datetime",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "src.quota_intelligence",
      "src.quota_intelligence.QuotaIntelligence",
      "src.quota_monitor",
      "src.quota_monitor.QuotaMonitor",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.fix_set3_account": {
    "module": "modules.platform_integration.youtube_auth.scripts.fix_set3_account",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\fix_set3_account.py",
    "lines": 66,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.force_credential_rotation": {
    "module": "modules.platform_integration.youtube_auth.scripts.force_credential_rotation",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\force_credential_rotation.py",
    "lines": 87,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "pytz",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.fresh_auth_set5": {
    "module": "modules.platform_integration.youtube_auth.scripts.fresh_auth_set5",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\fresh_auth_set5.py",
    "lines": 80,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.monitor_quota_usage": {
    "module": "modules.platform_integration.youtube_auth.scripts.monitor_quota_usage",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\monitor_quota_usage.py",
    "lines": 154,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "time"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.quota_dashboard": {
    "module": "modules.platform_integration.youtube_auth.scripts.quota_dashboard",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\quota_dashboard.py",
    "lines": 309,
    "imports": [
      "argparse",
      "datetime",
      "datetime.datetime",
      "json",
      "os",
      "src.quota_intelligence",
      "src.quota_intelligence.QuotaIntelligence",
      "src.quota_monitor",
      "src.quota_monitor.QuotaMonitor",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.reauthorize_set1": {
    "module": "modules.platform_integration.youtube_auth.scripts.reauthorize_set1",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\reauthorize_set1.py",
    "lines": 91,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.reauthorize_set2": {
    "module": "modules.platform_integration.youtube_auth.scripts.reauthorize_set2",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\reauthorize_set2.py",
    "lines": 93,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.reauthorize_set3": {
    "module": "modules.platform_integration.youtube_auth.scripts.reauthorize_set3",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\reauthorize_set3.py",
    "lines": 92,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.reauthorize_set5": {
    "module": "modules.platform_integration.youtube_auth.scripts.reauthorize_set5",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\reauthorize_set5.py",
    "lines": 60,
    "imports": [
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.reauthorize_set6": {
    "module": "modules.platform_integration.youtube_auth.scripts.reauthorize_set6",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\reauthorize_set6.py",
    "lines": 62,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.show_active_sets": {
    "module": "modules.platform_integration.youtube_auth.scripts.show_active_sets",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\show_active_sets.py",
    "lines": 65,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.show_project_status": {
    "module": "modules.platform_integration.youtube_auth.scripts.show_project_status",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\show_project_status.py",
    "lines": 197,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "json",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.validate": {
    "module": "modules.platform_integration.youtube_auth.scripts.validate",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.verify_accounts": {
    "module": "modules.platform_integration.youtube_auth.scripts.verify_accounts",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\verify_accounts.py",
    "lines": 104,
    "imports": [
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.scripts.view_quota_status": {
    "module": "modules.platform_integration.youtube_auth.scripts.view_quota_status",
    "path": "modules\\platform_integration\\youtube_auth\\scripts\\view_quota_status.py",
    "lines": 49,
    "imports": [
      "json",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.mcp_quota_server": {
    "module": "modules.platform_integration.youtube_auth.src.mcp_quota_server",
    "path": "modules\\platform_integration\\youtube_auth\\src\\mcp_quota_server.py",
    "lines": 483,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.asdict",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "logging",
      "mcp",
      "mcp.Resource",
      "mcp.Server",
      "mcp.Tool",
      "pathlib",
      "pathlib.Path",
      "quota_monitor",
      "quota_monitor.QuotaMonitor",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.monitored_youtube_service": {
    "module": "modules.platform_integration.youtube_auth.src.monitored_youtube_service",
    "path": "modules\\platform_integration\\youtube_auth\\src\\monitored_youtube_service.py",
    "lines": 162,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "typing",
      "typing.Any"
    ],
    "incoming": [
      "modules.platform_integration.youtube_auth.tests.test_async_throttling",
      "modules.platform_integration.youtube_auth.tests.test_throttling_gateway"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.quota_intelligence": {
    "module": "modules.platform_integration.youtube_auth.src.quota_intelligence",
    "path": "modules\\platform_integration\\youtube_auth\\src\\quota_intelligence.py",
    "lines": 437,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "logging",
      "modules.platform_integration.youtube_auth.quota_monitor",
      "modules.platform_integration.youtube_auth.quota_monitor.QuotaMonitor",
      "pytz",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "typing.Union"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_auth.src.quota_monitor": {
    "module": "modules.platform_integration.youtube_auth.src.quota_monitor",
    "path": "modules\\platform_integration\\youtube_auth\\src\\quota_monitor.py",
    "lines": 449,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "dotenv",
      "dotenv.load_dotenv",
      "json",
      "logging",
      "os",
      "pathlib",
      "pathlib.Path",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.platform_integration.youtube_auth.scripts.check_all_quota_usage",
      "modules.platform_integration.youtube_auth.scripts.show_project_status",
      "modules.platform_integration.youtube_auth.scripts.view_quota_status",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.tests.test_credential_sets",
      "modules.platform_integration.youtube_auth.tests.test_throttling_gateway"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.quota_tester": {
    "module": "modules.platform_integration.youtube_auth.src.quota_tester",
    "path": "modules\\platform_integration\\youtube_auth\\src\\quota_tester.py",
    "lines": 312,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "zoneinfo",
      "zoneinfo.ZoneInfo"
    ],
    "incoming": [
      "modules.platform_integration.stream_resolver.src.stream_resolver"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.youtube_auth": {
    "module": "modules.platform_integration.youtube_auth.src.youtube_auth",
    "path": "modules\\platform_integration\\youtube_auth\\src\\youtube_auth.py",
    "lines": 294,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google_auth_oauthlib.flow",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "logging",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.get_available_credential_sets",
      "os",
      "time",
      "utils.logging_config",
      "utils.logging_config.setup_logging"
    ],
    "incoming": [
      "modules.communication.livechat._archive.legacy_tests_2025_09_10.tests.system_tests.run_tests_simple",
      "modules.communication.livechat.tests.system_tests.run_tests_simple",
      "modules.communication.video_comments.src.comment_monitor_dae",
      "modules.communication.video_comments.src.realtime_comment_dialogue",
      "modules.communication.video_comments.tests.test_like_single_comment",
      "modules.communication.video_comments.tests.test_move2japan_access",
      "modules.communication.video_comments.tests.test_poc_dialogue",
      "modules.communication.video_comments.tests.test_post_comment",
      "modules.communication.video_comments.tests.test_reply_to_comment",
      "modules.infrastructure.system_health_monitor.tests.detailed_workflow_test",
      "modules.infrastructure.system_health_monitor.tests.system_integration_test",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.tests.test_video",
      "modules.platform_integration.youtube_auth.__init__",
      "modules.platform_integration.youtube_auth.scripts.authorize_set5",
      "modules.platform_integration.youtube_auth.scripts.authorize_set6",
      "modules.platform_integration.youtube_auth.scripts.authorize_set7",
      "modules.platform_integration.youtube_auth.scripts.check_all_quota_usage",
      "modules.platform_integration.youtube_auth.scripts.fix_set3_account",
      "modules.platform_integration.youtube_auth.scripts.fresh_auth_set5",
      "modules.platform_integration.youtube_auth.scripts.monitor_quota_usage",
      "modules.platform_integration.youtube_auth.scripts.reauthorize_set1",
      "modules.platform_integration.youtube_auth.scripts.reauthorize_set2",
      "modules.platform_integration.youtube_auth.scripts.reauthorize_set3",
      "modules.platform_integration.youtube_auth.scripts.reauthorize_set5",
      "modules.platform_integration.youtube_auth.scripts.reauthorize_set6",
      "modules.platform_integration.youtube_auth.scripts.show_active_sets",
      "modules.platform_integration.youtube_auth.scripts.show_project_status",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service",
      "modules.platform_integration.youtube_auth.src.quota_tester",
      "modules.platform_integration.youtube_auth.tests.move2japan_demo",
      "modules.platform_integration.youtube_auth.tests.quota_tester",
      "modules.platform_integration.youtube_auth.tests.test_async_throttling",
      "modules.platform_integration.youtube_auth.tests.test_channel",
      "modules.platform_integration.youtube_auth.tests.test_comment_apis",
      "modules.platform_integration.youtube_auth.tests.test_credential_sets",
      "modules.platform_integration.youtube_auth.tests.test_move2japan_comments",
      "modules.platform_integration.youtube_auth.tests.test_throttling_gateway",
      "modules.platform_integration.youtube_auth.tests.test_youtube_auth",
      "modules.platform_integration.youtube_auth.tests.test_youtube_auth_coverage"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.src.__init__": {
    "module": "modules.platform_integration.youtube_auth.src.__init__",
    "path": "modules\\platform_integration\\youtube_auth\\src\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.move2japan_api_test": {
    "module": "modules.platform_integration.youtube_auth.tests.move2japan_api_test",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\move2japan_api_test.py",
    "lines": 262,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "os",
      "requests",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.move2japan_demo": {
    "module": "modules.platform_integration.youtube_auth.tests.move2japan_demo",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\move2japan_demo.py",
    "lines": 73,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.like_comment",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.quota_tester": {
    "module": "modules.platform_integration.youtube_auth.tests.quota_tester",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\quota_tester.py",
    "lines": 312,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "time",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "zoneinfo",
      "zoneinfo.ZoneInfo"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_async_throttling": {
    "module": "modules.platform_integration.youtube_auth.tests.test_async_throttling",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_async_throttling.py",
    "lines": 95,
    "imports": [
      "asyncio",
      "logging",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service.create_monitored_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_channel": {
    "module": "modules.platform_integration.youtube_auth.tests.test_channel",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_channel.py",
    "lines": 56,
    "imports": [
      "dotenv",
      "dotenv.load_dotenv",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "utils.env_loader",
      "utils.env_loader.get_env_variable"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_comment_apis": {
    "module": "modules.platform_integration.youtube_auth.tests.test_comment_apis",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_comment_apis.py",
    "lines": 164,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_latest_video_id",
      "modules.platform_integration.youtube_auth.src.youtube_auth.like_comment",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "modules.platform_integration.youtube_auth.src.youtube_auth.reply_to_comment",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_credential_sets": {
    "module": "modules.platform_integration.youtube_auth.tests.test_credential_sets",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_credential_sets.py",
    "lines": 119,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.get_available_credential_sets",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_credentials_for_index",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_move2japan_comments": {
    "module": "modules.platform_integration.youtube_auth.tests.test_move2japan_comments",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_move2japan_comments.py",
    "lines": 318,
    "imports": [
      "datetime",
      "datetime.datetime",
      "json",
      "logging",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_latest_video_id",
      "modules.platform_integration.youtube_auth.src.youtube_auth.like_comment",
      "modules.platform_integration.youtube_auth.src.youtube_auth.list_video_comments",
      "modules.platform_integration.youtube_auth.src.youtube_auth.reply_to_comment",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_quota_detailed": {
    "module": "modules.platform_integration.youtube_auth.tests.test_quota_detailed",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_quota_detailed.py",
    "lines": 219,
    "imports": [
      "datetime",
      "datetime.datetime",
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "json",
      "os",
      "sys",
      "traceback"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_quota_monitor": {
    "module": "modules.platform_integration.youtube_auth.tests.test_quota_monitor",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_quota_monitor.py",
    "lines": 354,
    "imports": [
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "shutil",
      "src.quota_monitor",
      "src.quota_monitor.QuotaMonitor",
      "sys",
      "tempfile",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_throttling_gateway": {
    "module": "modules.platform_integration.youtube_auth.tests.test_throttling_gateway",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_throttling_gateway.py",
    "lines": 102,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service",
      "modules.platform_integration.youtube_auth.src.monitored_youtube_service.create_monitored_service",
      "modules.platform_integration.youtube_auth.src.quota_monitor",
      "modules.platform_integration.youtube_auth.src.quota_monitor.QuotaMonitor",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_youtube_auth": {
    "module": "modules.platform_integration.youtube_auth.tests.test_youtube_auth",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_youtube_auth.py",
    "lines": 250,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.test_youtube_auth_coverage": {
    "module": "modules.platform_integration.youtube_auth.tests.test_youtube_auth_coverage",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\test_youtube_auth_coverage.py",
    "lines": 246,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "google_auth_oauthlib.flow",
      "google_auth_oauthlib.flow.InstalledAppFlow",
      "googleapiclient.errors",
      "googleapiclient.errors.HttpError",
      "modules.platform_integration.youtube_auth.src.youtube_auth",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_authenticated_service",
      "modules.platform_integration.youtube_auth.src.youtube_auth.get_credentials_for_index",
      "os",
      "sys",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.mock_open",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_auth.tests.__init__": {
    "module": "modules.platform_integration.youtube_auth.tests.__init__",
    "path": "modules\\platform_integration\\youtube_auth\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.scripts.validate": {
    "module": "modules.platform_integration.youtube_proxy.scripts.validate",
    "path": "modules\\platform_integration\\youtube_proxy\\scripts\\validate.py",
    "lines": 29,
    "imports": [
      "os",
      "pathlib",
      "pathlib.Path",
      "subprocess",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.src.youtube_proxy": {
    "module": "modules.platform_integration.youtube_proxy.src.youtube_proxy",
    "path": "modules\\platform_integration\\youtube_proxy\\src\\youtube_proxy.py",
    "lines": 328,
    "imports": [
      "asyncio",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "logging",
      "modules.ai_intelligence.banter_engine.src.banter_engine",
      "modules.ai_intelligence.banter_engine.src.banter_engine.BanterEngine",
      "modules.communication.livechat.src.livechat_processor",
      "modules.communication.livechat.src.livechat_processor.LiveChatProcessor",
      "modules.infrastructure.agent_management.src.agent_manager",
      "modules.infrastructure.agent_management.src.agent_manager.AgentManager",
      "modules.infrastructure.oauth_management.src.oauth_manager",
      "modules.infrastructure.oauth_management.src.oauth_manager.OAuthManager",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.StreamResolver",
      "sys",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [
      "modules.ai_intelligence.multi_agent_system.src.social_media_orchestrator",
      "modules.ai_intelligence.social_media_dae.src.social_media_dae",
      "modules.development.ide_foundups.src.autonomous_workflows.workflow_orchestrator",
      "modules.foundups.src.foundups_livechat_module",
      "modules.foundups.src.main",
      "modules.platform_integration.youtube_proxy.__init__",
      "modules.platform_integration.youtube_proxy.src.__init__",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy_fixed",
      "modules.platform_integration.youtube_proxy.tests.test_youtube_proxy_fixed"
    ],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.src.youtube_proxy_fixed": {
    "module": "modules.platform_integration.youtube_proxy.src.youtube_proxy_fixed",
    "path": "modules\\platform_integration\\youtube_proxy\\src\\youtube_proxy_fixed.py",
    "lines": 163,
    "imports": [
      "google.auth.transport.requests",
      "google.auth.transport.requests.Request",
      "google.oauth2.credentials",
      "google.oauth2.credentials.Credentials",
      "googleapiclient.discovery",
      "googleapiclient.discovery.build",
      "json",
      "logging",
      "modules.platform_integration.stream_resolver.src.stream_resolver",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_active_livestream_video_id_enhanced",
      "modules.platform_integration.stream_resolver.src.stream_resolver.get_authenticated_service_with_fallback",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "os",
      "pathlib",
      "pathlib.Path",
      "sys",
      "typing",
      "typing.Optional",
      "typing.Tuple"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_proxy.src.__init__": {
    "module": "modules.platform_integration.youtube_proxy.src.__init__",
    "path": "modules\\platform_integration\\youtube_proxy\\src\\__init__.py",
    "lines": 23,
    "imports": [
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.ProxyStatus",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.StreamInfo",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeProxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.YouTubeStream",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.create_youtube_proxy"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.tests.conftest": {
    "module": "modules.platform_integration.youtube_proxy.tests.conftest",
    "path": "modules\\platform_integration\\youtube_proxy\\tests\\conftest.py",
    "lines": 8,
    "imports": [
      "logging",
      "modules.platform_integration.youtube_proxy",
      "modules.platform_integration.youtube_proxy.YouTubeProxy",
      "pytest"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules.platform_integration.youtube_proxy.tests.test_youtube_proxy": {
    "module": "modules.platform_integration.youtube_proxy.tests.test_youtube_proxy",
    "path": "modules\\platform_integration\\youtube_proxy\\tests\\test_youtube_proxy.py",
    "lines": 425,
    "imports": [
      "asyncio",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "modules.platform_integration.youtube_proxy",
      "modules.platform_integration.youtube_proxy.EngagementLevel",
      "modules.platform_integration.youtube_proxy.YouTubeProxy",
      "modules.platform_integration.youtube_proxy.YouTubeStream",
      "modules.platform_integration.youtube_proxy.create_youtube_proxy",
      "pytest",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.List",
      "unittest.mock",
      "unittest.mock.AsyncMock",
      "unittest.mock.MagicMock",
      "unittest.mock.Mock",
      "unittest.mock.patch"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.tests.test_youtube_proxy_fixed": {
    "module": "modules.platform_integration.youtube_proxy.tests.test_youtube_proxy_fixed",
    "path": "modules\\platform_integration\\youtube_proxy\\tests\\test_youtube_proxy_fixed.py",
    "lines": 29,
    "imports": [
      "modules.platform_integration.youtube_proxy.src.youtube_proxy",
      "modules.platform_integration.youtube_proxy.src.youtube_proxy.*",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "incoming": [],
    "has_main_guard": true,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules.platform_integration.youtube_proxy.tests.__init__": {
    "module": "modules.platform_integration.youtube_proxy.tests.__init__",
    "path": "modules\\platform_integration\\youtube_proxy\\tests\\__init__.py",
    "lines": 0,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "keep",
    "notes": [
      "Entry point or package initialiser."
    ]
  },
  "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_analysis_ab": {
    "module": "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_analysis_ab",
    "path": "modules\\_archived_vibecode_2025_09_19\\ai_intelligence\\pqn_alignment\\tests\\test_analysis_ab.py",
    "lines": 31,
    "imports": [
      "modules.ai_intelligence.pqn_alignment.src.analysis_ab",
      "modules.ai_intelligence.pqn_alignment.src.analysis_ab.compare_events",
      "os",
      "tempfile"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_config_loader": {
    "module": "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_config_loader",
    "path": "modules\\_archived_vibecode_2025_09_19\\ai_intelligence\\pqn_alignment\\tests\\test_config_loader.py",
    "lines": 4,
    "imports": [
      "importlib"
    ],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  },
  "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_csv_schema": {
    "module": "modules._archived_vibecode_2025_09_19.ai_intelligence.pqn_alignment.tests.test_csv_schema",
    "path": "modules\\_archived_vibecode_2025_09_19\\ai_intelligence\\pqn_alignment\\tests\\test_csv_schema.py",
    "lines": 14,
    "imports": [],
    "incoming": [],
    "has_main_guard": false,
    "recommendation": "archive",
    "notes": [
      "No inbound references detected."
    ]
  }
}